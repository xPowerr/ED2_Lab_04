

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Aug 07 23:56:49 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    37                           	dabs	1,0x7E,2
    38     0000                     
    39                           ; Version 2.40
    40                           ; Generated 04/07/2022 GMT
    41                           ; 
    42                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution. Publication is not required when
    56                           ;        this file is used in an embedded application.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F887 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74     0000                     	;# 
    75     0001                     	;# 
    76     0002                     	;# 
    77     0003                     	;# 
    78     0004                     	;# 
    79     0005                     	;# 
    80     0006                     	;# 
    81     0007                     	;# 
    82     0008                     	;# 
    83     0009                     	;# 
    84     000A                     	;# 
    85     000B                     	;# 
    86     000C                     	;# 
    87     000D                     	;# 
    88     000E                     	;# 
    89     000E                     	;# 
    90     000F                     	;# 
    91     0010                     	;# 
    92     0011                     	;# 
    93     0012                     	;# 
    94     0013                     	;# 
    95     0014                     	;# 
    96     0015                     	;# 
    97     0015                     	;# 
    98     0016                     	;# 
    99     0017                     	;# 
   100     0018                     	;# 
   101     0019                     	;# 
   102     001A                     	;# 
   103     001B                     	;# 
   104     001B                     	;# 
   105     001C                     	;# 
   106     001D                     	;# 
   107     001E                     	;# 
   108     001F                     	;# 
   109     0081                     	;# 
   110     0085                     	;# 
   111     0086                     	;# 
   112     0087                     	;# 
   113     0088                     	;# 
   114     0089                     	;# 
   115     008C                     	;# 
   116     008D                     	;# 
   117     008E                     	;# 
   118     008F                     	;# 
   119     0090                     	;# 
   120     0091                     	;# 
   121     0092                     	;# 
   122     0093                     	;# 
   123     0093                     	;# 
   124     0093                     	;# 
   125     0094                     	;# 
   126     0095                     	;# 
   127     0096                     	;# 
   128     0097                     	;# 
   129     0098                     	;# 
   130     0099                     	;# 
   131     009A                     	;# 
   132     009B                     	;# 
   133     009C                     	;# 
   134     009D                     	;# 
   135     009E                     	;# 
   136     009F                     	;# 
   137     0105                     	;# 
   138     0107                     	;# 
   139     0108                     	;# 
   140     0109                     	;# 
   141     010C                     	;# 
   142     010C                     	;# 
   143     010D                     	;# 
   144     010E                     	;# 
   145     010F                     	;# 
   146     0185                     	;# 
   147     0187                     	;# 
   148     0188                     	;# 
   149     0189                     	;# 
   150     018C                     	;# 
   151     018D                     	;# 
   152     0000                     	;# 
   153     0001                     	;# 
   154     0002                     	;# 
   155     0003                     	;# 
   156     0004                     	;# 
   157     0005                     	;# 
   158     0006                     	;# 
   159     0007                     	;# 
   160     0008                     	;# 
   161     0009                     	;# 
   162     000A                     	;# 
   163     000B                     	;# 
   164     000C                     	;# 
   165     000D                     	;# 
   166     000E                     	;# 
   167     000E                     	;# 
   168     000F                     	;# 
   169     0010                     	;# 
   170     0011                     	;# 
   171     0012                     	;# 
   172     0013                     	;# 
   173     0014                     	;# 
   174     0015                     	;# 
   175     0015                     	;# 
   176     0016                     	;# 
   177     0017                     	;# 
   178     0018                     	;# 
   179     0019                     	;# 
   180     001A                     	;# 
   181     001B                     	;# 
   182     001B                     	;# 
   183     001C                     	;# 
   184     001D                     	;# 
   185     001E                     	;# 
   186     001F                     	;# 
   187     0081                     	;# 
   188     0085                     	;# 
   189     0086                     	;# 
   190     0087                     	;# 
   191     0088                     	;# 
   192     0089                     	;# 
   193     008C                     	;# 
   194     008D                     	;# 
   195     008E                     	;# 
   196     008F                     	;# 
   197     0090                     	;# 
   198     0091                     	;# 
   199     0092                     	;# 
   200     0093                     	;# 
   201     0093                     	;# 
   202     0093                     	;# 
   203     0094                     	;# 
   204     0095                     	;# 
   205     0096                     	;# 
   206     0097                     	;# 
   207     0098                     	;# 
   208     0099                     	;# 
   209     009A                     	;# 
   210     009B                     	;# 
   211     009C                     	;# 
   212     009D                     	;# 
   213     009E                     	;# 
   214     009F                     	;# 
   215     0105                     	;# 
   216     0107                     	;# 
   217     0108                     	;# 
   218     0109                     	;# 
   219     010C                     	;# 
   220     010C                     	;# 
   221     010D                     	;# 
   222     010E                     	;# 
   223     010F                     	;# 
   224     0185                     	;# 
   225     0187                     	;# 
   226     0188                     	;# 
   227     0189                     	;# 
   228     018C                     	;# 
   229     018D                     	;# 
   230     0000                     	;# 
   231     0001                     	;# 
   232     0002                     	;# 
   233     0003                     	;# 
   234     0004                     	;# 
   235     0005                     	;# 
   236     0006                     	;# 
   237     0007                     	;# 
   238     0008                     	;# 
   239     0009                     	;# 
   240     000A                     	;# 
   241     000B                     	;# 
   242     000C                     	;# 
   243     000D                     	;# 
   244     000E                     	;# 
   245     000E                     	;# 
   246     000F                     	;# 
   247     0010                     	;# 
   248     0011                     	;# 
   249     0012                     	;# 
   250     0013                     	;# 
   251     0014                     	;# 
   252     0015                     	;# 
   253     0015                     	;# 
   254     0016                     	;# 
   255     0017                     	;# 
   256     0018                     	;# 
   257     0019                     	;# 
   258     001A                     	;# 
   259     001B                     	;# 
   260     001B                     	;# 
   261     001C                     	;# 
   262     001D                     	;# 
   263     001E                     	;# 
   264     001F                     	;# 
   265     0081                     	;# 
   266     0085                     	;# 
   267     0086                     	;# 
   268     0087                     	;# 
   269     0088                     	;# 
   270     0089                     	;# 
   271     008C                     	;# 
   272     008D                     	;# 
   273     008E                     	;# 
   274     008F                     	;# 
   275     0090                     	;# 
   276     0091                     	;# 
   277     0092                     	;# 
   278     0093                     	;# 
   279     0093                     	;# 
   280     0093                     	;# 
   281     0094                     	;# 
   282     0095                     	;# 
   283     0096                     	;# 
   284     0097                     	;# 
   285     0098                     	;# 
   286     0099                     	;# 
   287     009A                     	;# 
   288     009B                     	;# 
   289     009C                     	;# 
   290     009D                     	;# 
   291     009E                     	;# 
   292     009F                     	;# 
   293     0105                     	;# 
   294     0107                     	;# 
   295     0108                     	;# 
   296     0109                     	;# 
   297     010C                     	;# 
   298     010C                     	;# 
   299     010D                     	;# 
   300     010E                     	;# 
   301     010F                     	;# 
   302     0185                     	;# 
   303     0187                     	;# 
   304     0188                     	;# 
   305     0189                     	;# 
   306     018C                     	;# 
   307     018D                     	;# 
   308     0000                     	;# 
   309     0001                     	;# 
   310     0002                     	;# 
   311     0003                     	;# 
   312     0004                     	;# 
   313     0005                     	;# 
   314     0006                     	;# 
   315     0007                     	;# 
   316     0008                     	;# 
   317     0009                     	;# 
   318     000A                     	;# 
   319     000B                     	;# 
   320     000C                     	;# 
   321     000D                     	;# 
   322     000E                     	;# 
   323     000E                     	;# 
   324     000F                     	;# 
   325     0010                     	;# 
   326     0011                     	;# 
   327     0012                     	;# 
   328     0013                     	;# 
   329     0014                     	;# 
   330     0015                     	;# 
   331     0015                     	;# 
   332     0016                     	;# 
   333     0017                     	;# 
   334     0018                     	;# 
   335     0019                     	;# 
   336     001A                     	;# 
   337     001B                     	;# 
   338     001B                     	;# 
   339     001C                     	;# 
   340     001D                     	;# 
   341     001E                     	;# 
   342     001F                     	;# 
   343     0081                     	;# 
   344     0085                     	;# 
   345     0086                     	;# 
   346     0087                     	;# 
   347     0088                     	;# 
   348     0089                     	;# 
   349     008C                     	;# 
   350     008D                     	;# 
   351     008E                     	;# 
   352     008F                     	;# 
   353     0090                     	;# 
   354     0091                     	;# 
   355     0092                     	;# 
   356     0093                     	;# 
   357     0093                     	;# 
   358     0093                     	;# 
   359     0094                     	;# 
   360     0095                     	;# 
   361     0096                     	;# 
   362     0097                     	;# 
   363     0098                     	;# 
   364     0099                     	;# 
   365     009A                     	;# 
   366     009B                     	;# 
   367     009C                     	;# 
   368     009D                     	;# 
   369     009E                     	;# 
   370     009F                     	;# 
   371     0105                     	;# 
   372     0107                     	;# 
   373     0108                     	;# 
   374     0109                     	;# 
   375     010C                     	;# 
   376     010C                     	;# 
   377     010D                     	;# 
   378     010E                     	;# 
   379     010F                     	;# 
   380     0185                     	;# 
   381     0187                     	;# 
   382     0188                     	;# 
   383     0189                     	;# 
   384     018C                     	;# 
   385     018D                     	;# 
   386                           
   387                           	psect	strings
   388     0516                     __pstrings:
   389     0516                     stringtab:
   390     0516                     __stringtab:
   391                           
   392                           ;	String table - string pointers are 1 byte each
   393     0516  1BFF               	btfsc	btemp+1,7
   394     0517  2D20               	ljmp	stringcode
   395     0518  1383               	bcf	3,7
   396     0519  187F               	btfsc	btemp+1,0
   397     051A  1783               	bsf	3,7
   398     051B  0800               	movf	0,w
   399     051C  0A84               	incf	4,f
   400     051D  1903               	skipnz
   401     051E  0AFF               	incf	btemp+1,f
   402     051F  0008               	return
   403     0520                     stringcode:
   404     0520                     stringdir:
   405     0520  3005               	movlw	high stringdir
   406     0521  008A               	movwf	10
   407     0522  0804               	movf	4,w
   408     0523  0A84               	incf	4,f
   409     0524  0782               	addwf	2,f
   410     0525                     __stringbase:
   411     0525  3400               	retlw	0
   412     0526                     __end_of__stringtab:
   413     0526                     _dpowers:
   414     0526  3401               	retlw	1
   415     0527  3400               	retlw	0
   416     0528  340A               	retlw	10
   417     0529  3400               	retlw	0
   418     052A  3464               	retlw	100
   419     052B  3400               	retlw	0
   420     052C  34E8               	retlw	232
   421     052D  3403               	retlw	3
   422     052E  3410               	retlw	16
   423     052F  3427               	retlw	39
   424     0530                     __end_of_dpowers:
   425     0006                     _PORTBbits	set	6
   426     0008                     _PORTDbits	set	8
   427     0013                     _SSPBUF	set	19
   428     0014                     _SSPCON	set	20
   429     0009                     _PORTE	set	9
   430     0008                     _PORTD	set	8
   431     0007                     _PORTC	set	7
   432     0006                     _PORTB	set	6
   433     0005                     _PORTA	set	5
   434     0063                     _SSPIF	set	99
   435     005E                     _PEIE	set	94
   436     005F                     _GIE	set	95
   437     0091                     _SSPCON2bits	set	145
   438     0087                     _TRISCbits	set	135
   439     0094                     _SSPSTAT	set	148
   440     0093                     _SSPADD	set	147
   441     0091                     _SSPCON2	set	145
   442     008F                     _OSCCONbits	set	143
   443     0088                     _TRISD	set	136
   444     0086                     _TRISB	set	134
   445     0463                     _SSPIE	set	1123
   446     043C                     _TRISC4	set	1084
   447     043B                     _TRISC3	set	1083
   448     0189                     _ANSELH	set	393
   449     0188                     _ANSEL	set	392
   450     0530                     STR_2:
   451     0530  3425               	retlw	37	;'%'
   452     0531  3464               	retlw	100	;'d'
   453     0532  342E               	retlw	46	;'.'
   454     0533  3425               	retlw	37	;'%'
   455     0534  3464               	retlw	100	;'d'
   456     0535  3425               	retlw	37	;'%'
   457     0536  3464               	retlw	100	;'d'
   458     0537  3456               	retlw	86	;'V'
   459     0538  3400               	retlw	0
   460     0539                     STR_1:
   461     0539  3453               	retlw	83	;'S'
   462     053A  3431               	retlw	49	;'1'
   463     053B  343A               	retlw	58	;':'
   464     053C  3400               	retlw	0
   465                           
   466                           	psect	cinit
   467     000F                     start_initialization:	
   468                           ; #config settings
   469                           
   470     000F                     __initialization:
   471                           
   472                           ; Clear objects allocated to BANK0
   473     000F  1383               	bcf	3,7	;select IRP bank0
   474     0010  3020               	movlw	low __pbssBANK0
   475     0011  0084               	movwf	4
   476     0012  303D               	movlw	low (__pbssBANK0+29)
   477     0013  120A  118A  260B  120A  118A  	fcall	clear_ram0
   478     0018                     end_of_initialization:	
   479                           ;End of C runtime variable initialization code
   480                           
   481     0018                     __end_of__initialization:
   482     0018  0183               	clrf	3
   483     0019  120A  118A  281C   	ljmp	_main	;jump to C main() function
   484                           
   485                           	psect	bssBANK0
   486     0020                     __pbssBANK0:
   487     0020                     _centesima1:
   488     0020                     	ds	2
   489     0022                     _decima1:
   490     0022                     	ds	2
   491     0024                     _unidad1:
   492     0024                     	ds	2
   493     0026                     _vol1:
   494     0026                     	ds	2
   495     0028                     _voltaje1:
   496     0028                     	ds	1
   497     0029                     _buffer:
   498     0029                     	ds	20
   499                           
   500                           	psect	clrtext
   501     060B                     clear_ram0:	
   502                           ;	Called with FSR containing the base address, and
   503                           ;	W with the last address+1
   504                           
   505     060B  0064               	clrwdt	;clear the watchdog before getting into this loop
   506     060C                     clrloop0:
   507     060C  0180               	clrf	0	;clear RAM location pointed to by FSR
   508     060D  0A84               	incf	4,f	;increment pointer
   509     060E  0604               	xorwf	4,w	;XOR with final address
   510     060F  1903               	btfsc	3,2	;have we reached the end yet?
   511     0610  3400               	retlw	0	;all done for this memory range, return
   512     0611  0604               	xorwf	4,w	;XOR again to restore value
   513     0612  2E0C               	goto	clrloop0	;do the next byte
   514                           
   515                           	psect	cstackCOMMON
   516     0070                     __pcstackCOMMON:
   517     0070                     ?_setup:
   518     0070                     ?_Lcd_Init:	
   519                           ; 1 bytes @ 0x0
   520                           
   521     0070                     ?_Lcd_Clear:	
   522                           ; 1 bytes @ 0x0
   523                           
   524     0070                     ?_I2C_Master_Start:	
   525                           ; 1 bytes @ 0x0
   526                           
   527     0070                     ?_I2C_Master_Stop:	
   528                           ; 1 bytes @ 0x0
   529                           
   530     0070                     ?_main:	
   531                           ; 1 bytes @ 0x0
   532                           
   533     0070                     ?_isr:	
   534                           ; 1 bytes @ 0x0
   535                           
   536     0070                     ??_isr:	
   537                           ; 1 bytes @ 0x0
   538                           
   539     0070                     ?_I2C_Master_Wait:	
   540                           ; 1 bytes @ 0x0
   541                           
   542     0070                     ?_Lcd_Port:	
   543                           ; 1 bytes @ 0x0
   544                           
   545     0070                     ?_Lcd_Cmd:	
   546                           ; 1 bytes @ 0x0
   547                           
   548     0070                     ?_Lcd_Write_Char:	
   549                           ; 1 bytes @ 0x0
   550                           
   551                           
   552                           ; 1 bytes @ 0x0
   553     0070                     	ds	2
   554     0072                     ??_I2C_Master_Start:
   555     0072                     ?_I2C_Master_Write:	
   556                           ; 1 bytes @ 0x2
   557                           
   558     0072                     ??_I2C_Master_Stop:	
   559                           ; 1 bytes @ 0x2
   560                           
   561     0072                     ??_I2C_Master_Wait:	
   562                           ; 1 bytes @ 0x2
   563                           
   564     0072                     ??_Lcd_Port:	
   565                           ; 1 bytes @ 0x2
   566                           
   567     0072                     ?_I2C_Master_Read:	
   568                           ; 1 bytes @ 0x2
   569                           
   570     0072                     ?___wmul:	
   571                           ; 2 bytes @ 0x2
   572                           
   573     0072                     ?___lwdiv:	
   574                           ; 2 bytes @ 0x2
   575                           
   576     0072                     ?___lldiv:	
   577                           ; 2 bytes @ 0x2
   578                           
   579     0072                     Lcd_Port@a:	
   580                           ; 4 bytes @ 0x2
   581                           
   582     0072                     I2C_Master_Write@d:	
   583                           ; 1 bytes @ 0x2
   584                           
   585     0072                     I2C_Master_Read@a:	
   586                           ; 2 bytes @ 0x2
   587                           
   588     0072                     ___wmul@multiplier:	
   589                           ; 2 bytes @ 0x2
   590                           
   591     0072                     ___lwdiv@divisor:	
   592                           ; 2 bytes @ 0x2
   593                           
   594     0072                     ___lldiv@divisor:	
   595                           ; 2 bytes @ 0x2
   596                           
   597                           
   598                           ; 4 bytes @ 0x2
   599     0072                     	ds	1
   600     0073                     ??_Lcd_Cmd:
   601     0073                     ??_Lcd_Write_Char:	
   602                           ; 1 bytes @ 0x3
   603                           
   604                           
   605                           ; 1 bytes @ 0x3
   606     0073                     	ds	1
   607     0074                     ??_I2C_Master_Write:
   608     0074                     ??_I2C_Master_Read:	
   609                           ; 1 bytes @ 0x4
   610                           
   611     0074                     Lcd_Write_Char@a:	
   612                           ; 1 bytes @ 0x4
   613                           
   614     0074                     ___wmul@multiplicand:	
   615                           ; 1 bytes @ 0x4
   616                           
   617     0074                     ___lwdiv@dividend:	
   618                           ; 2 bytes @ 0x4
   619                           
   620                           
   621                           ; 2 bytes @ 0x4
   622     0074                     	ds	1
   623     0075                     ?_Lcd_Write_String:
   624     0075                     Lcd_Cmd@a:	
   625                           ; 1 bytes @ 0x5
   626                           
   627     0075                     Lcd_Write_String@a:	
   628                           ; 1 bytes @ 0x5
   629                           
   630                           
   631                           ; 2 bytes @ 0x5
   632     0075                     	ds	1
   633     0076                     ??_Lcd_Init:
   634     0076                     ??_Lcd_Clear:	
   635                           ; 1 bytes @ 0x6
   636                           
   637     0076                     ?_Lcd_Set_Cursor:	
   638                           ; 1 bytes @ 0x6
   639                           
   640     0076                     ??___wmul:	
   641                           ; 1 bytes @ 0x6
   642                           
   643     0076                     ??___lwdiv:	
   644                           ; 1 bytes @ 0x6
   645                           
   646     0076                     Lcd_Set_Cursor@b:	
   647                           ; 1 bytes @ 0x6
   648                           
   649     0076                     I2C_Master_Read@temp:	
   650                           ; 1 bytes @ 0x6
   651                           
   652     0076                     ___wmul@product:	
   653                           ; 2 bytes @ 0x6
   654                           
   655     0076                     ___lldiv@dividend:	
   656                           ; 2 bytes @ 0x6
   657                           
   658                           
   659                           ; 4 bytes @ 0x6
   660     0076                     	ds	1
   661     0077                     ??_Lcd_Set_Cursor:
   662     0077                     ??_Lcd_Write_String:	
   663                           ; 1 bytes @ 0x7
   664                           
   665     0077                     Lcd_Set_Cursor@a:	
   666                           ; 1 bytes @ 0x7
   667                           
   668     0077                     ___lwdiv@quotient:	
   669                           ; 1 bytes @ 0x7
   670                           
   671                           
   672                           ; 2 bytes @ 0x7
   673     0077                     	ds	1
   674     0078                     ?___awdiv:
   675     0078                     Lcd_Set_Cursor@temp:	
   676                           ; 2 bytes @ 0x8
   677                           
   678     0078                     ___awdiv@divisor:	
   679                           ; 1 bytes @ 0x8
   680                           
   681                           
   682                           ; 2 bytes @ 0x8
   683     0078                     	ds	1
   684     0079                     ___lwdiv@counter:
   685                           
   686                           ; 1 bytes @ 0x9
   687     0079                     	ds	1
   688     007A                     ??___lldiv:
   689     007A                     ??___lwmod:	
   690                           ; 1 bytes @ 0xA
   691                           
   692     007A                     Lcd_Write_String@i:	
   693                           ; 1 bytes @ 0xA
   694                           
   695     007A                     ___awdiv@dividend:	
   696                           ; 2 bytes @ 0xA
   697                           
   698                           
   699                           ; 2 bytes @ 0xA
   700     007A                     	ds	1
   701     007B                     ??_setup:
   702     007B                     ___lwmod@counter:	
   703                           ; 1 bytes @ 0xB
   704                           
   705                           
   706                           ; 1 bytes @ 0xB
   707     007B                     	ds	1
   708                           
   709                           	psect	cstackBANK0
   710     003D                     __pcstackBANK0:
   711     003D                     ??___awdiv:
   712     003D                     ?___lwmod:	
   713                           ; 1 bytes @ 0x0
   714                           
   715     003D                     ___lwmod@divisor:	
   716                           ; 2 bytes @ 0x0
   717                           
   718     003D                     ___lldiv@quotient:	
   719                           ; 2 bytes @ 0x0
   720                           
   721                           
   722                           ; 4 bytes @ 0x0
   723     003D                     	ds	1
   724     003E                     ___awdiv@counter:
   725                           
   726                           ; 1 bytes @ 0x1
   727     003E                     	ds	1
   728     003F                     ___awdiv@sign:
   729     003F                     ___lwmod@dividend:	
   730                           ; 1 bytes @ 0x2
   731                           
   732                           
   733                           ; 2 bytes @ 0x2
   734     003F                     	ds	1
   735     0040                     ___awdiv@quotient:
   736                           
   737                           ; 2 bytes @ 0x3
   738     0040                     	ds	1
   739     0041                     ?_sprintf:
   740     0041                     sprintf@f:	
   741                           ; 2 bytes @ 0x4
   742                           
   743     0041                     ___lldiv@counter:	
   744                           ; 1 bytes @ 0x4
   745                           
   746                           
   747                           ; 1 bytes @ 0x4
   748     0041                     	ds	1
   749     0042                     ?_I2C_Master_Init:
   750     0042                     ?_map:	
   751                           ; 1 bytes @ 0x5
   752                           
   753     0042                     ?___awmod:	
   754                           ; 2 bytes @ 0x5
   755                           
   756     0042                     map@inputmin:	
   757                           ; 2 bytes @ 0x5
   758                           
   759     0042                     ___awmod@divisor:	
   760                           ; 2 bytes @ 0x5
   761                           
   762     0042                     I2C_Master_Init@c:	
   763                           ; 2 bytes @ 0x5
   764                           
   765                           
   766                           ; 4 bytes @ 0x5
   767     0042                     	ds	2
   768     0044                     map@inputmax:
   769     0044                     ___awmod@dividend:	
   770                           ; 2 bytes @ 0x7
   771                           
   772                           
   773                           ; 2 bytes @ 0x7
   774     0044                     	ds	2
   775     0046                     ??_I2C_Master_Init:
   776     0046                     ??___awmod:	
   777                           ; 1 bytes @ 0x9
   778                           
   779     0046                     map@outmin:	
   780                           ; 1 bytes @ 0x9
   781                           
   782                           
   783                           ; 2 bytes @ 0x9
   784     0046                     	ds	1
   785     0047                     ___awmod@counter:
   786                           
   787                           ; 1 bytes @ 0xA
   788     0047                     	ds	1
   789     0048                     ??_sprintf:
   790     0048                     ___awmod@sign:	
   791                           ; 1 bytes @ 0xB
   792                           
   793     0048                     map@outmax:	
   794                           ; 1 bytes @ 0xB
   795                           
   796                           
   797                           ; 2 bytes @ 0xB
   798     0048                     	ds	2
   799     004A                     ??_map:
   800                           
   801                           ; 1 bytes @ 0xD
   802     004A                     	ds	1
   803     004B                     map@value:
   804     004B                     sprintf@ap:	
   805                           ; 1 bytes @ 0xE
   806                           
   807                           
   808                           ; 1 bytes @ 0xE
   809     004B                     	ds	1
   810     004C                     sprintf@flag:
   811                           
   812                           ; 1 bytes @ 0xF
   813     004C                     	ds	1
   814     004D                     sprintf@prec:
   815                           
   816                           ; 1 bytes @ 0x10
   817     004D                     	ds	1
   818     004E                     sprintf@val:
   819                           
   820                           ; 2 bytes @ 0x11
   821     004E                     	ds	2
   822     0050                     sprintf@sp:
   823                           
   824                           ; 1 bytes @ 0x13
   825     0050                     	ds	1
   826     0051                     sprintf@c:
   827                           
   828                           ; 1 bytes @ 0x14
   829     0051                     	ds	1
   830     0052                     ??_main:
   831                           
   832                           ; 1 bytes @ 0x15
   833     0052                     	ds	3
   834                           
   835                           	psect	maintext
   836     001C                     __pmaintext:	
   837 ;;
   838 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   839 ;;
   840 ;; *************** function _main *****************
   841 ;; Defined at:
   842 ;;		line 51 in file "main.c"
   843 ;; Parameters:    Size  Location     Type
   844 ;;		None
   845 ;; Auto vars:     Size  Location     Type
   846 ;;		None
   847 ;; Return value:  Size  Location     Type
   848 ;;                  1    wreg      void 
   849 ;; Registers used:
   850 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   851 ;; Tracked objects:
   852 ;;		On entry : B00/0
   853 ;;		On exit  : 0/0
   854 ;;		Unchanged: 0/0
   855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   856 ;;      Params:         0       0       0       0       0
   857 ;;      Locals:         0       0       0       0       0
   858 ;;      Temps:          0       3       0       0       0
   859 ;;      Totals:         0       3       0       0       0
   860 ;;Total ram usage:        3 bytes
   861 ;; Hardware stack levels required when called: 4
   862 ;; This function calls:
   863 ;;		_I2C_Master_Read
   864 ;;		_I2C_Master_Start
   865 ;;		_I2C_Master_Stop
   866 ;;		_I2C_Master_Write
   867 ;;		_Lcd_Clear
   868 ;;		_Lcd_Init
   869 ;;		_Lcd_Set_Cursor
   870 ;;		_Lcd_Write_String
   871 ;;		___awdiv
   872 ;;		___awmod
   873 ;;		___wmul
   874 ;;		_map
   875 ;;		_setup
   876 ;;		_sprintf
   877 ;; This function is called by:
   878 ;;		Startup code after reset
   879 ;; This function uses a non-reentrant model
   880 ;;
   881                           
   882     001C                     _main:	
   883                           ;psect for function _main
   884                           
   885     001C                     l1591:	
   886                           ;incstack = 0
   887                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   888                           
   889                           
   890                           ;main.c: 52:     setup();
   891     001C  120A  118A  2562  120A  118A  	fcall	_setup
   892                           
   893                           ;main.c: 55:     Lcd_Init();
   894     0021  120A  118A  232A  120A  118A  	fcall	_Lcd_Init
   895                           
   896                           ;main.c: 56:     Lcd_Clear();
   897     0026  120A  118A  25D5  120A  118A  	fcall	_Lcd_Clear
   898                           
   899                           ;main.c: 58:     Lcd_Set_Cursor(1,1);
   900     002B  01F6               	clrf	Lcd_Set_Cursor@b
   901     002C  0AF6               	incf	Lcd_Set_Cursor@b,f
   902     002D  3001               	movlw	1
   903     002E  120A  118A  2586  120A  118A  	fcall	_Lcd_Set_Cursor
   904     0033                     l1593:
   905                           
   906                           ;main.c: 59:     Lcd_Write_String("S1:");
   907     0033  3014               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   908     0034  00F5               	movwf	Lcd_Write_String@a
   909     0035  3080               	movlw	128
   910     0036  00F6               	movwf	Lcd_Write_String@a+1
   911     0037  120A  118A  23BF  120A  118A  	fcall	_Lcd_Write_String
   912     003C                     l1595:
   913                           
   914                           ;main.c: 68:         I2C_Master_Start();
   915     003C  120A  118A  2602  120A  118A  	fcall	_I2C_Master_Start
   916     0041                     l1597:
   917                           
   918                           ;main.c: 69:         I2C_Master_Write(0x51);
   919     0041  3051               	movlw	81
   920     0042  00F2               	movwf	I2C_Master_Write@d
   921     0043  3000               	movlw	0
   922     0044  00F3               	movwf	I2C_Master_Write@d+1
   923     0045  120A  118A  25EF  120A  118A  	fcall	_I2C_Master_Write
   924     004A                     l1599:
   925                           
   926                           ;main.c: 70:         voltaje1 = I2C_Master_Read(0);
   927     004A  3000               	movlw	0
   928     004B  00F2               	movwf	I2C_Master_Read@a
   929     004C  00F3               	movwf	I2C_Master_Read@a+1
   930     004D  120A  118A  24E8  120A  118A  	fcall	_I2C_Master_Read
   931     0052  0872               	movf	?_I2C_Master_Read,w
   932     0053  1283               	bcf	3,5	;RP0=0, select bank0
   933     0054  1303               	bcf	3,6	;RP1=0, select bank0
   934     0055  00A8               	movwf	_voltaje1
   935     0056                     l1601:
   936                           
   937                           ;main.c: 71:         I2C_Master_Stop();
   938     0056  120A  118A  25F9  120A  118A  	fcall	_I2C_Master_Stop
   939     005B                     l1603:
   940                           
   941                           ;main.c: 72:         _delay((unsigned long)((200)*(8000000/4000.0)));
   942     005B  3003               	movlw	3
   943     005C  1283               	bcf	3,5	;RP0=0, select bank0
   944     005D  1303               	bcf	3,6	;RP1=0, select bank0
   945     005E  00D4               	movwf	??_main+2
   946     005F  3008               	movlw	8
   947     0060  00D3               	movwf	??_main+1
   948     0061  3076               	movlw	118
   949     0062  00D2               	movwf	??_main
   950     0063                     u1357:
   951     0063  0BD2               	decfsz	??_main,f
   952     0064  2863               	goto	u1357
   953     0065  0BD3               	decfsz	??_main+1,f
   954     0066  2863               	goto	u1357
   955     0067  0BD4               	decfsz	??_main+2,f
   956     0068  2863               	goto	u1357
   957     0069  0000               	nop
   958     006A                     l1605:
   959                           
   960                           ;main.c: 74:         vol1 = map(voltaje1, 0, 255, 0, 100);
   961     006A  3000               	movlw	0
   962     006B  1283               	bcf	3,5	;RP0=0, select bank0
   963     006C  1303               	bcf	3,6	;RP1=0, select bank0
   964     006D  00C2               	movwf	map@inputmin
   965     006E  00C3               	movwf	map@inputmin+1
   966     006F  30FF               	movlw	255
   967     0070  00C4               	movwf	map@inputmax
   968     0071  3000               	movlw	0
   969     0072  00C5               	movwf	map@inputmax+1
   970     0073  3000               	movlw	0
   971     0074  00C6               	movwf	map@outmin
   972     0075  00C7               	movwf	map@outmin+1
   973     0076  3064               	movlw	100
   974     0077  00C8               	movwf	map@outmax
   975     0078  3000               	movlw	0
   976     0079  00C9               	movwf	map@outmax+1
   977     007A  0828               	movf	_voltaje1,w
   978     007B  120A  118A  24B3  120A  118A  	fcall	_map
   979     0080  1283               	bcf	3,5	;RP0=0, select bank0
   980     0081  1303               	bcf	3,6	;RP1=0, select bank0
   981     0082  0843               	movf	?_map+1,w
   982     0083  00A7               	movwf	_vol1+1
   983     0084  0842               	movf	?_map,w
   984     0085  00A6               	movwf	_vol1
   985     0086                     l1607:
   986                           
   987                           ;main.c: 75:         unidad1 = (vol1*5)/100;
   988     0086  3064               	movlw	100
   989     0087  00F8               	movwf	___awdiv@divisor
   990     0088  3000               	movlw	0
   991     0089  00F9               	movwf	___awdiv@divisor+1
   992     008A  0827               	movf	_vol1+1,w
   993     008B  00F3               	movwf	___wmul@multiplier+1
   994     008C  0826               	movf	_vol1,w
   995     008D  00F2               	movwf	___wmul@multiplier
   996     008E  3005               	movlw	5
   997     008F  00F4               	movwf	___wmul@multiplicand
   998     0090  3000               	movlw	0
   999     0091  00F5               	movwf	___wmul@multiplicand+1
  1000     0092  120A  118A  253D  120A  118A  	fcall	___wmul
  1001     0097  0873               	movf	?___wmul+1,w
  1002     0098  00FB               	movwf	___awdiv@dividend+1
  1003     0099  0872               	movf	?___wmul,w
  1004     009A  00FA               	movwf	___awdiv@dividend
  1005     009B  120A  118A  21FE  120A  118A  	fcall	___awdiv
  1006     00A0  0879               	movf	?___awdiv+1,w
  1007     00A1  1283               	bcf	3,5	;RP0=0, select bank0
  1008     00A2  1303               	bcf	3,6	;RP1=0, select bank0
  1009     00A3  00A5               	movwf	_unidad1+1
  1010     00A4  0878               	movf	?___awdiv,w
  1011     00A5  00A4               	movwf	_unidad1
  1012     00A6                     l1609:
  1013                           
  1014                           ;main.c: 76:         decima1 = ((vol1*5)/10)%10;
  1015     00A6  300A               	movlw	10
  1016     00A7  00C2               	movwf	___awmod@divisor
  1017     00A8  3000               	movlw	0
  1018     00A9  00C3               	movwf	___awmod@divisor+1
  1019     00AA  300A               	movlw	10
  1020     00AB  00F8               	movwf	___awdiv@divisor
  1021     00AC  3000               	movlw	0
  1022     00AD  00F9               	movwf	___awdiv@divisor+1
  1023     00AE  0827               	movf	_vol1+1,w
  1024     00AF  00F3               	movwf	___wmul@multiplier+1
  1025     00B0  0826               	movf	_vol1,w
  1026     00B1  00F2               	movwf	___wmul@multiplier
  1027     00B2  3005               	movlw	5
  1028     00B3  00F4               	movwf	___wmul@multiplicand
  1029     00B4  3000               	movlw	0
  1030     00B5  00F5               	movwf	___wmul@multiplicand+1
  1031     00B6  120A  118A  253D  120A  118A  	fcall	___wmul
  1032     00BB  0873               	movf	?___wmul+1,w
  1033     00BC  00FB               	movwf	___awdiv@dividend+1
  1034     00BD  0872               	movf	?___wmul,w
  1035     00BE  00FA               	movwf	___awdiv@dividend
  1036     00BF  120A  118A  21FE  120A  118A  	fcall	___awdiv
  1037     00C4  0879               	movf	?___awdiv+1,w
  1038     00C5  1283               	bcf	3,5	;RP0=0, select bank0
  1039     00C6  1303               	bcf	3,6	;RP1=0, select bank0
  1040     00C7  00C5               	movwf	___awmod@dividend+1
  1041     00C8  0878               	movf	?___awdiv,w
  1042     00C9  00C4               	movwf	___awmod@dividend
  1043     00CA  120A  118A  22CF  120A  118A  	fcall	___awmod
  1044     00CF  1283               	bcf	3,5	;RP0=0, select bank0
  1045     00D0  1303               	bcf	3,6	;RP1=0, select bank0
  1046     00D1  0843               	movf	?___awmod+1,w
  1047     00D2  00A3               	movwf	_decima1+1
  1048     00D3  0842               	movf	?___awmod,w
  1049     00D4  00A2               	movwf	_decima1
  1050     00D5                     l1611:
  1051                           
  1052                           ;main.c: 77:         centesima1 = (vol1*5)%10;
  1053     00D5  300A               	movlw	10
  1054     00D6  00C2               	movwf	___awmod@divisor
  1055     00D7  3000               	movlw	0
  1056     00D8  00C3               	movwf	___awmod@divisor+1
  1057     00D9  0827               	movf	_vol1+1,w
  1058     00DA  00F3               	movwf	___wmul@multiplier+1
  1059     00DB  0826               	movf	_vol1,w
  1060     00DC  00F2               	movwf	___wmul@multiplier
  1061     00DD  3005               	movlw	5
  1062     00DE  00F4               	movwf	___wmul@multiplicand
  1063     00DF  3000               	movlw	0
  1064     00E0  00F5               	movwf	___wmul@multiplicand+1
  1065     00E1  120A  118A  253D  120A  118A  	fcall	___wmul
  1066     00E6  0873               	movf	?___wmul+1,w
  1067     00E7  1283               	bcf	3,5	;RP0=0, select bank0
  1068     00E8  1303               	bcf	3,6	;RP1=0, select bank0
  1069     00E9  00C5               	movwf	___awmod@dividend+1
  1070     00EA  0872               	movf	?___wmul,w
  1071     00EB  00C4               	movwf	___awmod@dividend
  1072     00EC  120A  118A  22CF  120A  118A  	fcall	___awmod
  1073     00F1  1283               	bcf	3,5	;RP0=0, select bank0
  1074     00F2  1303               	bcf	3,6	;RP1=0, select bank0
  1075     00F3  0843               	movf	?___awmod+1,w
  1076     00F4  00A1               	movwf	_centesima1+1
  1077     00F5  0842               	movf	?___awmod,w
  1078     00F6  00A0               	movwf	_centesima1
  1079     00F7                     l1613:
  1080                           
  1081                           ;main.c: 78:         Lcd_Set_Cursor(2,1);
  1082     00F7  01F6               	clrf	Lcd_Set_Cursor@b
  1083     00F8  0AF6               	incf	Lcd_Set_Cursor@b,f
  1084     00F9  3002               	movlw	2
  1085     00FA  120A  118A  2586  120A  118A  	fcall	_Lcd_Set_Cursor
  1086     00FF                     l1615:
  1087                           
  1088                           ;main.c: 79:         sprintf(buffer, "%d.%d%dV" , unidad1 , decima1 , centesima1 );
  1089     00FF  300B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1090     0100  1283               	bcf	3,5	;RP0=0, select bank0
  1091     0101  1303               	bcf	3,6	;RP1=0, select bank0
  1092     0102  00C1               	movwf	sprintf@f
  1093     0103  0825               	movf	_unidad1+1,w
  1094     0104  00C3               	movwf	?_sprintf+2
  1095     0105  0824               	movf	_unidad1,w
  1096     0106  00C2               	movwf	?_sprintf+1
  1097     0107  0823               	movf	_decima1+1,w
  1098     0108  00C5               	movwf	?_sprintf+4
  1099     0109  0822               	movf	_decima1,w
  1100     010A  00C4               	movwf	?_sprintf+3
  1101     010B  0821               	movf	_centesima1+1,w
  1102     010C  00C7               	movwf	?_sprintf+6
  1103     010D  0820               	movf	_centesima1,w
  1104     010E  00C6               	movwf	?_sprintf+5
  1105     010F  3029               	movlw	(low (_buffer| 0))& (0+255)
  1106     0110  120A  118A  2122  120A  118A  	fcall	_sprintf
  1107     0115                     l1617:
  1108                           
  1109                           ;main.c: 80:         Lcd_Write_String(buffer);
  1110     0115  3029               	movlw	(low (_buffer| 0))& (0+255)
  1111     0116  00F5               	movwf	Lcd_Write_String@a
  1112     0117  3000               	movlw	0
  1113     0118  00F6               	movwf	Lcd_Write_String@a+1
  1114     0119  120A  118A  23BF  120A  118A  	fcall	_Lcd_Write_String
  1115     011E  283C               	goto	l1595
  1116     011F  120A  118A  280C   	ljmp	start
  1117     0122                     __end_of_main:
  1118                           
  1119                           	psect	text1
  1120     0122                     __ptext1:	
  1121 ;; *************** function _sprintf *****************
  1122 ;; Defined at:
  1123 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  1124 ;; Parameters:    Size  Location     Type
  1125 ;;  sp              1    wreg     PTR unsigned char 
  1126 ;;		 -> buffer(20), 
  1127 ;;  f               1    4[BANK0 ] PTR const unsigned char 
  1128 ;;		 -> STR_2(9), 
  1129 ;; Auto vars:     Size  Location     Type
  1130 ;;  sp              1   19[BANK0 ] PTR unsigned char 
  1131 ;;		 -> buffer(20), 
  1132 ;;  tmpval          4    0        struct .
  1133 ;;  val             2   17[BANK0 ] unsigned int 
  1134 ;;  cp              2    0        PTR const unsigned char 
  1135 ;;  len             2    0        unsigned int 
  1136 ;;  c               1   20[BANK0 ] unsigned char 
  1137 ;;  prec            1   16[BANK0 ] char 
  1138 ;;  flag            1   15[BANK0 ] unsigned char 
  1139 ;;  ap              1   14[BANK0 ] PTR void [1]
  1140 ;;		 -> ?_sprintf(2), 
  1141 ;; Return value:  Size  Location     Type
  1142 ;;                  2    4[BANK0 ] int 
  1143 ;; Registers used:
  1144 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1145 ;; Tracked objects:
  1146 ;;		On entry : 0/0
  1147 ;;		On exit  : 0/0
  1148 ;;		Unchanged: 0/0
  1149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1150 ;;      Params:         0       7       0       0       0
  1151 ;;      Locals:         0       7       0       0       0
  1152 ;;      Temps:          0       3       0       0       0
  1153 ;;      Totals:         0      17       0       0       0
  1154 ;;Total ram usage:       17 bytes
  1155 ;; Hardware stack levels used: 1
  1156 ;; Hardware stack levels required when called: 2
  1157 ;; This function calls:
  1158 ;;		___lwdiv
  1159 ;;		___lwmod
  1160 ;; This function is called by:
  1161 ;;		_main
  1162 ;; This function uses a non-reentrant model
  1163 ;;
  1164                           
  1165     0122                     _sprintf:	
  1166                           ;psect for function _sprintf
  1167                           
  1168                           
  1169                           ;incstack = 0
  1170                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1171                           ;sprintf@sp stored from wreg
  1172     0122  1283               	bcf	3,5	;RP0=0, select bank0
  1173     0123  1303               	bcf	3,6	;RP1=0, select bank0
  1174     0124  00D0               	movwf	sprintf@sp
  1175     0125                     l1491:
  1176                           
  1177                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1178     0125  3042               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1179     0126  00CB               	movwf	sprintf@ap
  1180                           
  1181                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1182     0127  29E9               	goto	l1543
  1183     0128                     l1493:
  1184                           
  1185                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1186     0128  3025               	movlw	37
  1187     0129  0651               	xorwf	sprintf@c,w
  1188     012A  1903               	btfsc	3,2
  1189     012B  292D               	goto	u1191
  1190     012C  292E               	goto	u1190
  1191     012D                     u1191:
  1192     012D  2938               	goto	l1499
  1193     012E                     u1190:
  1194     012E                     l1495:
  1195                           
  1196                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1197     012E  0850               	movf	sprintf@sp,w
  1198     012F  0084               	movwf	4
  1199     0130  0851               	movf	sprintf@c,w
  1200     0131  1383               	bcf	3,7	;select IRP bank0
  1201     0132  0080               	movwf	0
  1202     0133                     l1497:
  1203     0133  3001               	movlw	1
  1204     0134  00C8               	movwf	??_sprintf
  1205     0135  0848               	movf	??_sprintf,w
  1206     0136  07D0               	addwf	sprintf@sp,f
  1207                           
  1208                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  1209     0137  29E9               	goto	l1543
  1210     0138                     l1499:
  1211                           
  1212                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1213     0138  01CC               	clrf	sprintf@flag
  1214     0139                     l1503:	
  1215                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1216                           
  1217     0139  3001               	movlw	1
  1218     013A  07C1               	addwf	sprintf@f,f
  1219     013B  30FF               	movlw	-1
  1220     013C  0741               	addwf	sprintf@f,w
  1221     013D  0084               	movwf	4
  1222     013E  120A  118A  2520  120A  118A  	fcall	stringdir
  1223     0143  00D1               	movwf	sprintf@c
  1224     0144  00C8               	movwf	??_sprintf
  1225     0145  01C9               	clrf	??_sprintf+1
  1226                           
  1227                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1228                           ; Switch size 1, requested type "simple"
  1229                           ; Number of cases is 1, Range of values is 0 to 0
  1230                           ; switch strategies available:
  1231                           ; Name         Instructions Cycles
  1232                           ; simple_byte            4     3 (average)
  1233                           ; direct_byte           11     8 (fixed)
  1234                           ; jumptable            260     6 (fixed)
  1235                           ;	Chosen strategy is simple_byte
  1236     0146  0849               	movf	??_sprintf+1,w
  1237     0147  3A00               	xorlw	0	; case 0
  1238     0148  1903               	skipnz
  1239     0149  294B               	goto	l1647
  1240     014A  29E9               	goto	l1543
  1241     014B                     l1647:
  1242                           
  1243                           ; Switch size 1, requested type "simple"
  1244                           ; Number of cases is 3, Range of values is 0 to 105
  1245                           ; switch strategies available:
  1246                           ; Name         Instructions Cycles
  1247                           ; simple_byte           10     6 (average)
  1248                           ; jumptable            260     6 (fixed)
  1249                           ;	Chosen strategy is simple_byte
  1250     014B  0848               	movf	??_sprintf,w
  1251     014C  3A00               	xorlw	0	; case 0
  1252     014D  1903               	skipnz
  1253     014E  29F9               	goto	l1545
  1254     014F  3A64               	xorlw	100	; case 100
  1255     0150  1903               	skipnz
  1256     0151  2956               	goto	l1505
  1257     0152  3A0D               	xorlw	13	; case 105
  1258     0153  1903               	skipnz
  1259     0154  2956               	goto	l1505
  1260     0155  29E9               	goto	l1543
  1261     0156                     l1505:
  1262                           
  1263                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1264     0156  084B               	movf	sprintf@ap,w
  1265     0157  0084               	movwf	4
  1266     0158  1383               	bcf	3,7	;select IRP bank0
  1267     0159  0800               	movf	0,w
  1268     015A  00CE               	movwf	sprintf@val
  1269     015B  0A84               	incf	4,f
  1270     015C  0800               	movf	0,w
  1271     015D  00CF               	movwf	sprintf@val+1
  1272     015E                     l1507:
  1273     015E  3002               	movlw	2
  1274     015F  00C8               	movwf	??_sprintf
  1275     0160  0848               	movf	??_sprintf,w
  1276     0161  07CB               	addwf	sprintf@ap,f
  1277     0162                     l1509:
  1278                           
  1279                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1280     0162  1FCF               	btfss	sprintf@val+1,7
  1281     0163  2965               	goto	u1201
  1282     0164  2966               	goto	u1200
  1283     0165                     u1201:
  1284     0165  296F               	goto	l1515
  1285     0166                     u1200:
  1286     0166                     l1511:
  1287                           
  1288                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1289     0166  3003               	movlw	3
  1290     0167  00C8               	movwf	??_sprintf
  1291     0168  0848               	movf	??_sprintf,w
  1292     0169  04CC               	iorwf	sprintf@flag,f
  1293     016A                     l1513:
  1294                           
  1295                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1296     016A  09CE               	comf	sprintf@val,f
  1297     016B  09CF               	comf	sprintf@val+1,f
  1298     016C  0ACE               	incf	sprintf@val,f
  1299     016D  1903               	skipnz
  1300     016E  0ACF               	incf	sprintf@val+1,f
  1301     016F                     l1515:
  1302                           
  1303                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1304     016F  01D1               	clrf	sprintf@c
  1305     0170  0AD1               	incf	sprintf@c,f
  1306     0171                     l1521:
  1307                           
  1308                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1309     0171  0851               	movf	sprintf@c,w
  1310     0172  00C8               	movwf	??_sprintf
  1311     0173  0748               	addwf	??_sprintf,w
  1312     0174  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1313     0175  0084               	movwf	4
  1314     0176  120A  118A  2520  120A  118A  	fcall	stringdir
  1315     017B  00C9               	movwf	??_sprintf+1
  1316     017C  120A  118A  2520  120A  118A  	fcall	stringdir
  1317     0181  00CA               	movwf	??_sprintf+2
  1318     0182  084A               	movf	??_sprintf+2,w
  1319     0183  024F               	subwf	sprintf@val+1,w
  1320     0184  1D03               	skipz
  1321     0185  2988               	goto	u1215
  1322     0186  0849               	movf	??_sprintf+1,w
  1323     0187  024E               	subwf	sprintf@val,w
  1324     0188                     u1215:
  1325     0188  1803               	skipnc
  1326     0189  298B               	goto	u1211
  1327     018A  298C               	goto	u1210
  1328     018B                     u1211:
  1329     018B  298D               	goto	l1525
  1330     018C                     u1210:
  1331     018C  2997               	goto	l1527
  1332     018D                     l1525:
  1333     018D  3001               	movlw	1
  1334     018E  00C8               	movwf	??_sprintf
  1335     018F  0848               	movf	??_sprintf,w
  1336     0190  07D1               	addwf	sprintf@c,f
  1337     0191  3005               	movlw	5
  1338     0192  0651               	xorwf	sprintf@c,w
  1339     0193  1D03               	btfss	3,2
  1340     0194  2996               	goto	u1221
  1341     0195  2997               	goto	u1220
  1342     0196                     u1221:
  1343     0196  2971               	goto	l1521
  1344     0197                     u1220:
  1345     0197                     l1527:
  1346                           
  1347                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1348     0197  084C               	movf	sprintf@flag,w
  1349     0198  3903               	andlw	3
  1350     0199  1903               	btfsc	3,2
  1351     019A  299C               	goto	u1231
  1352     019B  299D               	goto	u1230
  1353     019C                     u1231:
  1354     019C  29A6               	goto	l1533
  1355     019D                     u1230:
  1356     019D                     l1529:
  1357                           
  1358                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1359     019D  0850               	movf	sprintf@sp,w
  1360     019E  0084               	movwf	4
  1361     019F  302D               	movlw	45
  1362     01A0  1383               	bcf	3,7	;select IRP bank0
  1363     01A1  0080               	movwf	0
  1364     01A2                     l1531:
  1365     01A2  3001               	movlw	1
  1366     01A3  00C8               	movwf	??_sprintf
  1367     01A4  0848               	movf	??_sprintf,w
  1368     01A5  07D0               	addwf	sprintf@sp,f
  1369     01A6                     l1533:
  1370                           
  1371                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1372     01A6  0851               	movf	sprintf@c,w
  1373     01A7  00CD               	movwf	sprintf@prec
  1374                           
  1375                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1376     01A8  29E0               	goto	l1541
  1377     01A9                     l1535:
  1378                           
  1379                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1380     01A9  300A               	movlw	10
  1381     01AA  00BD               	movwf	___lwmod@divisor
  1382     01AB  3000               	movlw	0
  1383     01AC  00BE               	movwf	___lwmod@divisor+1
  1384     01AD  084D               	movf	sprintf@prec,w
  1385     01AE  00C8               	movwf	??_sprintf
  1386     01AF  0748               	addwf	??_sprintf,w
  1387     01B0  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1388     01B1  0084               	movwf	4
  1389     01B2  120A  118A  2520  120A  118A  	fcall	stringdir
  1390     01B7  00F2               	movwf	___lwdiv@divisor
  1391     01B8  120A  118A  2520  120A  118A  	fcall	stringdir
  1392     01BD  00F3               	movwf	___lwdiv@divisor+1
  1393     01BE  084F               	movf	sprintf@val+1,w
  1394     01BF  00F5               	movwf	___lwdiv@dividend+1
  1395     01C0  084E               	movf	sprintf@val,w
  1396     01C1  00F4               	movwf	___lwdiv@dividend
  1397     01C2  120A  118A  237B  120A  118A  	fcall	___lwdiv
  1398     01C7  0873               	movf	?___lwdiv+1,w
  1399     01C8  1283               	bcf	3,5	;RP0=0, select bank0
  1400     01C9  1303               	bcf	3,6	;RP1=0, select bank0
  1401     01CA  00C0               	movwf	___lwmod@dividend+1
  1402     01CB  0872               	movf	?___lwdiv,w
  1403     01CC  00BF               	movwf	___lwmod@dividend
  1404     01CD  120A  118A  243F  120A  118A  	fcall	___lwmod
  1405     01D2  1283               	bcf	3,5	;RP0=0, select bank0
  1406     01D3  1303               	bcf	3,6	;RP1=0, select bank0
  1407     01D4  083D               	movf	?___lwmod,w
  1408     01D5  3E30               	addlw	48
  1409     01D6  00D1               	movwf	sprintf@c
  1410     01D7                     l1537:
  1411                           
  1412                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1413     01D7  0850               	movf	sprintf@sp,w
  1414     01D8  0084               	movwf	4
  1415     01D9  0851               	movf	sprintf@c,w
  1416     01DA  1383               	bcf	3,7	;select IRP bank0
  1417     01DB  0080               	movwf	0
  1418     01DC                     l1539:
  1419     01DC  3001               	movlw	1
  1420     01DD  00C8               	movwf	??_sprintf
  1421     01DE  0848               	movf	??_sprintf,w
  1422     01DF  07D0               	addwf	sprintf@sp,f
  1423     01E0                     l1541:
  1424                           
  1425                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1426     01E0  30FF               	movlw	255
  1427     01E1  00C8               	movwf	??_sprintf
  1428     01E2  0848               	movf	??_sprintf,w
  1429     01E3  07CD               	addwf	sprintf@prec,f
  1430     01E4  0A4D               	incf	sprintf@prec,w
  1431     01E5  1D03               	btfss	3,2
  1432     01E6  29E8               	goto	u1241
  1433     01E7  29E9               	goto	u1240
  1434     01E8                     u1241:
  1435     01E8  29A9               	goto	l1535
  1436     01E9                     u1240:
  1437     01E9                     l1543:
  1438                           
  1439                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1440     01E9  3001               	movlw	1
  1441     01EA  07C1               	addwf	sprintf@f,f
  1442     01EB  30FF               	movlw	-1
  1443     01EC  0741               	addwf	sprintf@f,w
  1444     01ED  0084               	movwf	4
  1445     01EE  120A  118A  2520  120A  118A  	fcall	stringdir
  1446     01F3  00D1               	movwf	sprintf@c
  1447     01F4  0851               	movf	sprintf@c,w
  1448     01F5  1D03               	btfss	3,2
  1449     01F6  29F8               	goto	u1251
  1450     01F7  29F9               	goto	u1250
  1451     01F8                     u1251:
  1452     01F8  2928               	goto	l1493
  1453     01F9                     u1250:
  1454     01F9                     l1545:
  1455                           
  1456                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1457     01F9  0850               	movf	sprintf@sp,w
  1458     01FA  0084               	movwf	4
  1459     01FB  1383               	bcf	3,7	;select IRP bank0
  1460     01FC  0180               	clrf	0
  1461     01FD                     l295:
  1462     01FD  0008               	return
  1463     01FE                     __end_of_sprintf:
  1464                           
  1465                           	psect	text2
  1466     043F                     __ptext2:	
  1467 ;; *************** function ___lwmod *****************
  1468 ;; Defined at:
  1469 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1470 ;; Parameters:    Size  Location     Type
  1471 ;;  divisor         2    0[BANK0 ] unsigned int 
  1472 ;;  dividend        2    2[BANK0 ] unsigned int 
  1473 ;; Auto vars:     Size  Location     Type
  1474 ;;  counter         1   11[COMMON] unsigned char 
  1475 ;; Return value:  Size  Location     Type
  1476 ;;                  2    0[BANK0 ] unsigned int 
  1477 ;; Registers used:
  1478 ;;		wreg, status,2, status,0
  1479 ;; Tracked objects:
  1480 ;;		On entry : 0/0
  1481 ;;		On exit  : 0/0
  1482 ;;		Unchanged: 0/0
  1483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1484 ;;      Params:         0       4       0       0       0
  1485 ;;      Locals:         1       0       0       0       0
  1486 ;;      Temps:          1       0       0       0       0
  1487 ;;      Totals:         2       4       0       0       0
  1488 ;;Total ram usage:        6 bytes
  1489 ;; Hardware stack levels used: 1
  1490 ;; Hardware stack levels required when called: 1
  1491 ;; This function calls:
  1492 ;;		Nothing
  1493 ;; This function is called by:
  1494 ;;		_sprintf
  1495 ;; This function uses a non-reentrant model
  1496 ;;
  1497                           
  1498     043F                     ___lwmod:	
  1499                           ;psect for function ___lwmod
  1500                           
  1501     043F                     l1395:	
  1502                           ;incstack = 0
  1503                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1504                           
  1505     043F  1283               	bcf	3,5	;RP0=0, select bank0
  1506     0440  1303               	bcf	3,6	;RP1=0, select bank0
  1507     0441  083D               	movf	___lwmod@divisor,w
  1508     0442  043E               	iorwf	___lwmod@divisor+1,w
  1509     0443  1903               	btfsc	3,2
  1510     0444  2C46               	goto	u1071
  1511     0445  2C47               	goto	u1070
  1512     0446                     u1071:
  1513     0446  2C76               	goto	l1413
  1514     0447                     u1070:
  1515     0447                     l1397:
  1516     0447  01FB               	clrf	___lwmod@counter
  1517     0448  0AFB               	incf	___lwmod@counter,f
  1518     0449  2C55               	goto	l1403
  1519     044A                     l1399:
  1520     044A  3001               	movlw	1
  1521     044B                     u1085:
  1522     044B  1003               	clrc
  1523     044C  0DBD               	rlf	___lwmod@divisor,f
  1524     044D  0DBE               	rlf	___lwmod@divisor+1,f
  1525     044E  3EFF               	addlw	-1
  1526     044F  1D03               	skipz
  1527     0450  2C4B               	goto	u1085
  1528     0451                     l1401:
  1529     0451  3001               	movlw	1
  1530     0452  00FA               	movwf	??___lwmod
  1531     0453  087A               	movf	??___lwmod,w
  1532     0454  07FB               	addwf	___lwmod@counter,f
  1533     0455                     l1403:
  1534     0455  1FBE               	btfss	___lwmod@divisor+1,7
  1535     0456  2C58               	goto	u1091
  1536     0457  2C59               	goto	u1090
  1537     0458                     u1091:
  1538     0458  2C4A               	goto	l1399
  1539     0459                     u1090:
  1540     0459                     l1405:
  1541     0459  083E               	movf	___lwmod@divisor+1,w
  1542     045A  0240               	subwf	___lwmod@dividend+1,w
  1543     045B  1D03               	skipz
  1544     045C  2C5F               	goto	u1105
  1545     045D  083D               	movf	___lwmod@divisor,w
  1546     045E  023F               	subwf	___lwmod@dividend,w
  1547     045F                     u1105:
  1548     045F  1C03               	skipc
  1549     0460  2C62               	goto	u1101
  1550     0461  2C63               	goto	u1100
  1551     0462                     u1101:
  1552     0462  2C69               	goto	l1409
  1553     0463                     u1100:
  1554     0463                     l1407:
  1555     0463  083D               	movf	___lwmod@divisor,w
  1556     0464  02BF               	subwf	___lwmod@dividend,f
  1557     0465  083E               	movf	___lwmod@divisor+1,w
  1558     0466  1C03               	skipc
  1559     0467  03C0               	decf	___lwmod@dividend+1,f
  1560     0468  02C0               	subwf	___lwmod@dividend+1,f
  1561     0469                     l1409:
  1562     0469  3001               	movlw	1
  1563     046A                     u1115:
  1564     046A  1003               	clrc
  1565     046B  0CBE               	rrf	___lwmod@divisor+1,f
  1566     046C  0CBD               	rrf	___lwmod@divisor,f
  1567     046D  3EFF               	addlw	-1
  1568     046E  1D03               	skipz
  1569     046F  2C6A               	goto	u1115
  1570     0470                     l1411:
  1571     0470  3001               	movlw	1
  1572     0471  02FB               	subwf	___lwmod@counter,f
  1573     0472  1D03               	btfss	3,2
  1574     0473  2C75               	goto	u1121
  1575     0474  2C76               	goto	u1120
  1576     0475                     u1121:
  1577     0475  2C59               	goto	l1405
  1578     0476                     u1120:
  1579     0476                     l1413:
  1580     0476  0840               	movf	___lwmod@dividend+1,w
  1581     0477  00BE               	movwf	?___lwmod+1
  1582     0478  083F               	movf	___lwmod@dividend,w
  1583     0479  00BD               	movwf	?___lwmod
  1584     047A                     l581:
  1585     047A  0008               	return
  1586     047B                     __end_of___lwmod:
  1587                           
  1588                           	psect	text3
  1589     037B                     __ptext3:	
  1590 ;; *************** function ___lwdiv *****************
  1591 ;; Defined at:
  1592 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  1593 ;; Parameters:    Size  Location     Type
  1594 ;;  divisor         2    2[COMMON] unsigned int 
  1595 ;;  dividend        2    4[COMMON] unsigned int 
  1596 ;; Auto vars:     Size  Location     Type
  1597 ;;  quotient        2    7[COMMON] unsigned int 
  1598 ;;  counter         1    9[COMMON] unsigned char 
  1599 ;; Return value:  Size  Location     Type
  1600 ;;                  2    2[COMMON] unsigned int 
  1601 ;; Registers used:
  1602 ;;		wreg, status,2, status,0
  1603 ;; Tracked objects:
  1604 ;;		On entry : 0/0
  1605 ;;		On exit  : 0/0
  1606 ;;		Unchanged: 0/0
  1607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1608 ;;      Params:         4       0       0       0       0
  1609 ;;      Locals:         3       0       0       0       0
  1610 ;;      Temps:          1       0       0       0       0
  1611 ;;      Totals:         8       0       0       0       0
  1612 ;;Total ram usage:        8 bytes
  1613 ;; Hardware stack levels used: 1
  1614 ;; Hardware stack levels required when called: 1
  1615 ;; This function calls:
  1616 ;;		Nothing
  1617 ;; This function is called by:
  1618 ;;		_sprintf
  1619 ;; This function uses a non-reentrant model
  1620 ;;
  1621                           
  1622     037B                     ___lwdiv:	
  1623                           ;psect for function ___lwdiv
  1624                           
  1625     037B                     l1369:	
  1626                           ;incstack = 0
  1627                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1628                           
  1629     037B  01F7               	clrf	___lwdiv@quotient
  1630     037C  01F8               	clrf	___lwdiv@quotient+1
  1631     037D                     l1371:
  1632     037D  0872               	movf	___lwdiv@divisor,w
  1633     037E  0473               	iorwf	___lwdiv@divisor+1,w
  1634     037F  1903               	btfsc	3,2
  1635     0380  2B82               	goto	u1001
  1636     0381  2B83               	goto	u1000
  1637     0382                     u1001:
  1638     0382  2BBA               	goto	l1391
  1639     0383                     u1000:
  1640     0383                     l1373:
  1641     0383  01F9               	clrf	___lwdiv@counter
  1642     0384  0AF9               	incf	___lwdiv@counter,f
  1643     0385  2B91               	goto	l1379
  1644     0386                     l1375:
  1645     0386  3001               	movlw	1
  1646     0387                     u1015:
  1647     0387  1003               	clrc
  1648     0388  0DF2               	rlf	___lwdiv@divisor,f
  1649     0389  0DF3               	rlf	___lwdiv@divisor+1,f
  1650     038A  3EFF               	addlw	-1
  1651     038B  1D03               	skipz
  1652     038C  2B87               	goto	u1015
  1653     038D                     l1377:
  1654     038D  3001               	movlw	1
  1655     038E  00F6               	movwf	??___lwdiv
  1656     038F  0876               	movf	??___lwdiv,w
  1657     0390  07F9               	addwf	___lwdiv@counter,f
  1658     0391                     l1379:
  1659     0391  1FF3               	btfss	___lwdiv@divisor+1,7
  1660     0392  2B94               	goto	u1021
  1661     0393  2B95               	goto	u1020
  1662     0394                     u1021:
  1663     0394  2B86               	goto	l1375
  1664     0395                     u1020:
  1665     0395                     l1381:
  1666     0395  3001               	movlw	1
  1667     0396                     u1035:
  1668     0396  1003               	clrc
  1669     0397  0DF7               	rlf	___lwdiv@quotient,f
  1670     0398  0DF8               	rlf	___lwdiv@quotient+1,f
  1671     0399  3EFF               	addlw	-1
  1672     039A  1D03               	skipz
  1673     039B  2B96               	goto	u1035
  1674     039C  0873               	movf	___lwdiv@divisor+1,w
  1675     039D  0275               	subwf	___lwdiv@dividend+1,w
  1676     039E  1D03               	skipz
  1677     039F  2BA2               	goto	u1045
  1678     03A0  0872               	movf	___lwdiv@divisor,w
  1679     03A1  0274               	subwf	___lwdiv@dividend,w
  1680     03A2                     u1045:
  1681     03A2  1C03               	skipc
  1682     03A3  2BA5               	goto	u1041
  1683     03A4  2BA6               	goto	u1040
  1684     03A5                     u1041:
  1685     03A5  2BAD               	goto	l1387
  1686     03A6                     u1040:
  1687     03A6                     l1383:
  1688     03A6  0872               	movf	___lwdiv@divisor,w
  1689     03A7  02F4               	subwf	___lwdiv@dividend,f
  1690     03A8  0873               	movf	___lwdiv@divisor+1,w
  1691     03A9  1C03               	skipc
  1692     03AA  03F5               	decf	___lwdiv@dividend+1,f
  1693     03AB  02F5               	subwf	___lwdiv@dividend+1,f
  1694     03AC                     l1385:
  1695     03AC  1477               	bsf	___lwdiv@quotient,0
  1696     03AD                     l1387:
  1697     03AD  3001               	movlw	1
  1698     03AE                     u1055:
  1699     03AE  1003               	clrc
  1700     03AF  0CF3               	rrf	___lwdiv@divisor+1,f
  1701     03B0  0CF2               	rrf	___lwdiv@divisor,f
  1702     03B1  3EFF               	addlw	-1
  1703     03B2  1D03               	skipz
  1704     03B3  2BAE               	goto	u1055
  1705     03B4                     l1389:
  1706     03B4  3001               	movlw	1
  1707     03B5  02F9               	subwf	___lwdiv@counter,f
  1708     03B6  1D03               	btfss	3,2
  1709     03B7  2BB9               	goto	u1061
  1710     03B8  2BBA               	goto	u1060
  1711     03B9                     u1061:
  1712     03B9  2B95               	goto	l1381
  1713     03BA                     u1060:
  1714     03BA                     l1391:
  1715     03BA  0878               	movf	___lwdiv@quotient+1,w
  1716     03BB  00F3               	movwf	?___lwdiv+1
  1717     03BC  0877               	movf	___lwdiv@quotient,w
  1718     03BD  00F2               	movwf	?___lwdiv
  1719     03BE                     l571:
  1720     03BE  0008               	return
  1721     03BF                     __end_of___lwdiv:
  1722                           
  1723                           	psect	text4
  1724     0562                     __ptext4:	
  1725 ;; *************** function _setup *****************
  1726 ;; Defined at:
  1727 ;;		line 90 in file "main.c"
  1728 ;; Parameters:    Size  Location     Type
  1729 ;;		None
  1730 ;; Auto vars:     Size  Location     Type
  1731 ;;		None
  1732 ;; Return value:  Size  Location     Type
  1733 ;;                  1    wreg      void 
  1734 ;; Registers used:
  1735 ;;		wreg, status,2, status,0, pclath, cstack
  1736 ;; Tracked objects:
  1737 ;;		On entry : 0/0
  1738 ;;		On exit  : 0/0
  1739 ;;		Unchanged: 0/0
  1740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1741 ;;      Params:         0       0       0       0       0
  1742 ;;      Locals:         0       0       0       0       0
  1743 ;;      Temps:          0       0       0       0       0
  1744 ;;      Totals:         0       0       0       0       0
  1745 ;;Total ram usage:        0 bytes
  1746 ;; Hardware stack levels used: 1
  1747 ;; Hardware stack levels required when called: 3
  1748 ;; This function calls:
  1749 ;;		_I2C_Master_Init
  1750 ;; This function is called by:
  1751 ;;		_main
  1752 ;; This function uses a non-reentrant model
  1753 ;;
  1754                           
  1755     0562                     _setup:	
  1756                           ;psect for function _setup
  1757                           
  1758     0562                     l1421:	
  1759                           ;incstack = 0
  1760                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1761                           
  1762                           
  1763                           ;main.c: 93:     ANSEL = 0;
  1764     0562  1683               	bsf	3,5	;RP0=1, select bank3
  1765     0563  1703               	bsf	3,6	;RP1=1, select bank3
  1766     0564  0188               	clrf	8	;volatile
  1767                           
  1768                           ;main.c: 94:     ANSELH = 0;
  1769     0565  0189               	clrf	9	;volatile
  1770                           
  1771                           ;main.c: 98:     TRISB = 0;
  1772     0566  1683               	bsf	3,5	;RP0=1, select bank1
  1773     0567  1303               	bcf	3,6	;RP1=0, select bank1
  1774     0568  0186               	clrf	6	;volatile
  1775                           
  1776                           ;main.c: 99:     TRISD = 0;
  1777     0569  0188               	clrf	8	;volatile
  1778                           
  1779                           ;main.c: 104:     PORTA = 0;
  1780     056A  1283               	bcf	3,5	;RP0=0, select bank0
  1781     056B  1303               	bcf	3,6	;RP1=0, select bank0
  1782     056C  0185               	clrf	5	;volatile
  1783                           
  1784                           ;main.c: 105:     PORTB = 0;
  1785     056D  0186               	clrf	6	;volatile
  1786                           
  1787                           ;main.c: 106:     PORTC = 0;
  1788     056E  0187               	clrf	7	;volatile
  1789                           
  1790                           ;main.c: 107:     PORTD = 0;
  1791     056F  0188               	clrf	8	;volatile
  1792                           
  1793                           ;main.c: 108:     PORTE = 0;
  1794     0570  0189               	clrf	9	;volatile
  1795     0571                     l1423:
  1796                           
  1797                           ;main.c: 130:     OSCCONbits.IRCF = 0b111 ;
  1798     0571  3070               	movlw	112
  1799     0572  1683               	bsf	3,5	;RP0=1, select bank1
  1800     0573  1303               	bcf	3,6	;RP1=0, select bank1
  1801     0574  048F               	iorwf	15,f	;volatile
  1802     0575                     l1425:
  1803                           
  1804                           ;main.c: 131:     OSCCONbits.SCS = 1;
  1805     0575  140F               	bsf	15,0	;volatile
  1806     0576                     l1427:
  1807                           
  1808                           ;main.c: 134:     I2C_Master_Init(100000);
  1809     0576  3000               	movlw	0
  1810     0577  1283               	bcf	3,5	;RP0=0, select bank0
  1811     0578  1303               	bcf	3,6	;RP1=0, select bank0
  1812     0579  00C5               	movwf	I2C_Master_Init@c+3
  1813     057A  3001               	movlw	1
  1814     057B  00C4               	movwf	I2C_Master_Init@c+2
  1815     057C  3086               	movlw	134
  1816     057D  00C3               	movwf	I2C_Master_Init@c+1
  1817     057E  30A0               	movlw	160
  1818     057F  00C2               	movwf	I2C_Master_Init@c
  1819     0580  120A  118A  247B  120A  118A  	fcall	_I2C_Master_Init
  1820     0585                     l75:
  1821     0585  0008               	return
  1822     0586                     __end_of_setup:
  1823                           
  1824                           	psect	text5
  1825     047B                     __ptext5:	
  1826 ;; *************** function _I2C_Master_Init *****************
  1827 ;; Defined at:
  1828 ;;		line 16 in file "I2C.c"
  1829 ;; Parameters:    Size  Location     Type
  1830 ;;  c               4    5[BANK0 ] const unsigned long 
  1831 ;; Auto vars:     Size  Location     Type
  1832 ;;		None
  1833 ;; Return value:  Size  Location     Type
  1834 ;;                  1    wreg      void 
  1835 ;; Registers used:
  1836 ;;		wreg, status,2, status,0, pclath, cstack
  1837 ;; Tracked objects:
  1838 ;;		On entry : 0/0
  1839 ;;		On exit  : 0/0
  1840 ;;		Unchanged: 0/0
  1841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1842 ;;      Params:         0       4       0       0       0
  1843 ;;      Locals:         0       0       0       0       0
  1844 ;;      Temps:          0       4       0       0       0
  1845 ;;      Totals:         0       8       0       0       0
  1846 ;;Total ram usage:        8 bytes
  1847 ;; Hardware stack levels used: 1
  1848 ;; Hardware stack levels required when called: 2
  1849 ;; This function calls:
  1850 ;;		___lldiv
  1851 ;; This function is called by:
  1852 ;;		_setup
  1853 ;; This function uses a non-reentrant model
  1854 ;;
  1855                           
  1856     047B                     _I2C_Master_Init:	
  1857                           ;psect for function _I2C_Master_Init
  1858                           
  1859     047B                     l1275:	
  1860                           ;incstack = 0
  1861                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1862                           
  1863                           
  1864                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  1865     047B  3028               	movlw	40
  1866     047C  1283               	bcf	3,5	;RP0=0, select bank0
  1867     047D  1303               	bcf	3,6	;RP1=0, select bank0
  1868     047E  0094               	movwf	20	;volatile
  1869     047F                     l1277:
  1870                           
  1871                           ;I2C.c: 19:     SSPCON2 = 0;
  1872     047F  1683               	bsf	3,5	;RP0=1, select bank1
  1873     0480  1303               	bcf	3,6	;RP1=0, select bank1
  1874     0481  0191               	clrf	17	;volatile
  1875     0482                     l1279:
  1876                           
  1877                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  1878     0482  1283               	bcf	3,5	;RP0=0, select bank0
  1879     0483  1303               	bcf	3,6	;RP1=0, select bank0
  1880     0484  0842               	movf	I2C_Master_Init@c,w
  1881     0485  00C6               	movwf	??_I2C_Master_Init
  1882     0486  0843               	movf	I2C_Master_Init@c+1,w
  1883     0487  00C7               	movwf	??_I2C_Master_Init+1
  1884     0488  0844               	movf	I2C_Master_Init@c+2,w
  1885     0489  00C8               	movwf	??_I2C_Master_Init+2
  1886     048A  0845               	movf	I2C_Master_Init@c+3,w
  1887     048B  00C9               	movwf	??_I2C_Master_Init+3
  1888     048C  3002               	movlw	2
  1889     048D                     u835:
  1890     048D  1003               	clrc
  1891     048E  0DC6               	rlf	??_I2C_Master_Init,f
  1892     048F  0DC7               	rlf	??_I2C_Master_Init+1,f
  1893     0490  0DC8               	rlf	??_I2C_Master_Init+2,f
  1894     0491  0DC9               	rlf	??_I2C_Master_Init+3,f
  1895     0492                     u830:
  1896     0492  3EFF               	addlw	-1
  1897     0493  1D03               	skipz
  1898     0494  2C8D               	goto	u835
  1899     0495  0849               	movf	??_I2C_Master_Init+3,w
  1900     0496  00F5               	movwf	___lldiv@divisor+3
  1901     0497  0848               	movf	??_I2C_Master_Init+2,w
  1902     0498  00F4               	movwf	___lldiv@divisor+2
  1903     0499  0847               	movf	??_I2C_Master_Init+1,w
  1904     049A  00F3               	movwf	___lldiv@divisor+1
  1905     049B  0846               	movf	??_I2C_Master_Init,w
  1906     049C  00F2               	movwf	___lldiv@divisor
  1907     049D  3000               	movlw	0
  1908     049E  00F9               	movwf	___lldiv@dividend+3
  1909     049F  307A               	movlw	122
  1910     04A0  00F8               	movwf	___lldiv@dividend+2
  1911     04A1  3012               	movlw	18
  1912     04A2  00F7               	movwf	___lldiv@dividend+1
  1913     04A3  3000               	movlw	0
  1914     04A4  00F6               	movwf	___lldiv@dividend
  1915     04A5  120A  118A  2267  120A  118A  	fcall	___lldiv
  1916     04AA  0872               	movf	?___lldiv,w
  1917     04AB  3EFF               	addlw	255
  1918     04AC  1683               	bsf	3,5	;RP0=1, select bank1
  1919     04AD  1303               	bcf	3,6	;RP1=0, select bank1
  1920     04AE  0093               	movwf	19	;volatile
  1921     04AF                     l1281:
  1922                           
  1923                           ;I2C.c: 21:     SSPSTAT = 0;
  1924     04AF  0194               	clrf	20	;volatile
  1925     04B0                     l1283:
  1926                           
  1927                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  1928     04B0  1587               	bsf	7,3	;volatile
  1929     04B1                     l1285:
  1930                           
  1931                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  1932     04B1  1607               	bsf	7,4	;volatile
  1933     04B2                     l104:
  1934     04B2  0008               	return
  1935     04B3                     __end_of_I2C_Master_Init:
  1936                           
  1937                           	psect	text6
  1938     0267                     __ptext6:	
  1939 ;; *************** function ___lldiv *****************
  1940 ;; Defined at:
  1941 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  1942 ;; Parameters:    Size  Location     Type
  1943 ;;  divisor         4    2[COMMON] unsigned long 
  1944 ;;  dividend        4    6[COMMON] unsigned long 
  1945 ;; Auto vars:     Size  Location     Type
  1946 ;;  quotient        4    0[BANK0 ] unsigned long 
  1947 ;;  counter         1    4[BANK0 ] unsigned char 
  1948 ;; Return value:  Size  Location     Type
  1949 ;;                  4    2[COMMON] unsigned long 
  1950 ;; Registers used:
  1951 ;;		wreg, status,2, status,0
  1952 ;; Tracked objects:
  1953 ;;		On entry : 0/0
  1954 ;;		On exit  : 0/0
  1955 ;;		Unchanged: 0/0
  1956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1957 ;;      Params:         8       0       0       0       0
  1958 ;;      Locals:         0       5       0       0       0
  1959 ;;      Temps:          1       0       0       0       0
  1960 ;;      Totals:         9       5       0       0       0
  1961 ;;Total ram usage:       14 bytes
  1962 ;; Hardware stack levels used: 1
  1963 ;; Hardware stack levels required when called: 1
  1964 ;; This function calls:
  1965 ;;		Nothing
  1966 ;; This function is called by:
  1967 ;;		_I2C_Master_Init
  1968 ;; This function uses a non-reentrant model
  1969 ;;
  1970                           
  1971     0267                     ___lldiv:	
  1972                           ;psect for function ___lldiv
  1973                           
  1974     0267                     l1251:	
  1975                           ;incstack = 0
  1976                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1977                           
  1978     0267  3000               	movlw	0
  1979     0268  1283               	bcf	3,5	;RP0=0, select bank0
  1980     0269  1303               	bcf	3,6	;RP1=0, select bank0
  1981     026A  00C0               	movwf	___lldiv@quotient+3
  1982     026B  3000               	movlw	0
  1983     026C  00BF               	movwf	___lldiv@quotient+2
  1984     026D  3000               	movlw	0
  1985     026E  00BE               	movwf	___lldiv@quotient+1
  1986     026F  3000               	movlw	0
  1987     0270  00BD               	movwf	___lldiv@quotient
  1988     0271  0875               	movf	___lldiv@divisor+3,w
  1989     0272  0474               	iorwf	___lldiv@divisor+2,w
  1990     0273  0473               	iorwf	___lldiv@divisor+1,w
  1991     0274  0472               	iorwf	___lldiv@divisor,w
  1992     0275  1903               	skipnz
  1993     0276  2A78               	goto	u761
  1994     0277  2A79               	goto	u760
  1995     0278                     u761:
  1996     0278  2AC6               	goto	l1271
  1997     0279                     u760:
  1998     0279                     l1253:
  1999     0279  01C1               	clrf	___lldiv@counter
  2000     027A  0AC1               	incf	___lldiv@counter,f
  2001     027B  2A89               	goto	l1257
  2002     027C                     l1255:
  2003     027C  3001               	movlw	1
  2004     027D  00FA               	movwf	??___lldiv
  2005     027E                     u775:
  2006     027E  1003               	clrc
  2007     027F  0DF2               	rlf	___lldiv@divisor,f
  2008     0280  0DF3               	rlf	___lldiv@divisor+1,f
  2009     0281  0DF4               	rlf	___lldiv@divisor+2,f
  2010     0282  0DF5               	rlf	___lldiv@divisor+3,f
  2011     0283  0BFA               	decfsz	??___lldiv,f
  2012     0284  2A7E               	goto	u775
  2013     0285  3001               	movlw	1
  2014     0286  00FA               	movwf	??___lldiv
  2015     0287  087A               	movf	??___lldiv,w
  2016     0288  07C1               	addwf	___lldiv@counter,f
  2017     0289                     l1257:
  2018     0289  1FF5               	btfss	___lldiv@divisor+3,7
  2019     028A  2A8C               	goto	u781
  2020     028B  2A8D               	goto	u780
  2021     028C                     u781:
  2022     028C  2A7C               	goto	l1255
  2023     028D                     u780:
  2024     028D                     l1259:
  2025     028D  3001               	movlw	1
  2026     028E  00FA               	movwf	??___lldiv
  2027     028F                     u795:
  2028     028F  1003               	clrc
  2029     0290  0DBD               	rlf	___lldiv@quotient,f
  2030     0291  0DBE               	rlf	___lldiv@quotient+1,f
  2031     0292  0DBF               	rlf	___lldiv@quotient+2,f
  2032     0293  0DC0               	rlf	___lldiv@quotient+3,f
  2033     0294  0BFA               	decfsz	??___lldiv,f
  2034     0295  2A8F               	goto	u795
  2035     0296                     l1261:
  2036     0296  0875               	movf	___lldiv@divisor+3,w
  2037     0297  0279               	subwf	___lldiv@dividend+3,w
  2038     0298  1D03               	skipz
  2039     0299  2AA4               	goto	u805
  2040     029A  0874               	movf	___lldiv@divisor+2,w
  2041     029B  0278               	subwf	___lldiv@dividend+2,w
  2042     029C  1D03               	skipz
  2043     029D  2AA4               	goto	u805
  2044     029E  0873               	movf	___lldiv@divisor+1,w
  2045     029F  0277               	subwf	___lldiv@dividend+1,w
  2046     02A0  1D03               	skipz
  2047     02A1  2AA4               	goto	u805
  2048     02A2  0872               	movf	___lldiv@divisor,w
  2049     02A3  0276               	subwf	___lldiv@dividend,w
  2050     02A4                     u805:
  2051     02A4  1C03               	skipc
  2052     02A5  2AA7               	goto	u801
  2053     02A6  2AA8               	goto	u800
  2054     02A7                     u801:
  2055     02A7  2AB7               	goto	l1267
  2056     02A8                     u800:
  2057     02A8                     l1263:
  2058     02A8  0872               	movf	___lldiv@divisor,w
  2059     02A9  02F6               	subwf	___lldiv@dividend,f
  2060     02AA  0873               	movf	___lldiv@divisor+1,w
  2061     02AB  1C03               	skipc
  2062     02AC  0F73               	incfsz	___lldiv@divisor+1,w
  2063     02AD  02F7               	subwf	___lldiv@dividend+1,f
  2064     02AE  0874               	movf	___lldiv@divisor+2,w
  2065     02AF  1C03               	skipc
  2066     02B0  0F74               	incfsz	___lldiv@divisor+2,w
  2067     02B1  02F8               	subwf	___lldiv@dividend+2,f
  2068     02B2  0875               	movf	___lldiv@divisor+3,w
  2069     02B3  1C03               	skipc
  2070     02B4  0F75               	incfsz	___lldiv@divisor+3,w
  2071     02B5  02F9               	subwf	___lldiv@dividend+3,f
  2072     02B6                     l1265:
  2073     02B6  143D               	bsf	___lldiv@quotient,0
  2074     02B7                     l1267:
  2075     02B7  3001               	movlw	1
  2076     02B8                     u815:
  2077     02B8  1003               	clrc
  2078     02B9  0CF5               	rrf	___lldiv@divisor+3,f
  2079     02BA  0CF4               	rrf	___lldiv@divisor+2,f
  2080     02BB  0CF3               	rrf	___lldiv@divisor+1,f
  2081     02BC  0CF2               	rrf	___lldiv@divisor,f
  2082     02BD  3EFF               	addlw	-1
  2083     02BE  1D03               	skipz
  2084     02BF  2AB8               	goto	u815
  2085     02C0                     l1269:
  2086     02C0  3001               	movlw	1
  2087     02C1  02C1               	subwf	___lldiv@counter,f
  2088     02C2  1D03               	btfss	3,2
  2089     02C3  2AC5               	goto	u821
  2090     02C4  2AC6               	goto	u820
  2091     02C5                     u821:
  2092     02C5  2A8D               	goto	l1259
  2093     02C6                     u820:
  2094     02C6                     l1271:
  2095     02C6  0840               	movf	___lldiv@quotient+3,w
  2096     02C7  00F5               	movwf	?___lldiv+3
  2097     02C8  083F               	movf	___lldiv@quotient+2,w
  2098     02C9  00F4               	movwf	?___lldiv+2
  2099     02CA  083E               	movf	___lldiv@quotient+1,w
  2100     02CB  00F3               	movwf	?___lldiv+1
  2101     02CC  083D               	movf	___lldiv@quotient,w
  2102     02CD  00F2               	movwf	?___lldiv
  2103     02CE                     l335:
  2104     02CE  0008               	return
  2105     02CF                     __end_of___lldiv:
  2106                           
  2107                           	psect	text7
  2108     04B3                     __ptext7:	
  2109 ;; *************** function _map *****************
  2110 ;; Defined at:
  2111 ;;		line 46 in file "main.c"
  2112 ;; Parameters:    Size  Location     Type
  2113 ;;  value           1    wreg     unsigned char 
  2114 ;;  inputmin        2    5[BANK0 ] int 
  2115 ;;  inputmax        2    7[BANK0 ] int 
  2116 ;;  outmin          2    9[BANK0 ] int 
  2117 ;;  outmax          2   11[BANK0 ] int 
  2118 ;; Auto vars:     Size  Location     Type
  2119 ;;  value           1   14[BANK0 ] unsigned char 
  2120 ;; Return value:  Size  Location     Type
  2121 ;;                  2    5[BANK0 ] int 
  2122 ;; Registers used:
  2123 ;;		wreg, status,2, status,0, pclath, cstack
  2124 ;; Tracked objects:
  2125 ;;		On entry : 0/0
  2126 ;;		On exit  : 0/0
  2127 ;;		Unchanged: 0/0
  2128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2129 ;;      Params:         0       8       0       0       0
  2130 ;;      Locals:         0       1       0       0       0
  2131 ;;      Temps:          0       1       0       0       0
  2132 ;;      Totals:         0      10       0       0       0
  2133 ;;Total ram usage:       10 bytes
  2134 ;; Hardware stack levels used: 1
  2135 ;; Hardware stack levels required when called: 2
  2136 ;; This function calls:
  2137 ;;		___awdiv
  2138 ;;		___wmul
  2139 ;; This function is called by:
  2140 ;;		_main
  2141 ;; This function uses a non-reentrant model
  2142 ;;
  2143                           
  2144     04B3                     _map:	
  2145                           ;psect for function _map
  2146                           
  2147                           
  2148                           ;incstack = 0
  2149                           ; Regs used in _map: [wreg+status,2+status,0+pclath+cstack]
  2150                           ;map@value stored from wreg
  2151     04B3  1283               	bcf	3,5	;RP0=0, select bank0
  2152     04B4  1303               	bcf	3,6	;RP1=0, select bank0
  2153     04B5  00CB               	movwf	map@value
  2154     04B6                     l1417:
  2155                           
  2156                           ;main.c: 47:     return ((value - inputmin)*(outmax-outmin)) / (inputmax-inputmin)+outmi
      +                          n;}
  2157     04B6  0842               	movf	map@inputmin,w
  2158     04B7  0244               	subwf	map@inputmax,w
  2159     04B8  00F8               	movwf	___awdiv@divisor
  2160     04B9  0843               	movf	map@inputmin+1,w
  2161     04BA  1C03               	skipc
  2162     04BB  0A43               	incf	map@inputmin+1,w
  2163     04BC  0245               	subwf	map@inputmax+1,w
  2164     04BD  00F9               	movwf	___awdiv@divisor+1
  2165     04BE  084B               	movf	map@value,w
  2166     04BF  00CA               	movwf	??_map
  2167     04C0  0842               	movf	map@inputmin,w
  2168     04C1  024A               	subwf	??_map,w
  2169     04C2  00F2               	movwf	___wmul@multiplier
  2170     04C3  0943               	comf	map@inputmin+1,w
  2171     04C4  1803               	skipnc
  2172     04C5  3E01               	addlw	1
  2173     04C6  00F3               	movwf	___wmul@multiplier+1
  2174     04C7  0846               	movf	map@outmin,w
  2175     04C8  0248               	subwf	map@outmax,w
  2176     04C9  00F4               	movwf	___wmul@multiplicand
  2177     04CA  0847               	movf	map@outmin+1,w
  2178     04CB  1C03               	skipc
  2179     04CC  0A47               	incf	map@outmin+1,w
  2180     04CD  0249               	subwf	map@outmax+1,w
  2181     04CE  00F5               	movwf	___wmul@multiplicand+1
  2182     04CF  120A  118A  253D  120A  118A  	fcall	___wmul
  2183     04D4  0873               	movf	?___wmul+1,w
  2184     04D5  00FB               	movwf	___awdiv@dividend+1
  2185     04D6  0872               	movf	?___wmul,w
  2186     04D7  00FA               	movwf	___awdiv@dividend
  2187     04D8  120A  118A  21FE  120A  118A  	fcall	___awdiv
  2188     04DD  1283               	bcf	3,5	;RP0=0, select bank0
  2189     04DE  1303               	bcf	3,6	;RP1=0, select bank0
  2190     04DF  0846               	movf	map@outmin,w
  2191     04E0  0778               	addwf	?___awdiv,w
  2192     04E1  00C2               	movwf	?_map
  2193     04E2  0847               	movf	map@outmin+1,w
  2194     04E3  1803               	skipnc
  2195     04E4  0A47               	incf	map@outmin+1,w
  2196     04E5  0779               	addwf	?___awdiv+1,w
  2197     04E6  00C3               	movwf	?_map+1
  2198     04E7                     l59:
  2199     04E7  0008               	return
  2200     04E8                     __end_of_map:
  2201                           
  2202                           	psect	text8
  2203     053D                     __ptext8:	
  2204 ;; *************** function ___wmul *****************
  2205 ;; Defined at:
  2206 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  2207 ;; Parameters:    Size  Location     Type
  2208 ;;  multiplier      2    2[COMMON] unsigned int 
  2209 ;;  multiplicand    2    4[COMMON] unsigned int 
  2210 ;; Auto vars:     Size  Location     Type
  2211 ;;  product         2    6[COMMON] unsigned int 
  2212 ;; Return value:  Size  Location     Type
  2213 ;;                  2    2[COMMON] unsigned int 
  2214 ;; Registers used:
  2215 ;;		wreg, status,2, status,0
  2216 ;; Tracked objects:
  2217 ;;		On entry : 0/0
  2218 ;;		On exit  : 0/0
  2219 ;;		Unchanged: 0/0
  2220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2221 ;;      Params:         4       0       0       0       0
  2222 ;;      Locals:         2       0       0       0       0
  2223 ;;      Temps:          0       0       0       0       0
  2224 ;;      Totals:         6       0       0       0       0
  2225 ;;Total ram usage:        6 bytes
  2226 ;; Hardware stack levels used: 1
  2227 ;; Hardware stack levels required when called: 1
  2228 ;; This function calls:
  2229 ;;		Nothing
  2230 ;; This function is called by:
  2231 ;;		_map
  2232 ;;		_main
  2233 ;; This function uses a non-reentrant model
  2234 ;;
  2235                           
  2236     053D                     ___wmul:	
  2237                           ;psect for function ___wmul
  2238                           
  2239     053D                     l1311:	
  2240                           ;incstack = 0
  2241                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2242                           
  2243     053D  01F6               	clrf	___wmul@product
  2244     053E  01F7               	clrf	___wmul@product+1
  2245     053F                     l1313:
  2246     053F  1C72               	btfss	___wmul@multiplier,0
  2247     0540  2D42               	goto	u861
  2248     0541  2D43               	goto	u860
  2249     0542                     u861:
  2250     0542  2D49               	goto	l299
  2251     0543                     u860:
  2252     0543                     l1315:
  2253     0543  0874               	movf	___wmul@multiplicand,w
  2254     0544  07F6               	addwf	___wmul@product,f
  2255     0545  1803               	skipnc
  2256     0546  0AF7               	incf	___wmul@product+1,f
  2257     0547  0875               	movf	___wmul@multiplicand+1,w
  2258     0548  07F7               	addwf	___wmul@product+1,f
  2259     0549                     l299:
  2260     0549  3001               	movlw	1
  2261     054A                     u875:
  2262     054A  1003               	clrc
  2263     054B  0DF4               	rlf	___wmul@multiplicand,f
  2264     054C  0DF5               	rlf	___wmul@multiplicand+1,f
  2265     054D  3EFF               	addlw	-1
  2266     054E  1D03               	skipz
  2267     054F  2D4A               	goto	u875
  2268     0550                     l1317:
  2269     0550  3001               	movlw	1
  2270     0551                     u885:
  2271     0551  1003               	clrc
  2272     0552  0CF3               	rrf	___wmul@multiplier+1,f
  2273     0553  0CF2               	rrf	___wmul@multiplier,f
  2274     0554  3EFF               	addlw	-1
  2275     0555  1D03               	skipz
  2276     0556  2D51               	goto	u885
  2277     0557                     l1319:
  2278     0557  0872               	movf	___wmul@multiplier,w
  2279     0558  0473               	iorwf	___wmul@multiplier+1,w
  2280     0559  1D03               	btfss	3,2
  2281     055A  2D5C               	goto	u891
  2282     055B  2D5D               	goto	u890
  2283     055C                     u891:
  2284     055C  2D3F               	goto	l1313
  2285     055D                     u890:
  2286     055D                     l1321:
  2287     055D  0877               	movf	___wmul@product+1,w
  2288     055E  00F3               	movwf	?___wmul+1
  2289     055F  0876               	movf	___wmul@product,w
  2290     0560  00F2               	movwf	?___wmul
  2291     0561                     l301:
  2292     0561  0008               	return
  2293     0562                     __end_of___wmul:
  2294                           
  2295                           	psect	text9
  2296     01FE                     __ptext9:	
  2297 ;; *************** function ___awdiv *****************
  2298 ;; Defined at:
  2299 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  2300 ;; Parameters:    Size  Location     Type
  2301 ;;  divisor         2    8[COMMON] int 
  2302 ;;  dividend        2   10[COMMON] int 
  2303 ;; Auto vars:     Size  Location     Type
  2304 ;;  quotient        2    3[BANK0 ] int 
  2305 ;;  sign            1    2[BANK0 ] unsigned char 
  2306 ;;  counter         1    1[BANK0 ] unsigned char 
  2307 ;; Return value:  Size  Location     Type
  2308 ;;                  2    8[COMMON] int 
  2309 ;; Registers used:
  2310 ;;		wreg, status,2, status,0
  2311 ;; Tracked objects:
  2312 ;;		On entry : 0/0
  2313 ;;		On exit  : 0/0
  2314 ;;		Unchanged: 0/0
  2315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2316 ;;      Params:         4       0       0       0       0
  2317 ;;      Locals:         0       4       0       0       0
  2318 ;;      Temps:          0       1       0       0       0
  2319 ;;      Totals:         4       5       0       0       0
  2320 ;;Total ram usage:        9 bytes
  2321 ;; Hardware stack levels used: 1
  2322 ;; Hardware stack levels required when called: 1
  2323 ;; This function calls:
  2324 ;;		Nothing
  2325 ;; This function is called by:
  2326 ;;		_map
  2327 ;;		_main
  2328 ;; This function uses a non-reentrant model
  2329 ;;
  2330                           
  2331     01FE                     ___awdiv:	
  2332                           ;psect for function ___awdiv
  2333                           
  2334     01FE                     l1325:	
  2335                           ;incstack = 0
  2336                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2337                           
  2338     01FE  1283               	bcf	3,5	;RP0=0, select bank0
  2339     01FF  1303               	bcf	3,6	;RP1=0, select bank0
  2340     0200  01BF               	clrf	___awdiv@sign
  2341     0201                     l1327:
  2342     0201  1FF9               	btfss	___awdiv@divisor+1,7
  2343     0202  2A04               	goto	u901
  2344     0203  2A05               	goto	u900
  2345     0204                     u901:
  2346     0204  2A0C               	goto	l1333
  2347     0205                     u900:
  2348     0205                     l1329:
  2349     0205  09F8               	comf	___awdiv@divisor,f
  2350     0206  09F9               	comf	___awdiv@divisor+1,f
  2351     0207  0AF8               	incf	___awdiv@divisor,f
  2352     0208  1903               	skipnz
  2353     0209  0AF9               	incf	___awdiv@divisor+1,f
  2354     020A                     l1331:
  2355     020A  01BF               	clrf	___awdiv@sign
  2356     020B  0ABF               	incf	___awdiv@sign,f
  2357     020C                     l1333:
  2358     020C  1FFB               	btfss	___awdiv@dividend+1,7
  2359     020D  2A0F               	goto	u911
  2360     020E  2A10               	goto	u910
  2361     020F                     u911:
  2362     020F  2A19               	goto	l1339
  2363     0210                     u910:
  2364     0210                     l1335:
  2365     0210  09FA               	comf	___awdiv@dividend,f
  2366     0211  09FB               	comf	___awdiv@dividend+1,f
  2367     0212  0AFA               	incf	___awdiv@dividend,f
  2368     0213  1903               	skipnz
  2369     0214  0AFB               	incf	___awdiv@dividend+1,f
  2370     0215                     l1337:
  2371     0215  3001               	movlw	1
  2372     0216  00BD               	movwf	??___awdiv
  2373     0217  083D               	movf	??___awdiv,w
  2374     0218  06BF               	xorwf	___awdiv@sign,f
  2375     0219                     l1339:
  2376     0219  01C0               	clrf	___awdiv@quotient
  2377     021A  01C1               	clrf	___awdiv@quotient+1
  2378     021B                     l1341:
  2379     021B  0878               	movf	___awdiv@divisor,w
  2380     021C  0479               	iorwf	___awdiv@divisor+1,w
  2381     021D  1903               	btfsc	3,2
  2382     021E  2A20               	goto	u921
  2383     021F  2A21               	goto	u920
  2384     0220                     u921:
  2385     0220  2A58               	goto	l1361
  2386     0221                     u920:
  2387     0221                     l1343:
  2388     0221  01BE               	clrf	___awdiv@counter
  2389     0222  0ABE               	incf	___awdiv@counter,f
  2390     0223  2A2F               	goto	l1349
  2391     0224                     l1345:
  2392     0224  3001               	movlw	1
  2393     0225                     u935:
  2394     0225  1003               	clrc
  2395     0226  0DF8               	rlf	___awdiv@divisor,f
  2396     0227  0DF9               	rlf	___awdiv@divisor+1,f
  2397     0228  3EFF               	addlw	-1
  2398     0229  1D03               	skipz
  2399     022A  2A25               	goto	u935
  2400     022B                     l1347:
  2401     022B  3001               	movlw	1
  2402     022C  00BD               	movwf	??___awdiv
  2403     022D  083D               	movf	??___awdiv,w
  2404     022E  07BE               	addwf	___awdiv@counter,f
  2405     022F                     l1349:
  2406     022F  1FF9               	btfss	___awdiv@divisor+1,7
  2407     0230  2A32               	goto	u941
  2408     0231  2A33               	goto	u940
  2409     0232                     u941:
  2410     0232  2A24               	goto	l1345
  2411     0233                     u940:
  2412     0233                     l1351:
  2413     0233  3001               	movlw	1
  2414     0234                     u955:
  2415     0234  1003               	clrc
  2416     0235  0DC0               	rlf	___awdiv@quotient,f
  2417     0236  0DC1               	rlf	___awdiv@quotient+1,f
  2418     0237  3EFF               	addlw	-1
  2419     0238  1D03               	skipz
  2420     0239  2A34               	goto	u955
  2421     023A  0879               	movf	___awdiv@divisor+1,w
  2422     023B  027B               	subwf	___awdiv@dividend+1,w
  2423     023C  1D03               	skipz
  2424     023D  2A40               	goto	u965
  2425     023E  0878               	movf	___awdiv@divisor,w
  2426     023F  027A               	subwf	___awdiv@dividend,w
  2427     0240                     u965:
  2428     0240  1C03               	skipc
  2429     0241  2A43               	goto	u961
  2430     0242  2A44               	goto	u960
  2431     0243                     u961:
  2432     0243  2A4B               	goto	l1357
  2433     0244                     u960:
  2434     0244                     l1353:
  2435     0244  0878               	movf	___awdiv@divisor,w
  2436     0245  02FA               	subwf	___awdiv@dividend,f
  2437     0246  0879               	movf	___awdiv@divisor+1,w
  2438     0247  1C03               	skipc
  2439     0248  03FB               	decf	___awdiv@dividend+1,f
  2440     0249  02FB               	subwf	___awdiv@dividend+1,f
  2441     024A                     l1355:
  2442     024A  1440               	bsf	___awdiv@quotient,0
  2443     024B                     l1357:
  2444     024B  3001               	movlw	1
  2445     024C                     u975:
  2446     024C  1003               	clrc
  2447     024D  0CF9               	rrf	___awdiv@divisor+1,f
  2448     024E  0CF8               	rrf	___awdiv@divisor,f
  2449     024F  3EFF               	addlw	-1
  2450     0250  1D03               	skipz
  2451     0251  2A4C               	goto	u975
  2452     0252                     l1359:
  2453     0252  3001               	movlw	1
  2454     0253  02BE               	subwf	___awdiv@counter,f
  2455     0254  1D03               	btfss	3,2
  2456     0255  2A57               	goto	u981
  2457     0256  2A58               	goto	u980
  2458     0257                     u981:
  2459     0257  2A33               	goto	l1351
  2460     0258                     u980:
  2461     0258                     l1361:
  2462     0258  083F               	movf	___awdiv@sign,w
  2463     0259  1903               	btfsc	3,2
  2464     025A  2A5C               	goto	u991
  2465     025B  2A5D               	goto	u990
  2466     025C                     u991:
  2467     025C  2A62               	goto	l1365
  2468     025D                     u990:
  2469     025D                     l1363:
  2470     025D  09C0               	comf	___awdiv@quotient,f
  2471     025E  09C1               	comf	___awdiv@quotient+1,f
  2472     025F  0AC0               	incf	___awdiv@quotient,f
  2473     0260  1903               	skipnz
  2474     0261  0AC1               	incf	___awdiv@quotient+1,f
  2475     0262                     l1365:
  2476     0262  0841               	movf	___awdiv@quotient+1,w
  2477     0263  00F9               	movwf	?___awdiv+1
  2478     0264  0840               	movf	___awdiv@quotient,w
  2479     0265  00F8               	movwf	?___awdiv
  2480     0266                     l452:
  2481     0266  0008               	return
  2482     0267                     __end_of___awdiv:
  2483                           
  2484                           	psect	text10
  2485     02CF                     __ptext10:	
  2486 ;; *************** function ___awmod *****************
  2487 ;; Defined at:
  2488 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  2489 ;; Parameters:    Size  Location     Type
  2490 ;;  divisor         2    5[BANK0 ] int 
  2491 ;;  dividend        2    7[BANK0 ] int 
  2492 ;; Auto vars:     Size  Location     Type
  2493 ;;  sign            1   11[BANK0 ] unsigned char 
  2494 ;;  counter         1   10[BANK0 ] unsigned char 
  2495 ;; Return value:  Size  Location     Type
  2496 ;;                  2    5[BANK0 ] int 
  2497 ;; Registers used:
  2498 ;;		wreg, status,2, status,0
  2499 ;; Tracked objects:
  2500 ;;		On entry : 0/0
  2501 ;;		On exit  : 0/0
  2502 ;;		Unchanged: 0/0
  2503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2504 ;;      Params:         0       4       0       0       0
  2505 ;;      Locals:         0       2       0       0       0
  2506 ;;      Temps:          0       1       0       0       0
  2507 ;;      Totals:         0       7       0       0       0
  2508 ;;Total ram usage:        7 bytes
  2509 ;; Hardware stack levels used: 1
  2510 ;; Hardware stack levels required when called: 1
  2511 ;; This function calls:
  2512 ;;		Nothing
  2513 ;; This function is called by:
  2514 ;;		_main
  2515 ;; This function uses a non-reentrant model
  2516 ;;
  2517                           
  2518     02CF                     ___awmod:	
  2519                           ;psect for function ___awmod
  2520                           
  2521     02CF                     l1553:	
  2522                           ;incstack = 0
  2523                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2524                           
  2525     02CF  1283               	bcf	3,5	;RP0=0, select bank0
  2526     02D0  1303               	bcf	3,6	;RP1=0, select bank0
  2527     02D1  01C8               	clrf	___awmod@sign
  2528     02D2                     l1555:
  2529     02D2  1FC5               	btfss	___awmod@dividend+1,7
  2530     02D3  2AD5               	goto	u1261
  2531     02D4  2AD6               	goto	u1260
  2532     02D5                     u1261:
  2533     02D5  2ADD               	goto	l1561
  2534     02D6                     u1260:
  2535     02D6                     l1557:
  2536     02D6  09C4               	comf	___awmod@dividend,f
  2537     02D7  09C5               	comf	___awmod@dividend+1,f
  2538     02D8  0AC4               	incf	___awmod@dividend,f
  2539     02D9  1903               	skipnz
  2540     02DA  0AC5               	incf	___awmod@dividend+1,f
  2541     02DB                     l1559:
  2542     02DB  01C8               	clrf	___awmod@sign
  2543     02DC  0AC8               	incf	___awmod@sign,f
  2544     02DD                     l1561:
  2545     02DD  1FC3               	btfss	___awmod@divisor+1,7
  2546     02DE  2AE0               	goto	u1271
  2547     02DF  2AE1               	goto	u1270
  2548     02E0                     u1271:
  2549     02E0  2AE6               	goto	l1565
  2550     02E1                     u1270:
  2551     02E1                     l1563:
  2552     02E1  09C2               	comf	___awmod@divisor,f
  2553     02E2  09C3               	comf	___awmod@divisor+1,f
  2554     02E3  0AC2               	incf	___awmod@divisor,f
  2555     02E4  1903               	skipnz
  2556     02E5  0AC3               	incf	___awmod@divisor+1,f
  2557     02E6                     l1565:
  2558     02E6  0842               	movf	___awmod@divisor,w
  2559     02E7  0443               	iorwf	___awmod@divisor+1,w
  2560     02E8  1903               	btfsc	3,2
  2561     02E9  2AEB               	goto	u1281
  2562     02EA  2AEC               	goto	u1280
  2563     02EB                     u1281:
  2564     02EB  2B1B               	goto	l1583
  2565     02EC                     u1280:
  2566     02EC                     l1567:
  2567     02EC  01C7               	clrf	___awmod@counter
  2568     02ED  0AC7               	incf	___awmod@counter,f
  2569     02EE  2AFA               	goto	l1573
  2570     02EF                     l1569:
  2571     02EF  3001               	movlw	1
  2572     02F0                     u1295:
  2573     02F0  1003               	clrc
  2574     02F1  0DC2               	rlf	___awmod@divisor,f
  2575     02F2  0DC3               	rlf	___awmod@divisor+1,f
  2576     02F3  3EFF               	addlw	-1
  2577     02F4  1D03               	skipz
  2578     02F5  2AF0               	goto	u1295
  2579     02F6                     l1571:
  2580     02F6  3001               	movlw	1
  2581     02F7  00C6               	movwf	??___awmod
  2582     02F8  0846               	movf	??___awmod,w
  2583     02F9  07C7               	addwf	___awmod@counter,f
  2584     02FA                     l1573:
  2585     02FA  1FC3               	btfss	___awmod@divisor+1,7
  2586     02FB  2AFD               	goto	u1301
  2587     02FC  2AFE               	goto	u1300
  2588     02FD                     u1301:
  2589     02FD  2AEF               	goto	l1569
  2590     02FE                     u1300:
  2591     02FE                     l1575:
  2592     02FE  0843               	movf	___awmod@divisor+1,w
  2593     02FF  0245               	subwf	___awmod@dividend+1,w
  2594     0300  1D03               	skipz
  2595     0301  2B04               	goto	u1315
  2596     0302  0842               	movf	___awmod@divisor,w
  2597     0303  0244               	subwf	___awmod@dividend,w
  2598     0304                     u1315:
  2599     0304  1C03               	skipc
  2600     0305  2B07               	goto	u1311
  2601     0306  2B08               	goto	u1310
  2602     0307                     u1311:
  2603     0307  2B0E               	goto	l1579
  2604     0308                     u1310:
  2605     0308                     l1577:
  2606     0308  0842               	movf	___awmod@divisor,w
  2607     0309  02C4               	subwf	___awmod@dividend,f
  2608     030A  0843               	movf	___awmod@divisor+1,w
  2609     030B  1C03               	skipc
  2610     030C  03C5               	decf	___awmod@dividend+1,f
  2611     030D  02C5               	subwf	___awmod@dividend+1,f
  2612     030E                     l1579:
  2613     030E  3001               	movlw	1
  2614     030F                     u1325:
  2615     030F  1003               	clrc
  2616     0310  0CC3               	rrf	___awmod@divisor+1,f
  2617     0311  0CC2               	rrf	___awmod@divisor,f
  2618     0312  3EFF               	addlw	-1
  2619     0313  1D03               	skipz
  2620     0314  2B0F               	goto	u1325
  2621     0315                     l1581:
  2622     0315  3001               	movlw	1
  2623     0316  02C7               	subwf	___awmod@counter,f
  2624     0317  1D03               	btfss	3,2
  2625     0318  2B1A               	goto	u1331
  2626     0319  2B1B               	goto	u1330
  2627     031A                     u1331:
  2628     031A  2AFE               	goto	l1575
  2629     031B                     u1330:
  2630     031B                     l1583:
  2631     031B  0848               	movf	___awmod@sign,w
  2632     031C  1903               	btfsc	3,2
  2633     031D  2B1F               	goto	u1341
  2634     031E  2B20               	goto	u1340
  2635     031F                     u1341:
  2636     031F  2B25               	goto	l1587
  2637     0320                     u1340:
  2638     0320                     l1585:
  2639     0320  09C4               	comf	___awmod@dividend,f
  2640     0321  09C5               	comf	___awmod@dividend+1,f
  2641     0322  0AC4               	incf	___awmod@dividend,f
  2642     0323  1903               	skipnz
  2643     0324  0AC5               	incf	___awmod@dividend+1,f
  2644     0325                     l1587:
  2645     0325  0845               	movf	___awmod@dividend+1,w
  2646     0326  00C3               	movwf	?___awmod+1
  2647     0327  0844               	movf	___awmod@dividend,w
  2648     0328  00C2               	movwf	?___awmod
  2649     0329                     l465:
  2650     0329  0008               	return
  2651     032A                     __end_of___awmod:
  2652                           
  2653                           	psect	text11
  2654     03BF                     __ptext11:	
  2655 ;; *************** function _Lcd_Write_String *****************
  2656 ;; Defined at:
  2657 ;;		line 103 in file "LCD.c"
  2658 ;; Parameters:    Size  Location     Type
  2659 ;;  a               2    5[COMMON] PTR unsigned char 
  2660 ;;		 -> buffer(20), STR_1(4), 
  2661 ;; Auto vars:     Size  Location     Type
  2662 ;;  i               2   10[COMMON] int 
  2663 ;; Return value:  Size  Location     Type
  2664 ;;                  1    wreg      void 
  2665 ;; Registers used:
  2666 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2667 ;; Tracked objects:
  2668 ;;		On entry : 0/0
  2669 ;;		On exit  : 0/0
  2670 ;;		Unchanged: 0/0
  2671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2672 ;;      Params:         2       0       0       0       0
  2673 ;;      Locals:         2       0       0       0       0
  2674 ;;      Temps:          3       0       0       0       0
  2675 ;;      Totals:         7       0       0       0       0
  2676 ;;Total ram usage:        7 bytes
  2677 ;; Hardware stack levels used: 1
  2678 ;; Hardware stack levels required when called: 3
  2679 ;; This function calls:
  2680 ;;		_Lcd_Write_Char
  2681 ;; This function is called by:
  2682 ;;		_main
  2683 ;; This function uses a non-reentrant model
  2684 ;;
  2685                           
  2686     03BF                     _Lcd_Write_String:	
  2687                           ;psect for function _Lcd_Write_String
  2688                           
  2689     03BF                     l1455:	
  2690                           ;incstack = 0
  2691                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2692                           
  2693                           
  2694                           ;LCD.c: 104:     int i;;LCD.c: 105:     for (i = 0; a[i] != '\0'; i++)
  2695     03BF  01FA               	clrf	Lcd_Write_String@i
  2696     03C0  01FB               	clrf	Lcd_Write_String@i+1
  2697     03C1  2BE4               	goto	l1461
  2698     03C2                     l1457:
  2699                           
  2700                           ;LCD.c: 106:         Lcd_Write_Char(a[i]);
  2701     03C2  087A               	movf	Lcd_Write_String@i,w
  2702     03C3  0775               	addwf	Lcd_Write_String@a,w
  2703     03C4  00F8               	movwf	??_Lcd_Write_String+1
  2704     03C5  0876               	movf	Lcd_Write_String@a+1,w
  2705     03C6  00F7               	movwf	??_Lcd_Write_String
  2706     03C7  1803               	skipnc
  2707     03C8  0AF7               	incf	??_Lcd_Write_String,f
  2708     03C9  1FFA               	btfss	Lcd_Write_String@i,7
  2709     03CA  2BCC               	goto	u1150
  2710     03CB  03F7               	decf	??_Lcd_Write_String,f
  2711     03CC                     u1150:
  2712     03CC  0877               	movf	??_Lcd_Write_String,w
  2713     03CD  00F9               	movwf	??_Lcd_Write_String+2
  2714     03CE  0879               	movf	??_Lcd_Write_String+2,w
  2715     03CF  1283               	bcf	3,5	;RP0=0, select bank0
  2716     03D0  1303               	bcf	3,6	;RP1=0, select bank0
  2717     03D1  00FF               	movwf	btemp+1
  2718     03D2  0878               	movf	??_Lcd_Write_String+1,w
  2719     03D3  0084               	movwf	4
  2720     03D4  120A  118A  2516  120A  118A  	fcall	stringtab
  2721     03D9  120A  118A  25C0  120A  118A  	fcall	_Lcd_Write_Char
  2722     03DE                     l1459:
  2723     03DE  3001               	movlw	1
  2724     03DF  07FA               	addwf	Lcd_Write_String@i,f
  2725     03E0  1803               	skipnc
  2726     03E1  0AFB               	incf	Lcd_Write_String@i+1,f
  2727     03E2  3000               	movlw	0
  2728     03E3  07FB               	addwf	Lcd_Write_String@i+1,f
  2729     03E4                     l1461:
  2730     03E4  087A               	movf	Lcd_Write_String@i,w
  2731     03E5  0775               	addwf	Lcd_Write_String@a,w
  2732     03E6  00F8               	movwf	??_Lcd_Write_String+1
  2733     03E7  0876               	movf	Lcd_Write_String@a+1,w
  2734     03E8  00F7               	movwf	??_Lcd_Write_String
  2735     03E9  1803               	skipnc
  2736     03EA  0AF7               	incf	??_Lcd_Write_String,f
  2737     03EB  1FFA               	btfss	Lcd_Write_String@i,7
  2738     03EC  2BEE               	goto	u1160
  2739     03ED  03F7               	decf	??_Lcd_Write_String,f
  2740     03EE                     u1160:
  2741     03EE  0877               	movf	??_Lcd_Write_String,w
  2742     03EF  00F9               	movwf	??_Lcd_Write_String+2
  2743     03F0  0879               	movf	??_Lcd_Write_String+2,w
  2744     03F1  1283               	bcf	3,5	;RP0=0, select bank0
  2745     03F2  1303               	bcf	3,6	;RP1=0, select bank0
  2746     03F3  00FF               	movwf	btemp+1
  2747     03F4  0878               	movf	??_Lcd_Write_String+1,w
  2748     03F5  0084               	movwf	4
  2749     03F6  120A  118A  2516  120A  118A  	fcall	stringtab
  2750     03FB  3A00               	xorlw	0
  2751     03FC  1D03               	skipz
  2752     03FD  2BFF               	goto	u1171
  2753     03FE  2C00               	goto	u1170
  2754     03FF                     u1171:
  2755     03FF  2BC2               	goto	l1457
  2756     0400                     u1170:
  2757     0400                     l179:
  2758     0400  0008               	return
  2759     0401                     __end_of_Lcd_Write_String:
  2760                           
  2761                           	psect	text12
  2762     05C0                     __ptext12:	
  2763 ;; *************** function _Lcd_Write_Char *****************
  2764 ;; Defined at:
  2765 ;;		line 95 in file "LCD.c"
  2766 ;; Parameters:    Size  Location     Type
  2767 ;;  a               1    wreg     unsigned char 
  2768 ;; Auto vars:     Size  Location     Type
  2769 ;;  a               1    4[COMMON] unsigned char 
  2770 ;; Return value:  Size  Location     Type
  2771 ;;                  1    wreg      void 
  2772 ;; Registers used:
  2773 ;;		wreg, status,2, status,0, pclath, cstack
  2774 ;; Tracked objects:
  2775 ;;		On entry : 0/0
  2776 ;;		On exit  : 0/0
  2777 ;;		Unchanged: 0/0
  2778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2779 ;;      Params:         0       0       0       0       0
  2780 ;;      Locals:         1       0       0       0       0
  2781 ;;      Temps:          1       0       0       0       0
  2782 ;;      Totals:         2       0       0       0       0
  2783 ;;Total ram usage:        2 bytes
  2784 ;; Hardware stack levels used: 1
  2785 ;; Hardware stack levels required when called: 2
  2786 ;; This function calls:
  2787 ;;		_Lcd_Port
  2788 ;; This function is called by:
  2789 ;;		_Lcd_Write_String
  2790 ;; This function uses a non-reentrant model
  2791 ;;
  2792                           
  2793     05C0                     _Lcd_Write_Char:	
  2794                           ;psect for function _Lcd_Write_Char
  2795                           
  2796                           
  2797                           ;incstack = 0
  2798                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2799                           ;Lcd_Write_Char@a stored from wreg
  2800     05C0  00F4               	movwf	Lcd_Write_Char@a
  2801     05C1                     l1301:
  2802                           
  2803                           ;LCD.c: 96:     PORTBbits.RB0 = 1;
  2804     05C1  1283               	bcf	3,5	;RP0=0, select bank0
  2805     05C2  1303               	bcf	3,6	;RP1=0, select bank0
  2806     05C3  1406               	bsf	6,0	;volatile
  2807     05C4                     l1303:
  2808                           
  2809                           ;LCD.c: 97:     Lcd_Port(a);
  2810     05C4  0874               	movf	Lcd_Write_Char@a,w
  2811     05C5  120A  118A  2401  120A  118A  	fcall	_Lcd_Port
  2812     05CA                     l1305:
  2813                           
  2814                           ;LCD.c: 98:     PORTBbits.RB1 = 1;
  2815     05CA  1283               	bcf	3,5	;RP0=0, select bank0
  2816     05CB  1303               	bcf	3,6	;RP1=0, select bank0
  2817     05CC  1486               	bsf	6,1	;volatile
  2818     05CD                     l1307:
  2819                           
  2820                           ;LCD.c: 99:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  2821     05CD  300D               	movlw	13
  2822     05CE  00F3               	movwf	??_Lcd_Write_Char
  2823     05CF                     u1367:
  2824     05CF  0BF3               	decfsz	??_Lcd_Write_Char,f
  2825     05D0  2DCF               	goto	u1367
  2826     05D1                     l1309:
  2827                           
  2828                           ;LCD.c: 100:     PORTBbits.RB1 = 0;
  2829     05D1  1283               	bcf	3,5	;RP0=0, select bank0
  2830     05D2  1303               	bcf	3,6	;RP1=0, select bank0
  2831     05D3  1086               	bcf	6,1	;volatile
  2832     05D4                     l173:
  2833     05D4  0008               	return
  2834     05D5                     __end_of_Lcd_Write_Char:
  2835                           
  2836                           	psect	text13
  2837     0586                     __ptext13:	
  2838 ;; *************** function _Lcd_Set_Cursor *****************
  2839 ;; Defined at:
  2840 ;;		line 68 in file "LCD.c"
  2841 ;; Parameters:    Size  Location     Type
  2842 ;;  a               1    wreg     unsigned char 
  2843 ;;  b               1    6[COMMON] unsigned char 
  2844 ;; Auto vars:     Size  Location     Type
  2845 ;;  a               1    7[COMMON] unsigned char 
  2846 ;;  temp            1    8[COMMON] unsigned char 
  2847 ;;  y               1    0        unsigned char 
  2848 ;;  z               1    0        unsigned char 
  2849 ;; Return value:  Size  Location     Type
  2850 ;;                  1    wreg      void 
  2851 ;; Registers used:
  2852 ;;		wreg, status,2, status,0, pclath, cstack
  2853 ;; Tracked objects:
  2854 ;;		On entry : 0/0
  2855 ;;		On exit  : 0/0
  2856 ;;		Unchanged: 0/0
  2857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2858 ;;      Params:         1       0       0       0       0
  2859 ;;      Locals:         2       0       0       0       0
  2860 ;;      Temps:          0       0       0       0       0
  2861 ;;      Totals:         3       0       0       0       0
  2862 ;;Total ram usage:        3 bytes
  2863 ;; Hardware stack levels used: 1
  2864 ;; Hardware stack levels required when called: 3
  2865 ;; This function calls:
  2866 ;;		_Lcd_Cmd
  2867 ;; This function is called by:
  2868 ;;		_main
  2869 ;; This function uses a non-reentrant model
  2870 ;;
  2871                           
  2872     0586                     _Lcd_Set_Cursor:	
  2873                           ;psect for function _Lcd_Set_Cursor
  2874                           
  2875                           
  2876                           ;incstack = 0
  2877                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2878                           ;Lcd_Set_Cursor@a stored from wreg
  2879     0586  00F7               	movwf	Lcd_Set_Cursor@a
  2880     0587                     l1443:
  2881                           
  2882                           ;LCD.c: 69:     char temp, z, y;;LCD.c: 70:     if (a == 1) {
  2883     0587  0377               	decf	Lcd_Set_Cursor@a,w
  2884     0588  1D03               	btfss	3,2
  2885     0589  2D8B               	goto	u1131
  2886     058A  2D8C               	goto	u1130
  2887     058B                     u1131:
  2888     058B  2D96               	goto	l1449
  2889     058C                     u1130:
  2890     058C                     l1445:
  2891                           
  2892                           ;LCD.c: 71:         temp = 0x80 + b - 1;
  2893     058C  0876               	movf	Lcd_Set_Cursor@b,w
  2894     058D  3E7F               	addlw	127
  2895     058E  00F8               	movwf	Lcd_Set_Cursor@temp
  2896     058F                     l1447:
  2897                           
  2898                           ;LCD.c: 72:         Lcd_Cmd(temp);
  2899     058F  0878               	movf	Lcd_Set_Cursor@temp,w
  2900     0590  120A  118A  25A6  120A  118A  	fcall	_Lcd_Cmd
  2901                           
  2902                           ;LCD.c: 73:     } else if (a == 2) {
  2903     0595  2DA5               	goto	l167
  2904     0596                     l1449:
  2905     0596  3002               	movlw	2
  2906     0597  0677               	xorwf	Lcd_Set_Cursor@a,w
  2907     0598  1D03               	btfss	3,2
  2908     0599  2D9B               	goto	u1141
  2909     059A  2D9C               	goto	u1140
  2910     059B                     u1141:
  2911     059B  2DA5               	goto	l167
  2912     059C                     u1140:
  2913     059C                     l1451:
  2914                           
  2915                           ;LCD.c: 74:         temp = 0xC0 + b - 1;
  2916     059C  0876               	movf	Lcd_Set_Cursor@b,w
  2917     059D  3EBF               	addlw	191
  2918     059E  00F8               	movwf	Lcd_Set_Cursor@temp
  2919     059F                     l1453:
  2920                           
  2921                           ;LCD.c: 75:         Lcd_Cmd(temp);
  2922     059F  0878               	movf	Lcd_Set_Cursor@temp,w
  2923     05A0  120A  118A  25A6  120A  118A  	fcall	_Lcd_Cmd
  2924     05A5                     l167:
  2925     05A5  0008               	return
  2926     05A6                     __end_of_Lcd_Set_Cursor:
  2927                           
  2928                           	psect	text14
  2929     032A                     __ptext14:	
  2930 ;; *************** function _Lcd_Init *****************
  2931 ;; Defined at:
  2932 ;;		line 79 in file "LCD.c"
  2933 ;; Parameters:    Size  Location     Type
  2934 ;;		None
  2935 ;; Auto vars:     Size  Location     Type
  2936 ;;		None
  2937 ;; Return value:  Size  Location     Type
  2938 ;;                  1    wreg      void 
  2939 ;; Registers used:
  2940 ;;		wreg, status,2, status,0, pclath, cstack
  2941 ;; Tracked objects:
  2942 ;;		On entry : 0/0
  2943 ;;		On exit  : 0/0
  2944 ;;		Unchanged: 0/0
  2945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2946 ;;      Params:         0       0       0       0       0
  2947 ;;      Locals:         0       0       0       0       0
  2948 ;;      Temps:          2       0       0       0       0
  2949 ;;      Totals:         2       0       0       0       0
  2950 ;;Total ram usage:        2 bytes
  2951 ;; Hardware stack levels used: 1
  2952 ;; Hardware stack levels required when called: 3
  2953 ;; This function calls:
  2954 ;;		_Lcd_Cmd
  2955 ;;		_Lcd_Port
  2956 ;; This function is called by:
  2957 ;;		_main
  2958 ;; This function uses a non-reentrant model
  2959 ;;
  2960                           
  2961     032A                     _Lcd_Init:	
  2962                           ;psect for function _Lcd_Init
  2963                           
  2964     032A                     l1429:	
  2965                           ;incstack = 0
  2966                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2967                           
  2968                           
  2969                           ;LCD.c: 80:     Lcd_Port(0x00);
  2970     032A  3000               	movlw	0
  2971     032B  120A  118A  2401  120A  118A  	fcall	_Lcd_Port
  2972     0330                     l1431:
  2973                           
  2974                           ;LCD.c: 81:     _delay((unsigned long)((20)*(4000000/4000.0)));
  2975     0330  301A               	movlw	26
  2976     0331  00F7               	movwf	??_Lcd_Init+1
  2977     0332  30F8               	movlw	248
  2978     0333  00F6               	movwf	??_Lcd_Init
  2979     0334                     u1377:
  2980     0334  0BF6               	decfsz	??_Lcd_Init,f
  2981     0335  2B34               	goto	u1377
  2982     0336  0BF7               	decfsz	??_Lcd_Init+1,f
  2983     0337  2B34               	goto	u1377
  2984     0338  0000               	nop
  2985     0339                     l1433:
  2986                           
  2987                           ;LCD.c: 82:     Lcd_Cmd(0x030);
  2988     0339  3030               	movlw	48
  2989     033A  120A  118A  25A6  120A  118A  	fcall	_Lcd_Cmd
  2990                           
  2991                           ;LCD.c: 83:     _delay((unsigned long)((5)*(4000000/4000.0)));
  2992     033F  3007               	movlw	7
  2993     0340  00F7               	movwf	??_Lcd_Init+1
  2994     0341  307D               	movlw	125
  2995     0342  00F6               	movwf	??_Lcd_Init
  2996     0343                     u1387:
  2997     0343  0BF6               	decfsz	??_Lcd_Init,f
  2998     0344  2B43               	goto	u1387
  2999     0345  0BF7               	decfsz	??_Lcd_Init+1,f
  3000     0346  2B43               	goto	u1387
  3001     0347                     l1435:
  3002                           
  3003                           ;LCD.c: 84:     Lcd_Cmd(0x030);
  3004     0347  3030               	movlw	48
  3005     0348  120A  118A  25A6  120A  118A  	fcall	_Lcd_Cmd
  3006     034D                     l1437:
  3007                           
  3008                           ;LCD.c: 85:     _delay((unsigned long)((200)*(4000000/4000000.0)));
  3009     034D  3042               	movlw	66
  3010     034E  00F6               	movwf	??_Lcd_Init
  3011     034F                     u1397:
  3012     034F  0BF6               	decfsz	??_Lcd_Init,f
  3013     0350  2B4F               	goto	u1397
  3014     0351  0000               	nop
  3015                           
  3016                           ;LCD.c: 86:     Lcd_Cmd(0x030);
  3017     0352  3030               	movlw	48
  3018     0353  120A  118A  25A6  120A  118A  	fcall	_Lcd_Cmd
  3019                           
  3020                           ;LCD.c: 87:     Lcd_Cmd(0x38);
  3021     0358  3038               	movlw	56
  3022     0359  120A  118A  25A6  120A  118A  	fcall	_Lcd_Cmd
  3023                           
  3024                           ;LCD.c: 88:     Lcd_Cmd(0x08);
  3025     035E  3008               	movlw	8
  3026     035F  120A  118A  25A6  120A  118A  	fcall	_Lcd_Cmd
  3027                           
  3028                           ;LCD.c: 89:     Lcd_Cmd(0x01);
  3029     0364  3001               	movlw	1
  3030     0365  120A  118A  25A6  120A  118A  	fcall	_Lcd_Cmd
  3031                           
  3032                           ;LCD.c: 90:     Lcd_Cmd(0x06);
  3033     036A  3006               	movlw	6
  3034     036B  120A  118A  25A6  120A  118A  	fcall	_Lcd_Cmd
  3035                           
  3036                           ;LCD.c: 91:     Lcd_Cmd(0x0C);
  3037     0370  300C               	movlw	12
  3038     0371  120A  118A  25A6  120A  118A  	fcall	_Lcd_Cmd
  3039     0376                     l1439:
  3040                           
  3041                           ;LCD.c: 92:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  3042     0376  3021               	movlw	33
  3043     0377  00F6               	movwf	??_Lcd_Init
  3044     0378                     u1407:
  3045     0378  0BF6               	decfsz	??_Lcd_Init,f
  3046     0379  2B78               	goto	u1407
  3047     037A                     l170:
  3048     037A  0008               	return
  3049     037B                     __end_of_Lcd_Init:
  3050                           
  3051                           	psect	text15
  3052     05D5                     __ptext15:	
  3053 ;; *************** function _Lcd_Clear *****************
  3054 ;; Defined at:
  3055 ;;		line 63 in file "LCD.c"
  3056 ;; Parameters:    Size  Location     Type
  3057 ;;		None
  3058 ;; Auto vars:     Size  Location     Type
  3059 ;;		None
  3060 ;; Return value:  Size  Location     Type
  3061 ;;                  1    wreg      void 
  3062 ;; Registers used:
  3063 ;;		wreg, status,2, status,0, pclath, cstack
  3064 ;; Tracked objects:
  3065 ;;		On entry : 0/0
  3066 ;;		On exit  : 0/0
  3067 ;;		Unchanged: 0/0
  3068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3069 ;;      Params:         0       0       0       0       0
  3070 ;;      Locals:         0       0       0       0       0
  3071 ;;      Temps:          0       0       0       0       0
  3072 ;;      Totals:         0       0       0       0       0
  3073 ;;Total ram usage:        0 bytes
  3074 ;; Hardware stack levels used: 1
  3075 ;; Hardware stack levels required when called: 3
  3076 ;; This function calls:
  3077 ;;		_Lcd_Cmd
  3078 ;; This function is called by:
  3079 ;;		_main
  3080 ;; This function uses a non-reentrant model
  3081 ;;
  3082                           
  3083     05D5                     _Lcd_Clear:	
  3084                           ;psect for function _Lcd_Clear
  3085                           
  3086     05D5                     l1441:	
  3087                           ;incstack = 0
  3088                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3089                           
  3090                           
  3091                           ;LCD.c: 64:     Lcd_Cmd(0);
  3092     05D5  3000               	movlw	0
  3093     05D6  120A  118A  25A6  120A  118A  	fcall	_Lcd_Cmd
  3094                           
  3095                           ;LCD.c: 65:     Lcd_Cmd(1);
  3096     05DB  3001               	movlw	1
  3097     05DC  120A  118A  25A6  120A  118A  	fcall	_Lcd_Cmd
  3098     05E1                     l161:
  3099     05E1  0008               	return
  3100     05E2                     __end_of_Lcd_Clear:
  3101                           
  3102                           	psect	text16
  3103     05A6                     __ptext16:	
  3104 ;; *************** function _Lcd_Cmd *****************
  3105 ;; Defined at:
  3106 ;;		line 55 in file "LCD.c"
  3107 ;; Parameters:    Size  Location     Type
  3108 ;;  a               1    wreg     unsigned char 
  3109 ;; Auto vars:     Size  Location     Type
  3110 ;;  a               1    5[COMMON] unsigned char 
  3111 ;; Return value:  Size  Location     Type
  3112 ;;                  1    wreg      void 
  3113 ;; Registers used:
  3114 ;;		wreg, status,2, status,0, pclath, cstack
  3115 ;; Tracked objects:
  3116 ;;		On entry : 0/0
  3117 ;;		On exit  : 0/0
  3118 ;;		Unchanged: 0/0
  3119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3120 ;;      Params:         0       0       0       0       0
  3121 ;;      Locals:         1       0       0       0       0
  3122 ;;      Temps:          2       0       0       0       0
  3123 ;;      Totals:         3       0       0       0       0
  3124 ;;Total ram usage:        3 bytes
  3125 ;; Hardware stack levels used: 1
  3126 ;; Hardware stack levels required when called: 2
  3127 ;; This function calls:
  3128 ;;		_Lcd_Port
  3129 ;; This function is called by:
  3130 ;;		_Lcd_Clear
  3131 ;;		_Lcd_Set_Cursor
  3132 ;;		_Lcd_Init
  3133 ;;		_Lcd_Shift_Right
  3134 ;;		_Lcd_Shift_Left
  3135 ;; This function uses a non-reentrant model
  3136 ;;
  3137                           
  3138     05A6                     _Lcd_Cmd:	
  3139                           ;psect for function _Lcd_Cmd
  3140                           
  3141                           
  3142                           ;incstack = 0
  3143                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3144                           ;Lcd_Cmd@a stored from wreg
  3145     05A6  00F5               	movwf	Lcd_Cmd@a
  3146     05A7                     l1291:
  3147                           
  3148                           ;LCD.c: 56:     PORTBbits.RB0 = 0;
  3149     05A7  1283               	bcf	3,5	;RP0=0, select bank0
  3150     05A8  1303               	bcf	3,6	;RP1=0, select bank0
  3151     05A9  1006               	bcf	6,0	;volatile
  3152     05AA                     l1293:
  3153                           
  3154                           ;LCD.c: 57:     Lcd_Port(a);
  3155     05AA  0875               	movf	Lcd_Cmd@a,w
  3156     05AB  120A  118A  2401  120A  118A  	fcall	_Lcd_Port
  3157     05B0                     l1295:
  3158                           
  3159                           ;LCD.c: 58:     PORTBbits.RB1 = 1;
  3160     05B0  1283               	bcf	3,5	;RP0=0, select bank0
  3161     05B1  1303               	bcf	3,6	;RP1=0, select bank0
  3162     05B2  1486               	bsf	6,1	;volatile
  3163     05B3                     l1297:
  3164                           
  3165                           ;LCD.c: 59:     _delay((unsigned long)((4)*(4000000/4000.0)));
  3166     05B3  3006               	movlw	6
  3167     05B4  00F4               	movwf	??_Lcd_Cmd+1
  3168     05B5  3030               	movlw	48
  3169     05B6  00F3               	movwf	??_Lcd_Cmd
  3170     05B7                     u1417:
  3171     05B7  0BF3               	decfsz	??_Lcd_Cmd,f
  3172     05B8  2DB7               	goto	u1417
  3173     05B9  0BF4               	decfsz	??_Lcd_Cmd+1,f
  3174     05BA  2DB7               	goto	u1417
  3175     05BB  0000               	nop
  3176     05BC                     l1299:
  3177                           
  3178                           ;LCD.c: 60:     PORTBbits.RB1 = 0;
  3179     05BC  1283               	bcf	3,5	;RP0=0, select bank0
  3180     05BD  1303               	bcf	3,6	;RP1=0, select bank0
  3181     05BE  1086               	bcf	6,1	;volatile
  3182     05BF                     l158:
  3183     05BF  0008               	return
  3184     05C0                     __end_of_Lcd_Cmd:
  3185                           
  3186                           	psect	text17
  3187     0401                     __ptext17:	
  3188 ;; *************** function _Lcd_Port *****************
  3189 ;; Defined at:
  3190 ;;		line 13 in file "LCD.c"
  3191 ;; Parameters:    Size  Location     Type
  3192 ;;  a               1    wreg     unsigned char 
  3193 ;; Auto vars:     Size  Location     Type
  3194 ;;  a               1    2[COMMON] unsigned char 
  3195 ;; Return value:  Size  Location     Type
  3196 ;;                  1    wreg      void 
  3197 ;; Registers used:
  3198 ;;		wreg
  3199 ;; Tracked objects:
  3200 ;;		On entry : 0/0
  3201 ;;		On exit  : 0/0
  3202 ;;		Unchanged: 0/0
  3203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3204 ;;      Params:         0       0       0       0       0
  3205 ;;      Locals:         1       0       0       0       0
  3206 ;;      Temps:          0       0       0       0       0
  3207 ;;      Totals:         1       0       0       0       0
  3208 ;;Total ram usage:        1 bytes
  3209 ;; Hardware stack levels used: 1
  3210 ;; Hardware stack levels required when called: 1
  3211 ;; This function calls:
  3212 ;;		Nothing
  3213 ;; This function is called by:
  3214 ;;		_Lcd_Cmd
  3215 ;;		_Lcd_Init
  3216 ;;		_Lcd_Write_Char
  3217 ;; This function uses a non-reentrant model
  3218 ;;
  3219                           
  3220     0401                     _Lcd_Port:	
  3221                           ;psect for function _Lcd_Port
  3222                           
  3223                           
  3224                           ;incstack = 0
  3225                           ; Regs used in _Lcd_Port: [wreg]
  3226                           ;Lcd_Port@a stored from wreg
  3227     0401  00F2               	movwf	Lcd_Port@a
  3228     0402                     l1233:
  3229                           
  3230                           ;LCD.c: 14:     if (a & 1)
  3231     0402  1C72               	btfss	Lcd_Port@a,0
  3232     0403  2C05               	goto	u681
  3233     0404  2C06               	goto	u680
  3234     0405                     u681:
  3235     0405  2C0A               	goto	l139
  3236     0406                     u680:
  3237     0406                     l1235:
  3238                           
  3239                           ;LCD.c: 15:         PORTDbits.RD0 = 1;
  3240     0406  1283               	bcf	3,5	;RP0=0, select bank0
  3241     0407  1303               	bcf	3,6	;RP1=0, select bank0
  3242     0408  1408               	bsf	8,0	;volatile
  3243     0409  2C0D               	goto	l140
  3244     040A                     l139:	
  3245                           ;LCD.c: 16:     else
  3246                           
  3247                           
  3248                           ;LCD.c: 17:         PORTDbits.RD0 = 0;
  3249     040A  1283               	bcf	3,5	;RP0=0, select bank0
  3250     040B  1303               	bcf	3,6	;RP1=0, select bank0
  3251     040C  1008               	bcf	8,0	;volatile
  3252     040D                     l140:
  3253                           
  3254                           ;LCD.c: 19:     if (a & 2)
  3255     040D  1CF2               	btfss	Lcd_Port@a,1
  3256     040E  2C10               	goto	u691
  3257     040F  2C11               	goto	u690
  3258     0410                     u691:
  3259     0410  2C13               	goto	l141
  3260     0411                     u690:
  3261     0411                     l1237:
  3262                           
  3263                           ;LCD.c: 20:         PORTDbits.RD1 = 1;
  3264     0411  1488               	bsf	8,1	;volatile
  3265     0412  2C14               	goto	l142
  3266     0413                     l141:	
  3267                           ;LCD.c: 21:     else
  3268                           
  3269                           
  3270                           ;LCD.c: 22:         PORTDbits.RD1 = 0;
  3271     0413  1088               	bcf	8,1	;volatile
  3272     0414                     l142:
  3273                           
  3274                           ;LCD.c: 24:     if (a & 4)
  3275     0414  1D72               	btfss	Lcd_Port@a,2
  3276     0415  2C17               	goto	u701
  3277     0416  2C18               	goto	u700
  3278     0417                     u701:
  3279     0417  2C1A               	goto	l143
  3280     0418                     u700:
  3281     0418                     l1239:
  3282                           
  3283                           ;LCD.c: 25:         PORTDbits.RD2 = 1;
  3284     0418  1508               	bsf	8,2	;volatile
  3285     0419  2C1B               	goto	l144
  3286     041A                     l143:	
  3287                           ;LCD.c: 26:     else
  3288                           
  3289                           
  3290                           ;LCD.c: 27:         PORTDbits.RD2 = 0;
  3291     041A  1108               	bcf	8,2	;volatile
  3292     041B                     l144:
  3293                           
  3294                           ;LCD.c: 29:     if (a & 8)
  3295     041B  1DF2               	btfss	Lcd_Port@a,3
  3296     041C  2C1E               	goto	u711
  3297     041D  2C1F               	goto	u710
  3298     041E                     u711:
  3299     041E  2C21               	goto	l145
  3300     041F                     u710:
  3301     041F                     l1241:
  3302                           
  3303                           ;LCD.c: 30:         PORTDbits.RD3 = 1;
  3304     041F  1588               	bsf	8,3	;volatile
  3305     0420  2C22               	goto	l146
  3306     0421                     l145:	
  3307                           ;LCD.c: 31:     else
  3308                           
  3309                           
  3310                           ;LCD.c: 32:         PORTDbits.RD3 = 0;
  3311     0421  1188               	bcf	8,3	;volatile
  3312     0422                     l146:
  3313                           
  3314                           ;LCD.c: 34:     if (a & 16)
  3315     0422  1E72               	btfss	Lcd_Port@a,4
  3316     0423  2C25               	goto	u721
  3317     0424  2C26               	goto	u720
  3318     0425                     u721:
  3319     0425  2C28               	goto	l147
  3320     0426                     u720:
  3321     0426                     l1243:
  3322                           
  3323                           ;LCD.c: 35:         PORTDbits.RD4 = 1;
  3324     0426  1608               	bsf	8,4	;volatile
  3325     0427  2C29               	goto	l148
  3326     0428                     l147:	
  3327                           ;LCD.c: 36:     else
  3328                           
  3329                           
  3330                           ;LCD.c: 37:         PORTDbits.RD4 = 0;
  3331     0428  1208               	bcf	8,4	;volatile
  3332     0429                     l148:
  3333                           
  3334                           ;LCD.c: 39:     if (a & 32)
  3335     0429  1EF2               	btfss	Lcd_Port@a,5
  3336     042A  2C2C               	goto	u731
  3337     042B  2C2D               	goto	u730
  3338     042C                     u731:
  3339     042C  2C2F               	goto	l149
  3340     042D                     u730:
  3341     042D                     l1245:
  3342                           
  3343                           ;LCD.c: 40:         PORTDbits.RD5 = 1;
  3344     042D  1688               	bsf	8,5	;volatile
  3345     042E  2C30               	goto	l150
  3346     042F                     l149:	
  3347                           ;LCD.c: 41:     else
  3348                           
  3349                           
  3350                           ;LCD.c: 42:         PORTDbits.RD5 = 0;
  3351     042F  1288               	bcf	8,5	;volatile
  3352     0430                     l150:
  3353                           
  3354                           ;LCD.c: 44:     if (a & 64)
  3355     0430  1F72               	btfss	Lcd_Port@a,6
  3356     0431  2C33               	goto	u741
  3357     0432  2C34               	goto	u740
  3358     0433                     u741:
  3359     0433  2C36               	goto	l151
  3360     0434                     u740:
  3361     0434                     l1247:
  3362                           
  3363                           ;LCD.c: 45:         PORTDbits.RD6 = 1;
  3364     0434  1708               	bsf	8,6	;volatile
  3365     0435  2C37               	goto	l152
  3366     0436                     l151:	
  3367                           ;LCD.c: 46:     else
  3368                           
  3369                           
  3370                           ;LCD.c: 47:         PORTDbits.RD6 = 0;
  3371     0436  1308               	bcf	8,6	;volatile
  3372     0437                     l152:
  3373                           
  3374                           ;LCD.c: 49:     if (a & 128)
  3375     0437  1FF2               	btfss	Lcd_Port@a,7
  3376     0438  2C3A               	goto	u751
  3377     0439  2C3B               	goto	u750
  3378     043A                     u751:
  3379     043A  2C3D               	goto	l153
  3380     043B                     u750:
  3381     043B                     l1249:
  3382                           
  3383                           ;LCD.c: 50:         PORTDbits.RD7 = 1;
  3384     043B  1788               	bsf	8,7	;volatile
  3385     043C  2C3E               	goto	l155
  3386     043D                     l153:	
  3387                           ;LCD.c: 51:     else
  3388                           
  3389                           
  3390                           ;LCD.c: 52:         PORTDbits.RD7 = 0;
  3391     043D  1388               	bcf	8,7	;volatile
  3392     043E                     l155:
  3393     043E  0008               	return
  3394     043F                     __end_of_Lcd_Port:
  3395                           
  3396                           	psect	text18
  3397     05EF                     __ptext18:	
  3398 ;; *************** function _I2C_Master_Write *****************
  3399 ;; Defined at:
  3400 ;;		line 65 in file "I2C.c"
  3401 ;; Parameters:    Size  Location     Type
  3402 ;;  d               2    2[COMMON] unsigned int 
  3403 ;; Auto vars:     Size  Location     Type
  3404 ;;		None
  3405 ;; Return value:  Size  Location     Type
  3406 ;;                  1    wreg      void 
  3407 ;; Registers used:
  3408 ;;		wreg, status,2, status,0, pclath, cstack
  3409 ;; Tracked objects:
  3410 ;;		On entry : 0/0
  3411 ;;		On exit  : 0/0
  3412 ;;		Unchanged: 0/0
  3413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3414 ;;      Params:         2       0       0       0       0
  3415 ;;      Locals:         0       0       0       0       0
  3416 ;;      Temps:          0       0       0       0       0
  3417 ;;      Totals:         2       0       0       0       0
  3418 ;;Total ram usage:        2 bytes
  3419 ;; Hardware stack levels used: 1
  3420 ;; Hardware stack levels required when called: 2
  3421 ;; This function calls:
  3422 ;;		_I2C_Master_Wait
  3423 ;; This function is called by:
  3424 ;;		_main
  3425 ;; This function uses a non-reentrant model
  3426 ;;
  3427                           
  3428     05EF                     _I2C_Master_Write:	
  3429                           ;psect for function _I2C_Master_Write
  3430                           
  3431     05EF                     l1467:	
  3432                           ;incstack = 0
  3433                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3434                           
  3435                           
  3436                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  3437     05EF  120A  118A  25E2  120A  118A  	fcall	_I2C_Master_Wait
  3438     05F4                     l1469:
  3439                           
  3440                           ;I2C.c: 68:     SSPBUF = d;
  3441     05F4  0872               	movf	I2C_Master_Write@d,w
  3442     05F5  1283               	bcf	3,5	;RP0=0, select bank0
  3443     05F6  1303               	bcf	3,6	;RP1=0, select bank0
  3444     05F7  0093               	movwf	19	;volatile
  3445     05F8                     l122:
  3446     05F8  0008               	return
  3447     05F9                     __end_of_I2C_Master_Write:
  3448                           
  3449                           	psect	text19
  3450     05F9                     __ptext19:	
  3451 ;; *************** function _I2C_Master_Stop *****************
  3452 ;; Defined at:
  3453 ;;		line 55 in file "I2C.c"
  3454 ;; Parameters:    Size  Location     Type
  3455 ;;		None
  3456 ;; Auto vars:     Size  Location     Type
  3457 ;;		None
  3458 ;; Return value:  Size  Location     Type
  3459 ;;                  1    wreg      void 
  3460 ;; Registers used:
  3461 ;;		wreg, status,2, status,0, pclath, cstack
  3462 ;; Tracked objects:
  3463 ;;		On entry : 0/0
  3464 ;;		On exit  : 0/0
  3465 ;;		Unchanged: 0/0
  3466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3467 ;;      Params:         0       0       0       0       0
  3468 ;;      Locals:         0       0       0       0       0
  3469 ;;      Temps:          0       0       0       0       0
  3470 ;;      Totals:         0       0       0       0       0
  3471 ;;Total ram usage:        0 bytes
  3472 ;; Hardware stack levels used: 1
  3473 ;; Hardware stack levels required when called: 2
  3474 ;; This function calls:
  3475 ;;		_I2C_Master_Wait
  3476 ;; This function is called by:
  3477 ;;		_main
  3478 ;; This function uses a non-reentrant model
  3479 ;;
  3480                           
  3481     05F9                     _I2C_Master_Stop:	
  3482                           ;psect for function _I2C_Master_Stop
  3483                           
  3484     05F9                     l1487:	
  3485                           ;incstack = 0
  3486                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3487                           
  3488                           
  3489                           ;I2C.c: 57:     I2C_Master_Wait();
  3490     05F9  120A  118A  25E2  120A  118A  	fcall	_I2C_Master_Wait
  3491     05FE                     l1489:
  3492                           
  3493                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  3494     05FE  1683               	bsf	3,5	;RP0=1, select bank1
  3495     05FF  1303               	bcf	3,6	;RP1=0, select bank1
  3496     0600  1511               	bsf	17,2	;volatile
  3497     0601                     l119:
  3498     0601  0008               	return
  3499     0602                     __end_of_I2C_Master_Stop:
  3500                           
  3501                           	psect	text20
  3502     0602                     __ptext20:	
  3503 ;; *************** function _I2C_Master_Start *****************
  3504 ;; Defined at:
  3505 ;;		line 39 in file "I2C.c"
  3506 ;; Parameters:    Size  Location     Type
  3507 ;;		None
  3508 ;; Auto vars:     Size  Location     Type
  3509 ;;		None
  3510 ;; Return value:  Size  Location     Type
  3511 ;;                  1    wreg      void 
  3512 ;; Registers used:
  3513 ;;		wreg, status,2, status,0, pclath, cstack
  3514 ;; Tracked objects:
  3515 ;;		On entry : 0/0
  3516 ;;		On exit  : 0/0
  3517 ;;		Unchanged: 0/0
  3518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3519 ;;      Params:         0       0       0       0       0
  3520 ;;      Locals:         0       0       0       0       0
  3521 ;;      Temps:          0       0       0       0       0
  3522 ;;      Totals:         0       0       0       0       0
  3523 ;;Total ram usage:        0 bytes
  3524 ;; Hardware stack levels used: 1
  3525 ;; Hardware stack levels required when called: 2
  3526 ;; This function calls:
  3527 ;;		_I2C_Master_Wait
  3528 ;; This function is called by:
  3529 ;;		_main
  3530 ;; This function uses a non-reentrant model
  3531 ;;
  3532                           
  3533     0602                     _I2C_Master_Start:	
  3534                           ;psect for function _I2C_Master_Start
  3535                           
  3536     0602                     l1463:	
  3537                           ;incstack = 0
  3538                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3539                           
  3540                           
  3541                           ;I2C.c: 41:     I2C_Master_Wait();
  3542     0602  120A  118A  25E2  120A  118A  	fcall	_I2C_Master_Wait
  3543     0607                     l1465:
  3544                           
  3545                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  3546     0607  1683               	bsf	3,5	;RP0=1, select bank1
  3547     0608  1303               	bcf	3,6	;RP1=0, select bank1
  3548     0609  1411               	bsf	17,0	;volatile
  3549     060A                     l113:
  3550     060A  0008               	return
  3551     060B                     __end_of_I2C_Master_Start:
  3552                           
  3553                           	psect	text21
  3554     04E8                     __ptext21:	
  3555 ;; *************** function _I2C_Master_Read *****************
  3556 ;; Defined at:
  3557 ;;		line 74 in file "I2C.c"
  3558 ;; Parameters:    Size  Location     Type
  3559 ;;  a               2    2[COMMON] unsigned short 
  3560 ;; Auto vars:     Size  Location     Type
  3561 ;;  temp            2    6[COMMON] unsigned short 
  3562 ;; Return value:  Size  Location     Type
  3563 ;;                  2    2[COMMON] unsigned short 
  3564 ;; Registers used:
  3565 ;;		wreg, status,2, status,0, pclath, cstack
  3566 ;; Tracked objects:
  3567 ;;		On entry : 0/0
  3568 ;;		On exit  : 0/0
  3569 ;;		Unchanged: 0/0
  3570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3571 ;;      Params:         2       0       0       0       0
  3572 ;;      Locals:         2       0       0       0       0
  3573 ;;      Temps:          2       0       0       0       0
  3574 ;;      Totals:         6       0       0       0       0
  3575 ;;Total ram usage:        6 bytes
  3576 ;; Hardware stack levels used: 1
  3577 ;; Hardware stack levels required when called: 2
  3578 ;; This function calls:
  3579 ;;		_I2C_Master_Wait
  3580 ;; This function is called by:
  3581 ;;		_main
  3582 ;; This function uses a non-reentrant model
  3583 ;;
  3584                           
  3585     04E8                     _I2C_Master_Read:	
  3586                           ;psect for function _I2C_Master_Read
  3587                           
  3588     04E8                     l1471:	
  3589                           ;incstack = 0
  3590                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3591                           
  3592                           
  3593                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  3594     04E8  120A  118A  25E2  120A  118A  	fcall	_I2C_Master_Wait
  3595     04ED                     l1473:
  3596                           
  3597                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  3598     04ED  1683               	bsf	3,5	;RP0=1, select bank1
  3599     04EE  1303               	bcf	3,6	;RP1=0, select bank1
  3600     04EF  1591               	bsf	17,3	;volatile
  3601                           
  3602                           ;I2C.c: 79:     I2C_Master_Wait();
  3603     04F0  120A  118A  25E2  120A  118A  	fcall	_I2C_Master_Wait
  3604     04F5                     l1475:
  3605                           
  3606                           ;I2C.c: 80:     temp = SSPBUF;
  3607     04F5  1283               	bcf	3,5	;RP0=0, select bank0
  3608     04F6  1303               	bcf	3,6	;RP1=0, select bank0
  3609     04F7  0813               	movf	19,w	;volatile
  3610     04F8  00F4               	movwf	??_I2C_Master_Read
  3611     04F9  01F5               	clrf	??_I2C_Master_Read+1
  3612     04FA  0874               	movf	??_I2C_Master_Read,w
  3613     04FB  00F6               	movwf	I2C_Master_Read@temp
  3614     04FC  0875               	movf	??_I2C_Master_Read+1,w
  3615     04FD  00F7               	movwf	I2C_Master_Read@temp+1
  3616     04FE                     l1477:
  3617                           
  3618                           ;I2C.c: 81:     I2C_Master_Wait();
  3619     04FE  120A  118A  25E2  120A  118A  	fcall	_I2C_Master_Wait
  3620     0503                     l1479:
  3621                           
  3622                           ;I2C.c: 82:     if(a == 1){
  3623     0503  0372               	decf	I2C_Master_Read@a,w
  3624     0504  0473               	iorwf	I2C_Master_Read@a+1,w
  3625     0505  1D03               	btfss	3,2
  3626     0506  2D08               	goto	u1181
  3627     0507  2D09               	goto	u1180
  3628     0508                     u1181:
  3629     0508  2D0D               	goto	l125
  3630     0509                     u1180:
  3631     0509                     l1481:
  3632                           
  3633                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  3634     0509  1683               	bsf	3,5	;RP0=1, select bank1
  3635     050A  1303               	bcf	3,6	;RP1=0, select bank1
  3636     050B  1291               	bcf	17,5	;volatile
  3637                           
  3638                           ;I2C.c: 84:     }else{
  3639     050C  2D10               	goto	l126
  3640     050D                     l125:
  3641                           
  3642                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  3643     050D  1683               	bsf	3,5	;RP0=1, select bank1
  3644     050E  1303               	bcf	3,6	;RP1=0, select bank1
  3645     050F  1691               	bsf	17,5	;volatile
  3646     0510                     l126:	
  3647                           ;I2C.c: 86:     }
  3648                           
  3649                           
  3650                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  3651     0510  1611               	bsf	17,4	;volatile
  3652     0511                     l1483:
  3653                           
  3654                           ;I2C.c: 88:     return temp;
  3655     0511  0877               	movf	I2C_Master_Read@temp+1,w
  3656     0512  00F3               	movwf	?_I2C_Master_Read+1
  3657     0513  0876               	movf	I2C_Master_Read@temp,w
  3658     0514  00F2               	movwf	?_I2C_Master_Read
  3659     0515                     l127:
  3660     0515  0008               	return
  3661     0516                     __end_of_I2C_Master_Read:
  3662                           
  3663                           	psect	text22
  3664     05E2                     __ptext22:	
  3665 ;; *************** function _I2C_Master_Wait *****************
  3666 ;; Defined at:
  3667 ;;		line 32 in file "I2C.c"
  3668 ;; Parameters:    Size  Location     Type
  3669 ;;		None
  3670 ;; Auto vars:     Size  Location     Type
  3671 ;;		None
  3672 ;; Return value:  Size  Location     Type
  3673 ;;                  1    wreg      void 
  3674 ;; Registers used:
  3675 ;;		wreg, status,2
  3676 ;; Tracked objects:
  3677 ;;		On entry : 0/0
  3678 ;;		On exit  : 0/0
  3679 ;;		Unchanged: 0/0
  3680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3681 ;;      Params:         0       0       0       0       0
  3682 ;;      Locals:         0       0       0       0       0
  3683 ;;      Temps:          0       0       0       0       0
  3684 ;;      Totals:         0       0       0       0       0
  3685 ;;Total ram usage:        0 bytes
  3686 ;; Hardware stack levels used: 1
  3687 ;; Hardware stack levels required when called: 1
  3688 ;; This function calls:
  3689 ;;		Nothing
  3690 ;; This function is called by:
  3691 ;;		_I2C_Master_Start
  3692 ;;		_I2C_Master_Stop
  3693 ;;		_I2C_Master_Write
  3694 ;;		_I2C_Master_Read
  3695 ;;		_I2C_Master_RepeatedStart
  3696 ;; This function uses a non-reentrant model
  3697 ;;
  3698                           
  3699     05E2                     _I2C_Master_Wait:	
  3700                           ;psect for function _I2C_Master_Wait
  3701                           
  3702     05E2                     l1287:	
  3703                           ;incstack = 0
  3704                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3705                           
  3706     05E2                     l107:	
  3707                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3708                           
  3709     05E2  1683               	bsf	3,5	;RP0=1, select bank1
  3710     05E3  1303               	bcf	3,6	;RP1=0, select bank1
  3711     05E4  1914               	btfsc	20,2	;volatile
  3712     05E5  2DE7               	goto	u841
  3713     05E6  2DE8               	goto	u840
  3714     05E7                     u841:
  3715     05E7  2DE2               	goto	l107
  3716     05E8                     u840:
  3717     05E8                     l1289:
  3718     05E8  0811               	movf	17,w	;volatile
  3719     05E9  391F               	andlw	31
  3720     05EA  1D03               	btfss	3,2
  3721     05EB  2DED               	goto	u851
  3722     05EC  2DEE               	goto	u850
  3723     05ED                     u851:
  3724     05ED  2DE2               	goto	l107
  3725     05EE                     u850:
  3726     05EE                     l110:
  3727     05EE  0008               	return
  3728     05EF                     __end_of_I2C_Master_Wait:
  3729                           
  3730                           	psect	text23
  3731     0613                     __ptext23:	
  3732 ;; *************** function _isr *****************
  3733 ;; Defined at:
  3734 ;;		line 85 in file "main.c"
  3735 ;; Parameters:    Size  Location     Type
  3736 ;;		None
  3737 ;; Auto vars:     Size  Location     Type
  3738 ;;		None
  3739 ;; Return value:  Size  Location     Type
  3740 ;;                  1    wreg      void 
  3741 ;; Registers used:
  3742 ;;		None
  3743 ;; Tracked objects:
  3744 ;;		On entry : 0/0
  3745 ;;		On exit  : 0/0
  3746 ;;		Unchanged: 0/0
  3747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3748 ;;      Params:         0       0       0       0       0
  3749 ;;      Locals:         0       0       0       0       0
  3750 ;;      Temps:          2       0       0       0       0
  3751 ;;      Totals:         2       0       0       0       0
  3752 ;;Total ram usage:        2 bytes
  3753 ;; Hardware stack levels used: 1
  3754 ;; This function calls:
  3755 ;;		Nothing
  3756 ;; This function is called by:
  3757 ;;		Interrupt level 1
  3758 ;; This function uses a non-reentrant model
  3759 ;;
  3760                           
  3761     0613                     _isr:	
  3762                           ;psect for function _isr
  3763                           
  3764     0613                     i1l72:
  3765     0613  0871               	movf	??_isr+1,w
  3766     0614  008A               	movwf	10
  3767     0615  0E70               	swapf	??_isr,w
  3768     0616  0083               	movwf	3
  3769     0617  0EFE               	swapf	btemp,f
  3770     0618  0E7E               	swapf	btemp,w
  3771     0619  0009               	retfie
  3772     061A                     __end_of_isr:
  3773     007E                     btemp	set	126	;btemp
  3774     007E                     wtemp0	set	126
  3775                           
  3776                           	psect	intentry
  3777     0004                     __pintentry:	
  3778                           ;incstack = 0
  3779                           ; Regs used in _isr: []
  3780                           
  3781     0004                     interrupt_function:
  3782     007E                     saved_w	set	btemp
  3783     0004  00FE               	movwf	btemp
  3784     0005  0E03               	swapf	3,w
  3785     0006  00F0               	movwf	??_isr
  3786     0007  080A               	movf	10,w
  3787     0008  00F1               	movwf	??_isr+1
  3788     0009  120A  118A  2E13   	ljmp	_isr
  3789                           
  3790                           	psect	idloc
  3791                           
  3792                           ;Config register IDLOC0 @ 0x2000
  3793                           ;	unspecified, using default values
  3794     2000                     	org	8192
  3795     2000  3FFF               	dw	16383
  3796                           
  3797                           ;Config register IDLOC1 @ 0x2001
  3798                           ;	unspecified, using default values
  3799     2001                     	org	8193
  3800     2001  3FFF               	dw	16383
  3801                           
  3802                           ;Config register IDLOC2 @ 0x2002
  3803                           ;	unspecified, using default values
  3804     2002                     	org	8194
  3805     2002  3FFF               	dw	16383
  3806                           
  3807                           ;Config register IDLOC3 @ 0x2003
  3808                           ;	unspecified, using default values
  3809     2003                     	org	8195
  3810     2003  3FFF               	dw	16383
  3811                           
  3812                           	psect	config
  3813                           
  3814                           ;Config register CONFIG1 @ 0x2007
  3815                           ;	Oscillator Selection bits
  3816                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3817                           ;	Watchdog Timer Enable bit
  3818                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3819                           ;	Power-up Timer Enable bit
  3820                           ;	PWRTE = OFF, PWRT disabled
  3821                           ;	RE3/MCLR pin function select bit
  3822                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3823                           ;	Code Protection bit
  3824                           ;	CP = OFF, Program memory code protection is disabled
  3825                           ;	Data Code Protection bit
  3826                           ;	CPD = OFF, Data memory code protection is disabled
  3827                           ;	Brown Out Reset Selection bits
  3828                           ;	BOREN = OFF, BOR disabled
  3829                           ;	Internal External Switchover bit
  3830                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3831                           ;	Fail-Safe Clock Monitor Enabled bit
  3832                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3833                           ;	Low Voltage Programming Enable bit
  3834                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3835                           ;	In-Circuit Debugger Mode bit
  3836                           ;	DEBUG = 0x1, unprogramme  3837     2007                     	org	8199
  3838     2007  20D4               	dw	8404
  3839                           
  3840                           ;Config register CONFIG2 @ 0x2008
  3841                           ;	Brown-out Reset Selection bit
  3842                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3843                           ;	Flash Program Memory Self Write Enable bits
  3844                           ;	WRT = OFF, Write protection off
  3845     2008                     	org	8200
  3846     2008  3FFF               	dw	16383

Data Sizes:
    Strings     13
    Constant    10
    Data        0
    BSS         29
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     24      53
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_2(CODE[9]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> buffer(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> buffer(BANK0[20]), STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Write_String
    _main->___awdiv
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _I2C_Master_Init->___lldiv
    _map->___awdiv
    ___awdiv->___wmul
    ___awmod->___awdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _map->___awdiv
    ___awmod->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    7308
                                             21 BANK0      3     3      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___awdiv
                            ___awmod
                             ___wmul
                                _map
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             25    18      7    1211
                                              4 BANK0     17    10      7
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                             10 COMMON     2     2      0
                                              0 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     412
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              5 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              2 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _map                                                 10     2      8    1914
                                              5 BANK0     10     2      8
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     700
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     756
                                              8 COMMON     4     0      4
                                              0 BANK0      5     5      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     600
                                              5 BANK0      7     3      4
                            ___awdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     440
                                              5 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0     198
                                              3 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       5     4      1     484
                                              6 COMMON     3     2      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     374
                                              6 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     198
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     198
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     176
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2      98
                                              2 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     121
                                              2 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   ___awdiv
     ___wmul (ARG)
   ___awmod
     ___awdiv (ARG)
     ___wmul (ARG)
   ___wmul
   _map
     ___awdiv
     ___wmul
   _setup
     _I2C_Master_Init
       ___lldiv
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      41       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     18      35       5       66.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      41      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Aug 07 23:56:49 2023

                       pc 0002               map@inputmax 0044               map@inputmin 0042  
                      l59 04E7                        l75 0585              ___awdiv@sign 003F  
                      fsr 0004       ___wmul@multiplicand 0074                       l110 05EE  
                     l104 04B2                       l113 060A                       l122 05F8  
                     l107 05E2                       l140 040D                       l125 050D  
                     l141 0413                       l301 0561                       l126 0510  
                     l150 0430                       l142 0414                       l127 0515  
                     l119 0601                       l151 0436                       l143 041A  
                     l152 0437                       l144 041B                       l153 043D  
                     l145 0421                       l161 05E1                       l146 0422  
                     l170 037A                       l155 043E                       l147 0428  
                     l139 040A                       l148 0429                       l149 042F  
                     l173 05D4                       l158 05BF                       l167 05A5  
                     l335 02CE                       l179 0400                       l452 0266  
                     l295 01FD                       l465 0329                       l299 0549  
                     l571 03BE                       l581 047A                       _GIE 005F  
                     u700 0418                       u701 0417                       u710 041F  
                     u711 041E                       u720 0426                       u800 02A8  
                     u721 0425                       u801 02A7                       u730 042D  
                     u731 042C                       u740 0434                       u900 0205  
                     u820 02C6                       u741 0433                       u901 0204  
                     u821 02C5                       u805 02A4                       u750 043B  
                     u910 0210                       u830 0492                       u751 043A  
                     u911 020F                       u815 02B8                       u840 05E8  
                     u680 0406                       u920 0221                       u760 0279  
                     u841 05E7                       u681 0405                       u921 0220  
                     u761 0278                       u850 05EE                       u690 0411  
                     u851 05ED                       u691 0410                       u835 048D  
                     u940 0233                       u860 0543                       u780 028D  
                     u941 0232                       u861 0542                       u781 028C  
                     u935 0225                       u775 027E                       u960 0244  
                     u961 0243                       u890 055D                       u955 0234  
                     u891 055C                       u875 054A                       u795 028F  
                     u980 0258                       u981 0257                       u965 0240  
                     u885 0551                       u990 025D                       u991 025C  
                     u975 024C                       _map 04B3                       _isr 0613  
                     fsr0 0004                       indf 0000              ___awmod@sign 0048  
                    l1301 05C1                      l1303 05C4                      l1311 053D  
                    l1241 041F                      l1233 0402                      l1305 05CA  
                    l1321 055D                      l1313 053F                      l1401 0451  
                    l1243 0426                      l1235 0406                      l1307 05CD  
                    l1331 020A                      l1315 0543                      l1251 0267  
                    l1411 0470                      l1403 0455                      l1245 042D  
                    l1237 0411                      l1309 05D1                      l1341 021B  
                    l1333 020C                      l1325 01FE                      l1317 0550  
                    l1261 0296                      l1253 0279                      l1421 0562  
                    l1405 0459                      l1413 0476                      l1247 0434  
                    l1239 0418                      l1431 0330                      l1351 0233  
                    l1343 0221                      l1335 0210                      l1327 0201  
                    l1319 0557                      l1263 02A8                      l1255 027C  
                    l1271 02C6                      l1423 0571                      l1407 0463  
                    l1511 0166                      l1503 0139                      l1249 043B  
                    l1441 05D5                      l1433 0339                      l1353 0244  
                    l1345 0224                      l1361 0258                      l1337 0215  
                    l1329 0205                      l1417 04B6                      l1265 02B6  
                    l1257 0289                      l1281 04AF                      l1425 0575  
                    l1409 0469                      l1521 0171                      l1513 016A  
                    l1505 0156                      l1601 0056                      l1291 05A7  
                    l1435 0347                      l1451 059C                      l1443 0587  
                    l1363 025D                      l1355 024A                      l1347 022B  
                    l1339 0219                      l1267 02B7                      l1259 028D  
                    l1283 04B0                      l1275 047B                      l1427 0576  
                    l1371 037D                      l1531 01A2                      l1515 016F  
                    l1507 015E                      l1611 00D5                      l1603 005B  
                    l1293 05AA                      l1437 034D                      l1429 032A  
                    l1453 059F                      l1445 058C                      l1461 03E4  
                    l1365 0262                      l1357 024B                      l1349 022F  
                    l1269 02C0                      l1285 04B1                      l1277 047F  
                    l1381 0395                      l1373 0383                      l1541 01E0  
                    l1533 01A6                      l1525 018D                      l1509 0162  
                    l1613 00F7                      l1605 006A                      l1287 05E2  
                    l1471 04E8                      l1463 0602                      l1295 05B0  
                    l1439 0376                      l1447 058F                      l1455 03BF  
                    l1359 0252                      l1279 0482                      l1383 03A6  
                    l1375 0386                      l1391 03BA                      l1535 01A9  
                    l1527 0197                      l1543 01E9                      l1615 00FF  
                    l1607 0086                      l1289 05E8                      l1481 0509  
                    l1473 04ED                      l1465 0607                      l1297 05B3  
                    l1449 0596                      l1457 03C2                      l1561 02DD  
                    l1553 02CF                      l1385 03AC                      l1377 038D  
                    l1369 037B                      l1537 01D7                      l1529 019D  
                    l1545 01F9                      l1617 0115                      l1609 00A6  
                    l1483 0511                      l1475 04F5                      l1467 05EF  
                    l1299 05BC                      l1459 03DE                      l1571 02F6  
                    l1563 02E1                      l1555 02D2                      l1387 03AD  
                    l1379 0391                      l1395 043F                      l1539 01DC  
                    l1491 0125                      l1477 04FE                      l1469 05F4  
                    l1581 0315                      l1573 02FA                      l1565 02E6  
                    l1557 02D6                      l1389 03B4                      l1397 0447  
                    l1493 0128                      l1479 0503                      l1487 05F9  
                    l1575 02FE                      l1567 02EC                      l1583 031B  
                    l1559 02DB                      l1399 044A                      l1647 014B  
                    l1495 012E                      l1591 001C                      l1489 05FE  
                    l1585 0320                      l1577 0308                      l1569 02EF  
                    l1497 0133                      l1593 0033                      l1587 0325  
                    l1579 030E                      l1499 0138                      l1595 003C  
                    l1597 0041                      l1599 004A                      ?_map 0042  
                    ?_isr 0070                      STR_1 0539                      STR_2 0530  
                    u1000 0383                      u1001 0382                      u1020 0395  
                    u1100 0463                      u1021 0394                      u1101 0462  
                    u1015 0387                      u1040 03A6                      u1120 0476  
                    u1200 0166                      u1041 03A5                      u1121 0475  
                    u1105 045F                      u1201 0165                      u1130 058C  
                    u1210 018C                      u1131 058B                      u1035 0396  
                    u1115 046A                      u1211 018B                      u1140 059C  
                    u1300 02FE                      u1060 03BA                      u1220 0197  
                    u1141 059B                      u1301 02FD                      u1061 03B9  
                    u1045 03A2                      u1221 0196                      u1150 03CC  
                    u1310 0308                      u1070 0447                      u1230 019D  
                    u1311 0307                      u1055 03AE                      u1071 0446  
                    u1231 019C                      u1215 0188                      u1160 03EE  
                    u1240 01E9                      u1241 01E8                      u1170 0400  
                    u1330 031B                      u1090 0459                      u1250 01F9  
                    u1171 03FF                      u1331 031A                      u1315 0304  
                    u1091 0458                      u1251 01F8                      u1180 0509  
                    u1340 0320                      u1260 02D6                      u1181 0508  
                    u1341 031F                      u1325 030F                      u1261 02D5  
                    u1085 044B                      u1270 02E1                      u1190 012E  
                    u1407 0378                      u1271 02E0                      u1191 012D  
                    u1280 02EC                      u1417 05B7                      u1281 02EB  
                    u1357 0063                      u1367 05CF                      u1295 02F0  
                    u1377 0334                      u1387 0343                      u1397 034F  
                    _PEIE 005E                      i1l72 0613         ?_Lcd_Write_String 0075  
                    _main 001C                      _vol1 0026                      btemp 007E  
                    start 000C        ??_Lcd_Write_String 0077           __end_of_Lcd_Cmd 05C0  
                   ??_map 004A                     ??_isr 0070          ?_I2C_Master_Init 0042  
        ?_I2C_Master_Read 0072          ?_I2C_Master_Wait 0070          ?_I2C_Master_Stop 0070  
                   ?_main 0070           __end_of___awdiv 0267           __end_of___awmod 032A  
                   _ANSEL 0188           __end_of___lldiv 02CF           ___awdiv@divisor 0078  
         __end_of___lwdiv 03BF           __end_of___lwmod 047B           ___awdiv@counter 003E  
                   _PORTA 0005                     _PORTB 0006                     _PORTC 0007  
                   _PORTD 0008                     _PORTE 0009                     _TRISB 0086  
                   _TRISD 0088                     _SSPIE 0463                     _SSPIF 0063  
         __end_of_dpowers 0530                     _setup 0562                     pclath 000A  
                   status 0003                     wtemp0 007E           __end_of_sprintf 01FE  
        __end_of_Lcd_Init 037B          __end_of_Lcd_Port 043F           __initialization 000F  
            __end_of_main 0122                    ??_main 0052         ?_I2C_Master_Start 0070  
       ?_I2C_Master_Write 0072        ??_I2C_Master_Start 0072        ??_I2C_Master_Write 0074  
        ___awdiv@dividend 007A                    ?_setup 0070                    _ANSELH 0189  
               ??_Lcd_Cmd 0073                    _SSPADD 0093                    _TRISC3 043B  
                  _TRISC4 043C                    _SSPCON 0014                    _SSPBUF 0013  
                  ___wmul 053D                 ??___awdiv 003D                 ??___awmod 0046  
               ??___lldiv 007A                 ??___lwdiv 0076                 ??___lwmod 007A  
                  _buffer 0029          ___awdiv@quotient 0040           ___awmod@divisor 0042  
         ___awmod@counter 0047                    saved_w 007E                 ??_sprintf 0048  
         Lcd_Set_Cursor@a 0077           Lcd_Set_Cursor@b 0076   __end_of__initialization 0018  
       __end_of_Lcd_Clear 05E2            __pcstackCOMMON 0070             __end_of_setup 0586  
          _Lcd_Set_Cursor 0586                 ?_Lcd_Init 0070                 ?_Lcd_Port 0070  
                 ??_setup 007B                __pbssBANK0 0020                __pmaintext 001C  
                 ?___wmul 0072                _centesima1 0020                __pintentry 0004  
  __end_of_Lcd_Set_Cursor 05A6                ??_Lcd_Init 0076                ??_Lcd_Port 0072  
                 _SSPCON2 0091                   _SSPSTAT 0094                __stringtab 0516  
          _Lcd_Write_Char 05C0                   _Lcd_Cmd 05A6                   ___awdiv 01FE  
                 ___awmod 02CF                   ___lldiv 0267                   ___lwdiv 037B  
                 ___lwmod 043F                   _decima1 0022           ?_Lcd_Set_Cursor 0076  
                 __ptext1 0122                   __ptext2 043F                   __ptext3 037B  
                 __ptext4 0562                   __ptext5 047B                   __ptext6 0267  
                 __ptext7 04B3                   __ptext8 053D                   __ptext9 01FE  
                 _dpowers 0526          ___awmod@dividend 0044                   _unidad1 0024  
                 _sprintf 0122                   clrloop0 060C    __end_of_Lcd_Write_Char 05D5  
    end_of_initialization 0018           ___lldiv@divisor 0072           ___lldiv@counter 0041  
        I2C_Master_Init@c 0042          I2C_Master_Read@a 0072                 Lcd_Port@a 0072  
               _PORTBbits 0006                 _PORTDbits 0008                 _TRISCbits 0087  
         ?_Lcd_Write_Char 0070         Lcd_Write_String@a 0075         Lcd_Write_String@i 007A  
               _Lcd_Clear 05D5            __end_of___wmul 0562          _Lcd_Write_String 03BF  
     start_initialization 000F               __end_of_map 04E8               __end_of_isr 061A  
       ??_I2C_Master_Init 0046         ??_I2C_Master_Read 0074         ??_I2C_Master_Wait 0072  
       ??_I2C_Master_Stop 0072                ?_Lcd_Clear 0070                  ??___wmul 0076  
         Lcd_Write_Char@a 0074                 ___latbits 0002             __pcstackBANK0 003D  
                ?_Lcd_Cmd 0070               sprintf@flag 004C               sprintf@prec 004D  
        _I2C_Master_Start 0602          _I2C_Master_Write 05EF          ___lwdiv@dividend 0074  
        ??_Lcd_Set_Cursor 0077                  ?___awdiv 0078                  ?___awmod 0042  
                ?___lldiv 0072                  ?___lwdiv 0072                  ?___lwmod 003D  
               __pstrings 0516          ___lwdiv@quotient 0077                  ?_sprintf 0041  
       interrupt_function 0004            ___wmul@product 0076                 clear_ram0 060B  
                Lcd_Cmd@a 0075               ??_Lcd_Clear 0076               __stringbase 0525  
       ___wmul@multiplier 0072                 map@outmax 0048                 map@outmin 0046  
        ??_Lcd_Write_Char 0073                  _Lcd_Init 032A                  _Lcd_Port 0401  
     I2C_Master_Read@temp 0076  __end_of_Lcd_Write_String 0401        __end_of__stringtab 0526  
              sprintf@val 004E           _I2C_Master_Init 047B           _I2C_Master_Read 04E8  
         _I2C_Master_Wait 05E2           _I2C_Master_Stop 05F9           ___lwdiv@divisor 0072  
         ___lwdiv@counter 0079                  __ptext10 02CF                  __ptext11 03BF  
                __ptext20 0602                  __ptext12 05C0                  __ptext21 04E8  
                __ptext13 0586                  __ptext22 05E2                  __ptext14 032A  
                __ptext23 0613                  __ptext15 05D5                  __ptext16 05A6  
                __ptext17 0401                  __ptext18 05EF                  __ptext19 05F9  
                map@value 004B                  _voltaje1 0028  __end_of_I2C_Master_Start 060B  
__end_of_I2C_Master_Write 05F9                  intlevel1 0000                 sprintf@ap 004B  
               sprintf@sp 0050          ___lwmod@dividend 003F          ___lldiv@dividend 0076  
               stringcode 0520                _OSCCONbits 008F   __end_of_I2C_Master_Init 04B3  
 __end_of_I2C_Master_Read 0516   __end_of_I2C_Master_Wait 05EF   __end_of_I2C_Master_Stop 0602  
      Lcd_Set_Cursor@temp 0078                  sprintf@c 0051                  sprintf@f 0041  
        ___lldiv@quotient 003D         I2C_Master_Write@d 0072           ___lwmod@divisor 003D  
         ___lwmod@counter 007B                  stringdir 0520                  stringtab 0516  
             _SSPCON2bits 0091  
