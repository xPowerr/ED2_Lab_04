

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Aug 08 16:39:02 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2
    34                           	psect	text24,local,class=CODE,merge=1,delta=2
    35                           	psect	text25,local,class=CODE,merge=1,delta=2
    36                           	psect	text26,local,class=CODE,merge=1,delta=2
    37                           	psect	text27,local,class=CODE,merge=1,delta=2
    38                           	psect	text28,local,class=CODE,merge=1,delta=2
    39                           	psect	text29,local,class=CODE,merge=1,delta=2
    40                           	psect	text30,local,class=CODE,merge=1,delta=2
    41                           	psect	intentry,global,class=CODE,delta=2
    42                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    43                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    44                           	dabs	1,0x7E,2
    45     0000                     
    46                           ; Version 2.40
    47                           ; Generated 04/07/2022 GMT
    48                           ; 
    49                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution. Publication is not required when
    63                           ;        this file is used in an embedded application.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC16F887 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81     0000                     	;# 
    82     0001                     	;# 
    83     0002                     	;# 
    84     0003                     	;# 
    85     0004                     	;# 
    86     0005                     	;# 
    87     0006                     	;# 
    88     0007                     	;# 
    89     0008                     	;# 
    90     0009                     	;# 
    91     000A                     	;# 
    92     000B                     	;# 
    93     000C                     	;# 
    94     000D                     	;# 
    95     000E                     	;# 
    96     000E                     	;# 
    97     000F                     	;# 
    98     0010                     	;# 
    99     0011                     	;# 
   100     0012                     	;# 
   101     0013                     	;# 
   102     0014                     	;# 
   103     0015                     	;# 
   104     0015                     	;# 
   105     0016                     	;# 
   106     0017                     	;# 
   107     0018                     	;# 
   108     0019                     	;# 
   109     001A                     	;# 
   110     001B                     	;# 
   111     001B                     	;# 
   112     001C                     	;# 
   113     001D                     	;# 
   114     001E                     	;# 
   115     001F                     	;# 
   116     0081                     	;# 
   117     0085                     	;# 
   118     0086                     	;# 
   119     0087                     	;# 
   120     0088                     	;# 
   121     0089                     	;# 
   122     008C                     	;# 
   123     008D                     	;# 
   124     008E                     	;# 
   125     008F                     	;# 
   126     0090                     	;# 
   127     0091                     	;# 
   128     0092                     	;# 
   129     0093                     	;# 
   130     0093                     	;# 
   131     0093                     	;# 
   132     0094                     	;# 
   133     0095                     	;# 
   134     0096                     	;# 
   135     0097                     	;# 
   136     0098                     	;# 
   137     0099                     	;# 
   138     009A                     	;# 
   139     009B                     	;# 
   140     009C                     	;# 
   141     009D                     	;# 
   142     009E                     	;# 
   143     009F                     	;# 
   144     0105                     	;# 
   145     0107                     	;# 
   146     0108                     	;# 
   147     0109                     	;# 
   148     010C                     	;# 
   149     010C                     	;# 
   150     010D                     	;# 
   151     010E                     	;# 
   152     010F                     	;# 
   153     0185                     	;# 
   154     0187                     	;# 
   155     0188                     	;# 
   156     0189                     	;# 
   157     018C                     	;# 
   158     018D                     	;# 
   159     0000                     	;# 
   160     0001                     	;# 
   161     0002                     	;# 
   162     0003                     	;# 
   163     0004                     	;# 
   164     0005                     	;# 
   165     0006                     	;# 
   166     0007                     	;# 
   167     0008                     	;# 
   168     0009                     	;# 
   169     000A                     	;# 
   170     000B                     	;# 
   171     000C                     	;# 
   172     000D                     	;# 
   173     000E                     	;# 
   174     000E                     	;# 
   175     000F                     	;# 
   176     0010                     	;# 
   177     0011                     	;# 
   178     0012                     	;# 
   179     0013                     	;# 
   180     0014                     	;# 
   181     0015                     	;# 
   182     0015                     	;# 
   183     0016                     	;# 
   184     0017                     	;# 
   185     0018                     	;# 
   186     0019                     	;# 
   187     001A                     	;# 
   188     001B                     	;# 
   189     001B                     	;# 
   190     001C                     	;# 
   191     001D                     	;# 
   192     001E                     	;# 
   193     001F                     	;# 
   194     0081                     	;# 
   195     0085                     	;# 
   196     0086                     	;# 
   197     0087                     	;# 
   198     0088                     	;# 
   199     0089                     	;# 
   200     008C                     	;# 
   201     008D                     	;# 
   202     008E                     	;# 
   203     008F                     	;# 
   204     0090                     	;# 
   205     0091                     	;# 
   206     0092                     	;# 
   207     0093                     	;# 
   208     0093                     	;# 
   209     0093                     	;# 
   210     0094                     	;# 
   211     0095                     	;# 
   212     0096                     	;# 
   213     0097                     	;# 
   214     0098                     	;# 
   215     0099                     	;# 
   216     009A                     	;# 
   217     009B                     	;# 
   218     009C                     	;# 
   219     009D                     	;# 
   220     009E                     	;# 
   221     009F                     	;# 
   222     0105                     	;# 
   223     0107                     	;# 
   224     0108                     	;# 
   225     0109                     	;# 
   226     010C                     	;# 
   227     010C                     	;# 
   228     010D                     	;# 
   229     010E                     	;# 
   230     010F                     	;# 
   231     0185                     	;# 
   232     0187                     	;# 
   233     0188                     	;# 
   234     0189                     	;# 
   235     018C                     	;# 
   236     018D                     	;# 
   237     0000                     	;# 
   238     0001                     	;# 
   239     0002                     	;# 
   240     0003                     	;# 
   241     0004                     	;# 
   242     0005                     	;# 
   243     0006                     	;# 
   244     0007                     	;# 
   245     0008                     	;# 
   246     0009                     	;# 
   247     000A                     	;# 
   248     000B                     	;# 
   249     000C                     	;# 
   250     000D                     	;# 
   251     000E                     	;# 
   252     000E                     	;# 
   253     000F                     	;# 
   254     0010                     	;# 
   255     0011                     	;# 
   256     0012                     	;# 
   257     0013                     	;# 
   258     0014                     	;# 
   259     0015                     	;# 
   260     0015                     	;# 
   261     0016                     	;# 
   262     0017                     	;# 
   263     0018                     	;# 
   264     0019                     	;# 
   265     001A                     	;# 
   266     001B                     	;# 
   267     001B                     	;# 
   268     001C                     	;# 
   269     001D                     	;# 
   270     001E                     	;# 
   271     001F                     	;# 
   272     0081                     	;# 
   273     0085                     	;# 
   274     0086                     	;# 
   275     0087                     	;# 
   276     0088                     	;# 
   277     0089                     	;# 
   278     008C                     	;# 
   279     008D                     	;# 
   280     008E                     	;# 
   281     008F                     	;# 
   282     0090                     	;# 
   283     0091                     	;# 
   284     0092                     	;# 
   285     0093                     	;# 
   286     0093                     	;# 
   287     0093                     	;# 
   288     0094                     	;# 
   289     0095                     	;# 
   290     0096                     	;# 
   291     0097                     	;# 
   292     0098                     	;# 
   293     0099                     	;# 
   294     009A                     	;# 
   295     009B                     	;# 
   296     009C                     	;# 
   297     009D                     	;# 
   298     009E                     	;# 
   299     009F                     	;# 
   300     0105                     	;# 
   301     0107                     	;# 
   302     0108                     	;# 
   303     0109                     	;# 
   304     010C                     	;# 
   305     010C                     	;# 
   306     010D                     	;# 
   307     010E                     	;# 
   308     010F                     	;# 
   309     0185                     	;# 
   310     0187                     	;# 
   311     0188                     	;# 
   312     0189                     	;# 
   313     018C                     	;# 
   314     018D                     	;# 
   315     0000                     	;# 
   316     0001                     	;# 
   317     0002                     	;# 
   318     0003                     	;# 
   319     0004                     	;# 
   320     0005                     	;# 
   321     0006                     	;# 
   322     0007                     	;# 
   323     0008                     	;# 
   324     0009                     	;# 
   325     000A                     	;# 
   326     000B                     	;# 
   327     000C                     	;# 
   328     000D                     	;# 
   329     000E                     	;# 
   330     000E                     	;# 
   331     000F                     	;# 
   332     0010                     	;# 
   333     0011                     	;# 
   334     0012                     	;# 
   335     0013                     	;# 
   336     0014                     	;# 
   337     0015                     	;# 
   338     0015                     	;# 
   339     0016                     	;# 
   340     0017                     	;# 
   341     0018                     	;# 
   342     0019                     	;# 
   343     001A                     	;# 
   344     001B                     	;# 
   345     001B                     	;# 
   346     001C                     	;# 
   347     001D                     	;# 
   348     001E                     	;# 
   349     001F                     	;# 
   350     0081                     	;# 
   351     0085                     	;# 
   352     0086                     	;# 
   353     0087                     	;# 
   354     0088                     	;# 
   355     0089                     	;# 
   356     008C                     	;# 
   357     008D                     	;# 
   358     008E                     	;# 
   359     008F                     	;# 
   360     0090                     	;# 
   361     0091                     	;# 
   362     0092                     	;# 
   363     0093                     	;# 
   364     0093                     	;# 
   365     0093                     	;# 
   366     0094                     	;# 
   367     0095                     	;# 
   368     0096                     	;# 
   369     0097                     	;# 
   370     0098                     	;# 
   371     0099                     	;# 
   372     009A                     	;# 
   373     009B                     	;# 
   374     009C                     	;# 
   375     009D                     	;# 
   376     009E                     	;# 
   377     009F                     	;# 
   378     0105                     	;# 
   379     0107                     	;# 
   380     0108                     	;# 
   381     0109                     	;# 
   382     010C                     	;# 
   383     010C                     	;# 
   384     010D                     	;# 
   385     010E                     	;# 
   386     010F                     	;# 
   387     0185                     	;# 
   388     0187                     	;# 
   389     0188                     	;# 
   390     0189                     	;# 
   391     018C                     	;# 
   392     018D                     	;# 
   393                           
   394                           	psect	strings
   395     0500                     __pstrings:
   396     0500                     stringtab:
   397     0500                     __stringtab:
   398                           
   399                           ;	String table - string pointers are 1 byte each
   400     0500  1BFF               	btfsc	btemp+1,7
   401     0501  2D0A               	ljmp	stringcode
   402     0502  1383               	bcf	3,7
   403     0503  187F               	btfsc	btemp+1,0
   404     0504  1783               	bsf	3,7
   405     0505  0800               	movf	0,w
   406     0506  0A84               	incf	4,f
   407     0507  1903               	skipnz
   408     0508  0AFF               	incf	btemp+1,f
   409     0509  0008               	return
   410     050A                     stringcode:
   411     050A                     stringdir:
   412     050A  3005               	movlw	high stringdir
   413     050B  008A               	movwf	10
   414     050C  0804               	movf	4,w
   415     050D  0A84               	incf	4,f
   416     050E  0782               	addwf	2,f
   417     050F                     __stringbase:
   418     050F  3400               	retlw	0
   419     0510                     __end_of__stringtab:
   420     0510                     _dpowers:
   421     0510  3401               	retlw	1
   422     0511  3400               	retlw	0
   423     0512  340A               	retlw	10
   424     0513  3400               	retlw	0
   425     0514  3464               	retlw	100
   426     0515  3400               	retlw	0
   427     0516  34E8               	retlw	232
   428     0517  3403               	retlw	3
   429     0518  3410               	retlw	16
   430     0519  3427               	retlw	39
   431     051A                     __end_of_dpowers:
   432     0006                     _PORTBbits	set	6
   433     0008                     _PORTDbits	set	8
   434     0013                     _SSPBUF	set	19
   435     0014                     _SSPCON	set	20
   436     0009                     _PORTE	set	9
   437     0008                     _PORTD	set	8
   438     0007                     _PORTC	set	7
   439     0006                     _PORTB	set	6
   440     0005                     _PORTA	set	5
   441     0063                     _SSPIF	set	99
   442     005E                     _PEIE	set	94
   443     005F                     _GIE	set	95
   444     0091                     _SSPCON2bits	set	145
   445     0087                     _TRISCbits	set	135
   446     0094                     _SSPSTAT	set	148
   447     0093                     _SSPADD	set	147
   448     0091                     _SSPCON2	set	145
   449     008F                     _OSCCONbits	set	143
   450     0088                     _TRISD	set	136
   451     0086                     _TRISB	set	134
   452     0463                     _SSPIE	set	1123
   453     043C                     _TRISC4	set	1084
   454     043B                     _TRISC3	set	1083
   455     0189                     _ANSELH	set	393
   456     0188                     _ANSEL	set	392
   457     051A                     STR_4:
   458     051A  3425               	retlw	37	;'%'
   459     051B  3430               	retlw	48	;'0'
   460     051C  3432               	retlw	50	;'2'
   461     051D  3475               	retlw	117	;'u'
   462     051E  342F               	retlw	47	;'/'
   463     051F  3425               	retlw	37	;'%'
   464     0520  3430               	retlw	48	;'0'
   465     0521  3432               	retlw	50	;'2'
   466     0522  3475               	retlw	117	;'u'
   467     0523  342F               	retlw	47	;'/'
   468     0524  3432               	retlw	50	;'2'
   469     0525  3430               	retlw	48	;'0'
   470     0526  3425               	retlw	37	;'%'
   471     0527  3430               	retlw	48	;'0'
   472     0528  3432               	retlw	50	;'2'
   473     0529  3475               	retlw	117	;'u'
   474     052A  3400               	retlw	0
   475     052B                     STR_3:
   476     052B  3425               	retlw	37	;'%'
   477     052C  3430               	retlw	48	;'0'
   478     052D  3432               	retlw	50	;'2'
   479     052E  3475               	retlw	117	;'u'
   480     052F  343A               	retlw	58	;':'
   481     0530  3425               	retlw	37	;'%'
   482     0531  3430               	retlw	48	;'0'
   483     0532  3432               	retlw	50	;'2'
   484     0533  3475               	retlw	117	;'u'
   485     0534  343A               	retlw	58	;':'
   486     0535  3425               	retlw	37	;'%'
   487     0536  3430               	retlw	48	;'0'
   488     0537  3432               	retlw	50	;'2'
   489     0538  3475               	retlw	117	;'u'
   490     0539  3400               	retlw	0
   491     053A                     STR_2:
   492     053A  3425               	retlw	37	;'%'
   493     053B  3464               	retlw	100	;'d'
   494     053C  342E               	retlw	46	;'.'
   495     053D  3425               	retlw	37	;'%'
   496     053E  3464               	retlw	100	;'d'
   497     053F  3425               	retlw	37	;'%'
   498     0540  3464               	retlw	100	;'d'
   499     0541  3456               	retlw	86	;'V'
   500     0542  3400               	retlw	0
   501     0543                     STR_1:
   502     0543  3453               	retlw	83	;'S'
   503     0544  3431               	retlw	49	;'1'
   504     0545  343A               	retlw	58	;':'
   505     0546  3400               	retlw	0
   506                           
   507                           	psect	cinit
   508     000F                     start_initialization:	
   509                           ; #config settings
   510                           
   511     000F                     __initialization:
   512                           
   513                           ; Clear objects allocated to BANK0
   514     000F  1383               	bcf	3,7	;select IRP bank0
   515     0010  3020               	movlw	low __pbssBANK0
   516     0011  0084               	movwf	4
   517     0012  3043               	movlw	low (__pbssBANK0+35)
   518     0013  120A  158A  2761  120A  118A  	fcall	clear_ram0
   519     0018                     end_of_initialization:	
   520                           ;End of C runtime variable initialization code
   521                           
   522     0018                     __end_of__initialization:
   523     0018  0183               	clrf	3
   524     0019  120A  118A  29F3   	ljmp	_main	;jump to C main() function
   525                           
   526                           	psect	bssBANK0
   527     0020                     __pbssBANK0:
   528     0020                     _centesima1:
   529     0020                     	ds	2
   530     0022                     _decima1:
   531     0022                     	ds	2
   532     0024                     _unidad1:
   533     0024                     	ds	2
   534     0026                     _vol1:
   535     0026                     	ds	2
   536     0028                     _voltaje1:
   537     0028                     	ds	1
   538     0029                     _buffer:
   539     0029                     	ds	20
   540     003D                     _ano:
   541     003D                     	ds	1
   542     003E                     _mes:
   543     003E                     	ds	1
   544     003F                     _dia:
   545     003F                     	ds	1
   546     0040                     _hora:
   547     0040                     	ds	1
   548     0041                     _minuto:
   549     0041                     	ds	1
   550     0042                     _segundo:
   551     0042                     	ds	1
   552                           
   553                           	psect	clrtext
   554     0F61                     clear_ram0:	
   555                           ;	Called with FSR containing the base address, and
   556                           ;	W with the last address+1
   557                           
   558     0F61  0064               	clrwdt	;clear the watchdog before getting into this loop
   559     0F62                     clrloop0:
   560     0F62  0180               	clrf	0	;clear RAM location pointed to by FSR
   561     0F63  0A84               	incf	4,f	;increment pointer
   562     0F64  0604               	xorwf	4,w	;XOR with final address
   563     0F65  1903               	btfsc	3,2	;have we reached the end yet?
   564     0F66  3400               	retlw	0	;all done for this memory range, return
   565     0F67  0604               	xorwf	4,w	;XOR again to restore value
   566     0F68  2F62               	goto	clrloop0	;do the next byte
   567                           
   568                           	psect	cstackCOMMON
   569     0070                     __pcstackCOMMON:
   570     0070                     ?_isdigit:
   571     0070                     ?_setup:	
   572                           ; 1 bit 
   573                           
   574     0070                     ?_Lcd_Init:	
   575                           ; 1 bytes @ 0x0
   576                           
   577     0070                     ?_Lcd_Clear:	
   578                           ; 1 bytes @ 0x0
   579                           
   580     0070                     ?_I2C_Master_Start:	
   581                           ; 1 bytes @ 0x0
   582                           
   583     0070                     ?_I2C_Master_Stop:	
   584                           ; 1 bytes @ 0x0
   585                           
   586     0070                     ?_I2C_Master_RepeatedStart:	
   587                           ; 1 bytes @ 0x0
   588                           
   589     0070                     ?_Bcd_to_Dec:	
   590                           ; 1 bytes @ 0x0
   591                           
   592     0070                     ?_main:	
   593                           ; 1 bytes @ 0x0
   594                           
   595     0070                     ?_isr:	
   596                           ; 1 bytes @ 0x0
   597                           
   598     0070                     ??_isr:	
   599                           ; 1 bytes @ 0x0
   600                           
   601     0070                     ?_Read:	
   602                           ; 1 bytes @ 0x0
   603                           
   604     0070                     ?_I2C_Master_Wait:	
   605                           ; 1 bytes @ 0x0
   606                           
   607     0070                     ?_Lcd_Port:	
   608                           ; 1 bytes @ 0x0
   609                           
   610     0070                     ?_Lcd_Cmd:	
   611                           ; 1 bytes @ 0x0
   612                           
   613     0070                     ?_Lcd_Write_Char:	
   614                           ; 1 bytes @ 0x0
   615                           
   616                           
   617                           ; 1 bytes @ 0x0
   618     0070                     	ds	2
   619     0072                     ??_I2C_Master_Start:
   620     0072                     ?_I2C_Master_Write:	
   621                           ; 1 bytes @ 0x2
   622                           
   623     0072                     ??_I2C_Master_Stop:	
   624                           ; 1 bytes @ 0x2
   625                           
   626     0072                     ??_I2C_Master_RepeatedStart:	
   627                           ; 1 bytes @ 0x2
   628                           
   629     0072                     ??_isdigit:	
   630                           ; 1 bytes @ 0x2
   631                           
   632     0072                     ??_I2C_Master_Wait:	
   633                           ; 1 bytes @ 0x2
   634                           
   635     0072                     ??_Lcd_Port:	
   636                           ; 1 bytes @ 0x2
   637                           
   638     0072                     ?___bmul:	
   639                           ; 1 bytes @ 0x2
   640                           
   641     0072                     ?_I2C_Master_Read:	
   642                           ; 1 bytes @ 0x2
   643                           
   644     0072                     ?___wmul:	
   645                           ; 2 bytes @ 0x2
   646                           
   647     0072                     ?___lwdiv:	
   648                           ; 2 bytes @ 0x2
   649                           
   650     0072                     ?___lldiv:	
   651                           ; 2 bytes @ 0x2
   652                           
   653     0072                     Lcd_Port@a:	
   654                           ; 4 bytes @ 0x2
   655                           
   656     0072                     ___bmul@multiplicand:	
   657                           ; 1 bytes @ 0x2
   658                           
   659     0072                     _isdigit$835:	
   660                           ; 1 bytes @ 0x2
   661                           
   662     0072                     I2C_Master_Write@d:	
   663                           ; 1 bytes @ 0x2
   664                           
   665     0072                     I2C_Master_Read@a:	
   666                           ; 2 bytes @ 0x2
   667                           
   668     0072                     ___wmul@multiplier:	
   669                           ; 2 bytes @ 0x2
   670                           
   671     0072                     ___lwdiv@divisor:	
   672                           ; 2 bytes @ 0x2
   673                           
   674     0072                     ___lldiv@divisor:	
   675                           ; 2 bytes @ 0x2
   676                           
   677                           
   678                           ; 4 bytes @ 0x2
   679     0072                     	ds	1
   680     0073                     ??_Lcd_Cmd:
   681     0073                     ??_Lcd_Write_Char:	
   682                           ; 1 bytes @ 0x3
   683                           
   684     0073                     ??___bmul:	
   685                           ; 1 bytes @ 0x3
   686                           
   687     0073                     isdigit@c:	
   688                           ; 1 bytes @ 0x3
   689                           
   690                           
   691                           ; 1 bytes @ 0x3
   692     0073                     	ds	1
   693     0074                     ??_I2C_Master_Write:
   694     0074                     ??_I2C_Master_Read:	
   695                           ; 1 bytes @ 0x4
   696                           
   697     0074                     Lcd_Write_Char@a:	
   698                           ; 1 bytes @ 0x4
   699                           
   700     0074                     ___bmul@product:	
   701                           ; 1 bytes @ 0x4
   702                           
   703     0074                     ___wmul@multiplicand:	
   704                           ; 1 bytes @ 0x4
   705                           
   706     0074                     ___lwdiv@dividend:	
   707                           ; 2 bytes @ 0x4
   708                           
   709                           
   710                           ; 2 bytes @ 0x4
   711     0074                     	ds	1
   712     0075                     ?_Lcd_Write_String:
   713     0075                     Lcd_Cmd@a:	
   714                           ; 1 bytes @ 0x5
   715                           
   716     0075                     ___bmul@multiplier:	
   717                           ; 1 bytes @ 0x5
   718                           
   719     0075                     Lcd_Write_String@a:	
   720                           ; 1 bytes @ 0x5
   721                           
   722                           
   723                           ; 2 bytes @ 0x5
   724     0075                     	ds	1
   725     0076                     ??_Lcd_Init:
   726     0076                     ??_Lcd_Clear:	
   727                           ; 1 bytes @ 0x6
   728                           
   729     0076                     ?_Lcd_Set_Cursor:	
   730                           ; 1 bytes @ 0x6
   731                           
   732     0076                     ??_Bcd_to_Dec:	
   733                           ; 1 bytes @ 0x6
   734                           
   735     0076                     ??___wmul:	
   736                           ; 1 bytes @ 0x6
   737                           
   738     0076                     ??___lwdiv:	
   739                           ; 1 bytes @ 0x6
   740                           
   741     0076                     Lcd_Set_Cursor@b:	
   742                           ; 1 bytes @ 0x6
   743                           
   744     0076                     I2C_Master_Read@temp:	
   745                           ; 1 bytes @ 0x6
   746                           
   747     0076                     ___wmul@product:	
   748                           ; 2 bytes @ 0x6
   749                           
   750     0076                     ___lldiv@dividend:	
   751                           ; 2 bytes @ 0x6
   752                           
   753                           
   754                           ; 4 bytes @ 0x6
   755     0076                     	ds	1
   756     0077                     ??_Lcd_Set_Cursor:
   757     0077                     ??_Lcd_Write_String:	
   758                           ; 1 bytes @ 0x7
   759                           
   760     0077                     Lcd_Set_Cursor@a:	
   761                           ; 1 bytes @ 0x7
   762                           
   763     0077                     ___lwdiv@quotient:	
   764                           ; 1 bytes @ 0x7
   765                           
   766                           
   767                           ; 2 bytes @ 0x7
   768     0077                     	ds	1
   769     0078                     ??_Read:
   770     0078                     ?___awdiv:	
   771                           ; 1 bytes @ 0x8
   772                           
   773     0078                     Bcd_to_Dec@dec:	
   774                           ; 2 bytes @ 0x8
   775                           
   776     0078                     Lcd_Set_Cursor@temp:	
   777                           ; 1 bytes @ 0x8
   778                           
   779     0078                     ___awdiv@divisor:	
   780                           ; 1 bytes @ 0x8
   781                           
   782                           
   783                           ; 2 bytes @ 0x8
   784     0078                     	ds	1
   785     0079                     Bcd_to_Dec@bcd:
   786     0079                     ___lwdiv@counter:	
   787                           ; 1 bytes @ 0x9
   788                           
   789                           
   790                           ; 1 bytes @ 0x9
   791     0079                     	ds	1
   792     007A                     ??___lldiv:
   793     007A                     ??___lwmod:	
   794                           ; 1 bytes @ 0xA
   795                           
   796     007A                     Read@address:	
   797                           ; 1 bytes @ 0xA
   798                           
   799     007A                     Lcd_Write_String@i:	
   800                           ; 1 bytes @ 0xA
   801                           
   802     007A                     ___awdiv@dividend:	
   803                           ; 2 bytes @ 0xA
   804                           
   805                           
   806                           ; 2 bytes @ 0xA
   807     007A                     	ds	1
   808     007B                     ??_setup:
   809     007B                     Read@dato:	
   810                           ; 1 bytes @ 0xB
   811                           
   812     007B                     ___lwmod@counter:	
   813                           ; 1 bytes @ 0xB
   814                           
   815                           
   816                           ; 1 bytes @ 0xB
   817     007B                     	ds	1
   818     007C                     ??_Read_Time:
   819     007C                     ??_Read_Date:	
   820                           ; 1 bytes @ 0xC
   821                           
   822                           
   823                           	psect	cstackBANK0
   824     0043                     __pcstackBANK0:	
   825                           ; 1 bytes @ 0xC
   826                           
   827     0043                     ?_Read_Time:
   828     0043                     ?_Read_Date:	
   829                           ; 1 bytes @ 0x0
   830                           
   831     0043                     ??___awdiv:	
   832                           ; 1 bytes @ 0x0
   833                           
   834     0043                     ?___lwmod:	
   835                           ; 1 bytes @ 0x0
   836                           
   837     0043                     Read_Time@m:	
   838                           ; 2 bytes @ 0x0
   839                           
   840     0043                     Read_Date@month:	
   841                           ; 1 bytes @ 0x0
   842                           
   843     0043                     ___lwmod@divisor:	
   844                           ; 1 bytes @ 0x0
   845                           
   846     0043                     ___lldiv@quotient:	
   847                           ; 2 bytes @ 0x0
   848                           
   849                           
   850                           ; 4 bytes @ 0x0
   851     0043                     	ds	1
   852     0044                     Read_Time@h:
   853     0044                     Read_Date@y:	
   854                           ; 1 bytes @ 0x1
   855                           
   856     0044                     ___awdiv@counter:	
   857                           ; 1 bytes @ 0x1
   858                           
   859                           
   860                           ; 1 bytes @ 0x1
   861     0044                     	ds	1
   862     0045                     Read_Time@s:
   863     0045                     Read_Date@d:	
   864                           ; 1 bytes @ 0x2
   865                           
   866     0045                     ___awdiv@sign:	
   867                           ; 1 bytes @ 0x2
   868                           
   869     0045                     ___lwmod@dividend:	
   870                           ; 1 bytes @ 0x2
   871                           
   872                           
   873                           ; 2 bytes @ 0x2
   874     0045                     	ds	1
   875     0046                     ___awdiv@quotient:
   876                           
   877                           ; 2 bytes @ 0x3
   878     0046                     	ds	1
   879     0047                     ?_sprintf:
   880     0047                     sprintf@f:	
   881                           ; 2 bytes @ 0x4
   882                           
   883     0047                     ___lldiv@counter:	
   884                           ; 1 bytes @ 0x4
   885                           
   886                           
   887                           ; 1 bytes @ 0x4
   888     0047                     	ds	1
   889     0048                     ?_I2C_Master_Init:
   890     0048                     ?_map:	
   891                           ; 1 bytes @ 0x5
   892                           
   893     0048                     ?___awmod:	
   894                           ; 2 bytes @ 0x5
   895                           
   896     0048                     map@inputmin:	
   897                           ; 2 bytes @ 0x5
   898                           
   899     0048                     ___awmod@divisor:	
   900                           ; 2 bytes @ 0x5
   901                           
   902     0048                     I2C_Master_Init@c:	
   903                           ; 2 bytes @ 0x5
   904                           
   905                           
   906                           ; 4 bytes @ 0x5
   907     0048                     	ds	2
   908     004A                     map@inputmax:
   909     004A                     ___awmod@dividend:	
   910                           ; 2 bytes @ 0x7
   911                           
   912                           
   913                           ; 2 bytes @ 0x7
   914     004A                     	ds	2
   915     004C                     ??_I2C_Master_Init:
   916     004C                     ??___awmod:	
   917                           ; 1 bytes @ 0x9
   918                           
   919     004C                     map@outmin:	
   920                           ; 1 bytes @ 0x9
   921                           
   922                           
   923                           ; 2 bytes @ 0x9
   924     004C                     	ds	1
   925     004D                     ___awmod@counter:
   926                           
   927                           ; 1 bytes @ 0xA
   928     004D                     	ds	1
   929     004E                     ??_sprintf:
   930     004E                     ___awmod@sign:	
   931                           ; 1 bytes @ 0xB
   932                           
   933     004E                     map@outmax:	
   934                           ; 1 bytes @ 0xB
   935                           
   936                           
   937                           ; 2 bytes @ 0xB
   938     004E                     	ds	2
   939     0050                     ??_map:
   940                           
   941                           ; 1 bytes @ 0xD
   942     0050                     	ds	1
   943     0051                     map@value:
   944     0051                     sprintf@prec:	
   945                           ; 1 bytes @ 0xE
   946                           
   947                           
   948                           ; 1 bytes @ 0xE
   949     0051                     	ds	1
   950     0052                     sprintf@ap:
   951                           
   952                           ; 1 bytes @ 0xF
   953     0052                     	ds	1
   954     0053                     sprintf@val:
   955                           
   956                           ; 2 bytes @ 0x10
   957     0053                     	ds	2
   958     0055                     sprintf@flag:
   959                           
   960                           ; 1 bytes @ 0x12
   961     0055                     	ds	1
   962     0056                     sprintf@width:
   963                           
   964                           ; 2 bytes @ 0x13
   965     0056                     	ds	2
   966     0058                     sprintf@sp:
   967                           
   968                           ; 1 bytes @ 0x15
   969     0058                     	ds	1
   970     0059                     sprintf@c:
   971                           
   972                           ; 1 bytes @ 0x16
   973     0059                     	ds	1
   974     005A                     ??_main:
   975                           
   976                           ; 1 bytes @ 0x17
   977     005A                     	ds	6
   978                           
   979                           	psect	maintext
   980     01F3                     __pmaintext:	
   981 ;;
   982 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
   983 ;;
   984 ;; *************** function _main *****************
   985 ;; Defined at:
   986 ;;		line 63 in file "main.c"
   987 ;; Parameters:    Size  Location     Type
   988 ;;		None
   989 ;; Auto vars:     Size  Location     Type
   990 ;;		None
   991 ;; Return value:  Size  Location     Type
   992 ;;                  1    wreg      void 
   993 ;; Registers used:
   994 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   995 ;; Tracked objects:
   996 ;;		On entry : B00/0
   997 ;;		On exit  : 0/0
   998 ;;		Unchanged: 0/0
   999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1000 ;;      Params:         0       0       0       0       0
  1001 ;;      Locals:         0       0       0       0       0
  1002 ;;      Temps:          0       6       0       0       0
  1003 ;;      Totals:         0       6       0       0       0
  1004 ;;Total ram usage:        6 bytes
  1005 ;; Hardware stack levels required when called: 5
  1006 ;; This function calls:
  1007 ;;		_I2C_Master_Read
  1008 ;;		_I2C_Master_Start
  1009 ;;		_I2C_Master_Stop
  1010 ;;		_I2C_Master_Write
  1011 ;;		_Lcd_Clear
  1012 ;;		_Lcd_Init
  1013 ;;		_Lcd_Set_Cursor
  1014 ;;		_Lcd_Write_String
  1015 ;;		_Read_Date
  1016 ;;		_Read_Time
  1017 ;;		___awdiv
  1018 ;;		___awmod
  1019 ;;		___wmul
  1020 ;;		_map
  1021 ;;		_setup
  1022 ;;		_sprintf
  1023 ;; This function is called by:
  1024 ;;		Startup code after reset
  1025 ;; This function uses a non-reentrant model
  1026 ;;
  1027                           
  1028     01F3                     _main:	
  1029                           ;psect for function _main
  1030                           
  1031     01F3                     l1946:	
  1032                           ;incstack = 0
  1033                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1034                           
  1035                           
  1036                           ;main.c: 64:     setup();
  1037     01F3  120A  118A  27B0  120A  118A  	fcall	_setup
  1038                           
  1039                           ;main.c: 67:     Lcd_Init();
  1040     01F8  120A  118A  249D  120A  118A  	fcall	_Lcd_Init
  1041                           
  1042                           ;main.c: 68:     Lcd_Clear();
  1043     01FD  120A  158A  2784  120A  118A  	fcall	_Lcd_Clear
  1044                           
  1045                           ;main.c: 70:     Lcd_Set_Cursor(1,1);
  1046     0202  01F6               	clrf	Lcd_Set_Cursor@b
  1047     0203  0AF6               	incf	Lcd_Set_Cursor@b,f
  1048     0204  3001               	movlw	1
  1049     0205  120A  118A  27D4  120A  118A  	fcall	_Lcd_Set_Cursor
  1050     020A                     l1948:
  1051                           
  1052                           ;main.c: 71:     Lcd_Write_String("S1:");
  1053     020A  3034               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1054     020B  00F5               	movwf	Lcd_Write_String@a
  1055     020C  3080               	movlw	128
  1056     020D  00F6               	movwf	Lcd_Write_String@a+1
  1057     020E  120A  118A  258B  120A  118A  	fcall	_Lcd_Write_String
  1058     0213                     l1950:
  1059                           
  1060                           ;main.c: 80:         I2C_Master_Start();
  1061     0213  120A  158A  2772  120A  118A  	fcall	_I2C_Master_Start
  1062     0218                     l1952:
  1063                           
  1064                           ;main.c: 81:         I2C_Master_Write(0x51);
  1065     0218  3051               	movlw	81
  1066     0219  00F2               	movwf	I2C_Master_Write@d
  1067     021A  3000               	movlw	0
  1068     021B  00F3               	movwf	I2C_Master_Write@d+1
  1069     021C  120A  118A  27F4  120A  118A  	fcall	_I2C_Master_Write
  1070     0221                     l1954:
  1071                           
  1072                           ;main.c: 82:         voltaje1 = I2C_Master_Read(0);
  1073     0221  3000               	movlw	0
  1074     0222  00F2               	movwf	I2C_Master_Read@a
  1075     0223  00F3               	movwf	I2C_Master_Read@a+1
  1076     0224  120A  118A  275D  120A  118A  	fcall	_I2C_Master_Read
  1077     0229  0872               	movf	?_I2C_Master_Read,w
  1078     022A  1283               	bcf	3,5	;RP0=0, select bank0
  1079     022B  1303               	bcf	3,6	;RP1=0, select bank0
  1080     022C  00A8               	movwf	_voltaje1
  1081     022D                     l1956:
  1082                           
  1083                           ;main.c: 83:         I2C_Master_Stop();
  1084     022D  120A  158A  277B  120A  118A  	fcall	_I2C_Master_Stop
  1085     0232                     l1958:
  1086                           
  1087                           ;main.c: 84:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1088     0232  3003               	movlw	3
  1089     0233  1283               	bcf	3,5	;RP0=0, select bank0
  1090     0234  1303               	bcf	3,6	;RP1=0, select bank0
  1091     0235  00DC               	movwf	??_main+2
  1092     0236  3008               	movlw	8
  1093     0237  00DB               	movwf	??_main+1
  1094     0238  3076               	movlw	118
  1095     0239  00DA               	movwf	??_main
  1096     023A                     u1707:
  1097     023A  0BDA               	decfsz	??_main,f
  1098     023B  2A3A               	goto	u1707
  1099     023C  0BDB               	decfsz	??_main+1,f
  1100     023D  2A3A               	goto	u1707
  1101     023E  0BDC               	decfsz	??_main+2,f
  1102     023F  2A3A               	goto	u1707
  1103     0240  0000               	nop
  1104     0241                     l1960:
  1105                           
  1106                           ;main.c: 86:         vol1 = map(voltaje1, 0, 255, 0, 100);
  1107     0241  3000               	movlw	0
  1108     0242  1283               	bcf	3,5	;RP0=0, select bank0
  1109     0243  1303               	bcf	3,6	;RP1=0, select bank0
  1110     0244  00C8               	movwf	map@inputmin
  1111     0245  00C9               	movwf	map@inputmin+1
  1112     0246  30FF               	movlw	255
  1113     0247  00CA               	movwf	map@inputmax
  1114     0248  3000               	movlw	0
  1115     0249  00CB               	movwf	map@inputmax+1
  1116     024A  3000               	movlw	0
  1117     024B  00CC               	movwf	map@outmin
  1118     024C  00CD               	movwf	map@outmin+1
  1119     024D  3064               	movlw	100
  1120     024E  00CE               	movwf	map@outmax
  1121     024F  3000               	movlw	0
  1122     0250  00CF               	movwf	map@outmax+1
  1123     0251  0828               	movf	_voltaje1,w
  1124     0252  120A  118A  26BE  120A  118A  	fcall	_map
  1125     0257  1283               	bcf	3,5	;RP0=0, select bank0
  1126     0258  1303               	bcf	3,6	;RP1=0, select bank0
  1127     0259  0849               	movf	?_map+1,w
  1128     025A  00A7               	movwf	_vol1+1
  1129     025B  0848               	movf	?_map,w
  1130     025C  00A6               	movwf	_vol1
  1131     025D                     l1962:
  1132                           
  1133                           ;main.c: 87:         unidad1 = (vol1*5)/100;
  1134     025D  3064               	movlw	100
  1135     025E  00F8               	movwf	___awdiv@divisor
  1136     025F  3000               	movlw	0
  1137     0260  00F9               	movwf	___awdiv@divisor+1
  1138     0261  0827               	movf	_vol1+1,w
  1139     0262  00F3               	movwf	___wmul@multiplier+1
  1140     0263  0826               	movf	_vol1,w
  1141     0264  00F2               	movwf	___wmul@multiplier
  1142     0265  3005               	movlw	5
  1143     0266  00F4               	movwf	___wmul@multiplicand
  1144     0267  3000               	movlw	0
  1145     0268  00F5               	movwf	___wmul@multiplicand+1
  1146     0269  120A  118A  278B  120A  118A  	fcall	___wmul
  1147     026E  0873               	movf	?___wmul+1,w
  1148     026F  00FB               	movwf	___awdiv@dividend+1
  1149     0270  0872               	movf	?___wmul,w
  1150     0271  00FA               	movwf	___awdiv@dividend
  1151     0272  120A  118A  2371  120A  118A  	fcall	___awdiv
  1152     0277  0879               	movf	?___awdiv+1,w
  1153     0278  1283               	bcf	3,5	;RP0=0, select bank0
  1154     0279  1303               	bcf	3,6	;RP1=0, select bank0
  1155     027A  00A5               	movwf	_unidad1+1
  1156     027B  0878               	movf	?___awdiv,w
  1157     027C  00A4               	movwf	_unidad1
  1158     027D                     l1964:
  1159                           
  1160                           ;main.c: 88:         decima1 = ((vol1*5)/10)%10;
  1161     027D  300A               	movlw	10
  1162     027E  00C8               	movwf	___awmod@divisor
  1163     027F  3000               	movlw	0
  1164     0280  00C9               	movwf	___awmod@divisor+1
  1165     0281  300A               	movlw	10
  1166     0282  00F8               	movwf	___awdiv@divisor
  1167     0283  3000               	movlw	0
  1168     0284  00F9               	movwf	___awdiv@divisor+1
  1169     0285  0827               	movf	_vol1+1,w
  1170     0286  00F3               	movwf	___wmul@multiplier+1
  1171     0287  0826               	movf	_vol1,w
  1172     0288  00F2               	movwf	___wmul@multiplier
  1173     0289  3005               	movlw	5
  1174     028A  00F4               	movwf	___wmul@multiplicand
  1175     028B  3000               	movlw	0
  1176     028C  00F5               	movwf	___wmul@multiplicand+1
  1177     028D  120A  118A  278B  120A  118A  	fcall	___wmul
  1178     0292  0873               	movf	?___wmul+1,w
  1179     0293  00FB               	movwf	___awdiv@dividend+1
  1180     0294  0872               	movf	?___wmul,w
  1181     0295  00FA               	movwf	___awdiv@dividend
  1182     0296  120A  118A  2371  120A  118A  	fcall	___awdiv
  1183     029B  0879               	movf	?___awdiv+1,w
  1184     029C  1283               	bcf	3,5	;RP0=0, select bank0
  1185     029D  1303               	bcf	3,6	;RP1=0, select bank0
  1186     029E  00CB               	movwf	___awmod@dividend+1
  1187     029F  0878               	movf	?___awdiv,w
  1188     02A0  00CA               	movwf	___awmod@dividend
  1189     02A1  120A  118A  2442  120A  118A  	fcall	___awmod
  1190     02A6  1283               	bcf	3,5	;RP0=0, select bank0
  1191     02A7  1303               	bcf	3,6	;RP1=0, select bank0
  1192     02A8  0849               	movf	?___awmod+1,w
  1193     02A9  00A3               	movwf	_decima1+1
  1194     02AA  0848               	movf	?___awmod,w
  1195     02AB  00A2               	movwf	_decima1
  1196     02AC                     l1966:
  1197                           
  1198                           ;main.c: 89:         centesima1 = (vol1*5)%10;
  1199     02AC  300A               	movlw	10
  1200     02AD  00C8               	movwf	___awmod@divisor
  1201     02AE  3000               	movlw	0
  1202     02AF  00C9               	movwf	___awmod@divisor+1
  1203     02B0  0827               	movf	_vol1+1,w
  1204     02B1  00F3               	movwf	___wmul@multiplier+1
  1205     02B2  0826               	movf	_vol1,w
  1206     02B3  00F2               	movwf	___wmul@multiplier
  1207     02B4  3005               	movlw	5
  1208     02B5  00F4               	movwf	___wmul@multiplicand
  1209     02B6  3000               	movlw	0
  1210     02B7  00F5               	movwf	___wmul@multiplicand+1
  1211     02B8  120A  118A  278B  120A  118A  	fcall	___wmul
  1212     02BD  0873               	movf	?___wmul+1,w
  1213     02BE  1283               	bcf	3,5	;RP0=0, select bank0
  1214     02BF  1303               	bcf	3,6	;RP1=0, select bank0
  1215     02C0  00CB               	movwf	___awmod@dividend+1
  1216     02C1  0872               	movf	?___wmul,w
  1217     02C2  00CA               	movwf	___awmod@dividend
  1218     02C3  120A  118A  2442  120A  118A  	fcall	___awmod
  1219     02C8  1283               	bcf	3,5	;RP0=0, select bank0
  1220     02C9  1303               	bcf	3,6	;RP1=0, select bank0
  1221     02CA  0849               	movf	?___awmod+1,w
  1222     02CB  00A1               	movwf	_centesima1+1
  1223     02CC  0848               	movf	?___awmod,w
  1224     02CD  00A0               	movwf	_centesima1
  1225     02CE                     l1968:
  1226                           
  1227                           ;main.c: 90:         Lcd_Set_Cursor(2,1);
  1228     02CE  01F6               	clrf	Lcd_Set_Cursor@b
  1229     02CF  0AF6               	incf	Lcd_Set_Cursor@b,f
  1230     02D0  3002               	movlw	2
  1231     02D1  120A  118A  27D4  120A  118A  	fcall	_Lcd_Set_Cursor
  1232     02D6                     l1970:
  1233                           
  1234                           ;main.c: 91:         sprintf(buffer, "%d.%d%dV" , unidad1 , decima1 , centesima1 );
  1235     02D6  302B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1236     02D7  1283               	bcf	3,5	;RP0=0, select bank0
  1237     02D8  1303               	bcf	3,6	;RP1=0, select bank0
  1238     02D9  00C7               	movwf	sprintf@f
  1239     02DA  0825               	movf	_unidad1+1,w
  1240     02DB  00C9               	movwf	?_sprintf+2
  1241     02DC  0824               	movf	_unidad1,w
  1242     02DD  00C8               	movwf	?_sprintf+1
  1243     02DE  0823               	movf	_decima1+1,w
  1244     02DF  00CB               	movwf	?_sprintf+4
  1245     02E0  0822               	movf	_decima1,w
  1246     02E1  00CA               	movwf	?_sprintf+3
  1247     02E2  0821               	movf	_centesima1+1,w
  1248     02E3  00CD               	movwf	?_sprintf+6
  1249     02E4  0820               	movf	_centesima1,w
  1250     02E5  00CC               	movwf	?_sprintf+5
  1251     02E6  3029               	movlw	(low (_buffer| 0))& (0+255)
  1252     02E7  120A  118A  201C  120A  118A  	fcall	_sprintf
  1253     02EC                     l1972:
  1254                           
  1255                           ;main.c: 92:         Lcd_Write_String(buffer);
  1256     02EC  3029               	movlw	(low (_buffer| 0))& (0+255)
  1257     02ED  00F5               	movwf	Lcd_Write_String@a
  1258     02EE  3000               	movlw	0
  1259     02EF  00F6               	movwf	Lcd_Write_String@a+1
  1260     02F0  120A  118A  258B  120A  118A  	fcall	_Lcd_Write_String
  1261     02F5                     l1974:
  1262                           
  1263                           ;main.c: 94:         Read_Time(&segundo, &minuto, &hora);
  1264     02F5  3041               	movlw	(low (_minuto| 0))& (0+255)
  1265     02F6  1283               	bcf	3,5	;RP0=0, select bank0
  1266     02F7  1303               	bcf	3,6	;RP1=0, select bank0
  1267     02F8  00C3               	movwf	Read_Time@m
  1268     02F9  3040               	movlw	(low (_hora| 0))& (0+255)
  1269     02FA  00C4               	movwf	Read_Time@h
  1270     02FB  3042               	movlw	(low (_segundo| 0))& (0+255)
  1271     02FC  120A  118A  26F3  120A  118A  	fcall	_Read_Time
  1272     0301                     l1976:
  1273                           
  1274                           ;main.c: 95:         Lcd_Set_Cursor(1,8);
  1275     0301  3008               	movlw	8
  1276     0302  00F6               	movwf	Lcd_Set_Cursor@b
  1277     0303  3001               	movlw	1
  1278     0304  120A  118A  27D4  120A  118A  	fcall	_Lcd_Set_Cursor
  1279     0309                     l1978:
  1280                           
  1281                           ;main.c: 96:         sprintf(buffer, "%02u:%02u:%02u" , hora, minuto, segundo);
  1282     0309  301C               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1283     030A  1283               	bcf	3,5	;RP0=0, select bank0
  1284     030B  1303               	bcf	3,6	;RP1=0, select bank0
  1285     030C  00C7               	movwf	sprintf@f
  1286     030D  0840               	movf	_hora,w
  1287     030E  00DA               	movwf	??_main
  1288     030F  01DB               	clrf	??_main+1
  1289     0310  085A               	movf	??_main,w
  1290     0311  00C8               	movwf	?_sprintf+1
  1291     0312  085B               	movf	??_main+1,w
  1292     0313  00C9               	movwf	?_sprintf+2
  1293     0314  0841               	movf	_minuto,w
  1294     0315  00DC               	movwf	??_main+2
  1295     0316  01DD               	clrf	??_main+3
  1296     0317  085C               	movf	??_main+2,w
  1297     0318  00CA               	movwf	?_sprintf+3
  1298     0319  085D               	movf	??_main+3,w
  1299     031A  00CB               	movwf	?_sprintf+4
  1300     031B  0842               	movf	_segundo,w
  1301     031C  00DE               	movwf	??_main+4
  1302     031D  01DF               	clrf	??_main+5
  1303     031E  085E               	movf	??_main+4,w
  1304     031F  00CC               	movwf	?_sprintf+5
  1305     0320  085F               	movf	??_main+5,w
  1306     0321  00CD               	movwf	?_sprintf+6
  1307     0322  3029               	movlw	(low (_buffer| 0))& (0+255)
  1308     0323  120A  118A  201C  120A  118A  	fcall	_sprintf
  1309     0328                     l1980:
  1310                           
  1311                           ;main.c: 97:         Lcd_Write_String(buffer);
  1312     0328  3029               	movlw	(low (_buffer| 0))& (0+255)
  1313     0329  00F5               	movwf	Lcd_Write_String@a
  1314     032A  3000               	movlw	0
  1315     032B  00F6               	movwf	Lcd_Write_String@a+1
  1316     032C  120A  118A  258B  120A  118A  	fcall	_Lcd_Write_String
  1317     0331                     l1982:
  1318                           
  1319                           ;main.c: 99:         Read_Date(&dia, &mes, &ano);
  1320     0331  303E               	movlw	(low (_mes| 0))& (0+255)
  1321     0332  1283               	bcf	3,5	;RP0=0, select bank0
  1322     0333  1303               	bcf	3,6	;RP1=0, select bank0
  1323     0334  00C3               	movwf	Read_Date@month
  1324     0335  303D               	movlw	(low (_ano| 0))& (0+255)
  1325     0336  00C4               	movwf	Read_Date@y
  1326     0337  303F               	movlw	(low (_dia| 0))& (0+255)
  1327     0338  120A  118A  2728  120A  118A  	fcall	_Read_Date
  1328     033D                     l1984:
  1329                           
  1330                           ;main.c: 100:         Lcd_Set_Cursor(2,7);
  1331     033D  3007               	movlw	7
  1332     033E  00F6               	movwf	Lcd_Set_Cursor@b
  1333     033F  3002               	movlw	2
  1334     0340  120A  118A  27D4  120A  118A  	fcall	_Lcd_Set_Cursor
  1335     0345                     l1986:
  1336                           
  1337                           ;main.c: 101:         sprintf(buffer, "%02u/%02u/20%02u" , dia, mes, ano);
  1338     0345  300B               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1339     0346  1283               	bcf	3,5	;RP0=0, select bank0
  1340     0347  1303               	bcf	3,6	;RP1=0, select bank0
  1341     0348  00C7               	movwf	sprintf@f
  1342     0349  083F               	movf	_dia,w
  1343     034A  00DA               	movwf	??_main
  1344     034B  01DB               	clrf	??_main+1
  1345     034C  085A               	movf	??_main,w
  1346     034D  00C8               	movwf	?_sprintf+1
  1347     034E  085B               	movf	??_main+1,w
  1348     034F  00C9               	movwf	?_sprintf+2
  1349     0350  083E               	movf	_mes,w
  1350     0351  00DC               	movwf	??_main+2
  1351     0352  01DD               	clrf	??_main+3
  1352     0353  085C               	movf	??_main+2,w
  1353     0354  00CA               	movwf	?_sprintf+3
  1354     0355  085D               	movf	??_main+3,w
  1355     0356  00CB               	movwf	?_sprintf+4
  1356     0357  083D               	movf	_ano,w
  1357     0358  00DE               	movwf	??_main+4
  1358     0359  01DF               	clrf	??_main+5
  1359     035A  085E               	movf	??_main+4,w
  1360     035B  00CC               	movwf	?_sprintf+5
  1361     035C  085F               	movf	??_main+5,w
  1362     035D  00CD               	movwf	?_sprintf+6
  1363     035E  3029               	movlw	(low (_buffer| 0))& (0+255)
  1364     035F  120A  118A  201C  120A  118A  	fcall	_sprintf
  1365     0364                     l1988:
  1366                           
  1367                           ;main.c: 102:         Lcd_Write_String(buffer);
  1368     0364  3029               	movlw	(low (_buffer| 0))& (0+255)
  1369     0365  00F5               	movwf	Lcd_Write_String@a
  1370     0366  3000               	movlw	0
  1371     0367  00F6               	movwf	Lcd_Write_String@a+1
  1372     0368  120A  118A  258B  120A  118A  	fcall	_Lcd_Write_String
  1373     036D  2A13               	goto	l1950
  1374     036E  120A  118A  280C   	ljmp	start
  1375     0371                     __end_of_main:
  1376                           
  1377                           	psect	text1
  1378     001C                     __ptext1:	
  1379 ;; *************** function _sprintf *****************
  1380 ;; Defined at:
  1381 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  1382 ;; Parameters:    Size  Location     Type
  1383 ;;  sp              1    wreg     PTR unsigned char 
  1384 ;;		 -> buffer(20), 
  1385 ;;  f               1    4[BANK0 ] PTR const unsigned char 
  1386 ;;		 -> STR_4(17), STR_3(15), STR_2(9), 
  1387 ;; Auto vars:     Size  Location     Type
  1388 ;;  sp              1   21[BANK0 ] PTR unsigned char 
  1389 ;;		 -> buffer(20), 
  1390 ;;  tmpval          4    0        struct .
  1391 ;;  width           2   19[BANK0 ] int 
  1392 ;;  val             2   16[BANK0 ] unsigned int 
  1393 ;;  cp              2    0        PTR const unsigned char 
  1394 ;;  len             2    0        unsigned int 
  1395 ;;  c               1   22[BANK0 ] unsigned char 
  1396 ;;  flag            1   18[BANK0 ] unsigned char 
  1397 ;;  ap              1   15[BANK0 ] PTR void [1]
  1398 ;;		 -> ?_sprintf(2), 
  1399 ;;  prec            1   14[BANK0 ] char 
  1400 ;; Return value:  Size  Location     Type
  1401 ;;                  2    4[BANK0 ] int 
  1402 ;; Registers used:
  1403 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1404 ;; Tracked objects:
  1405 ;;		On entry : 0/0
  1406 ;;		On exit  : 0/0
  1407 ;;		Unchanged: 0/0
  1408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1409 ;;      Params:         0       7       0       0       0
  1410 ;;      Locals:         0       9       0       0       0
  1411 ;;      Temps:          0       3       0       0       0
  1412 ;;      Totals:         0      19       0       0       0
  1413 ;;Total ram usage:       19 bytes
  1414 ;; Hardware stack levels used: 1
  1415 ;; Hardware stack levels required when called: 2
  1416 ;; This function calls:
  1417 ;;		___lwdiv
  1418 ;;		___lwmod
  1419 ;;		___wmul
  1420 ;;		_isdigit
  1421 ;; This function is called by:
  1422 ;;		_main
  1423 ;; This function uses a non-reentrant model
  1424 ;;
  1425                           
  1426     001C                     _sprintf:	
  1427                           ;psect for function _sprintf
  1428                           
  1429                           
  1430                           ;incstack = 0
  1431                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1432                           ;sprintf@sp stored from wreg
  1433     001C  1283               	bcf	3,5	;RP0=0, select bank0
  1434     001D  1303               	bcf	3,6	;RP1=0, select bank0
  1435     001E  00D8               	movwf	sprintf@sp
  1436     001F                     l1782:
  1437                           
  1438                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521:  
      +                          signed char prec;
  1439     001F  3048               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1440     0020  00D2               	movwf	sprintf@ap
  1441                           
  1442                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1443     0021  29DE               	goto	l1890
  1444     0022                     l1784:
  1445                           
  1446                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1447     0022  3025               	movlw	37
  1448     0023  0659               	xorwf	sprintf@c,w
  1449     0024  1903               	btfsc	3,2
  1450     0025  2827               	goto	u1421
  1451     0026  2828               	goto	u1420
  1452     0027                     u1421:
  1453     0027  2832               	goto	l1790
  1454     0028                     u1420:
  1455     0028                     l1786:
  1456                           
  1457                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1458     0028  0858               	movf	sprintf@sp,w
  1459     0029  0084               	movwf	4
  1460     002A  0859               	movf	sprintf@c,w
  1461     002B  1383               	bcf	3,7	;select IRP bank0
  1462     002C  0080               	movwf	0
  1463     002D                     l1788:
  1464     002D  3001               	movlw	1
  1465     002E  00CE               	movwf	??_sprintf
  1466     002F  084E               	movf	??_sprintf,w
  1467     0030  07D8               	addwf	sprintf@sp,f
  1468                           
  1469                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  1470     0031  29DE               	goto	l1890
  1471     0032                     l1790:
  1472                           
  1473                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1474     0032  01D6               	clrf	sprintf@width
  1475     0033  01D7               	clrf	sprintf@width+1
  1476                           
  1477                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1478     0034  01D5               	clrf	sprintf@flag
  1479     0035  283B               	goto	l1796
  1480     0036                     l323:	
  1481                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 596:    case '0':
  1482                           
  1483                           
  1484                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 597:     flag |= 
      +                          0x04;
  1485     0036  1555               	bsf	sprintf@flag,2
  1486     0037                     l1792:
  1487                           
  1488                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 598:     f++;
  1489     0037  3001               	movlw	1
  1490     0038  00CE               	movwf	??_sprintf
  1491     0039  084E               	movf	??_sprintf,w
  1492     003A  07C7               	addwf	sprintf@f,f
  1493     003B                     l1796:	
  1494                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 599:     continue
      +                          ;
  1495                           
  1496     003B  0847               	movf	sprintf@f,w
  1497     003C  0084               	movwf	4
  1498     003D  120A  118A  250A  120A  118A  	fcall	stringdir
  1499     0042  00CE               	movwf	??_sprintf
  1500     0043  01CF               	clrf	??_sprintf+1
  1501                           
  1502                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1503                           ; Switch size 1, requested type "simple"
  1504                           ; Number of cases is 1, Range of values is 0 to 0
  1505                           ; switch strategies available:
  1506                           ; Name         Instructions Cycles
  1507                           ; simple_byte            4     3 (average)
  1508                           ; direct_byte           11     8 (fixed)
  1509                           ; jumptable            260     6 (fixed)
  1510                           ;	Chosen strategy is simple_byte
  1511     0044  084F               	movf	??_sprintf+1,w
  1512     0045  3A00               	xorlw	0	; case 0
  1513     0046  1903               	skipnz
  1514     0047  2849               	goto	l2034
  1515     0048  284E               	goto	l1798
  1516     0049                     l2034:
  1517                           
  1518                           ; Switch size 1, requested type "simple"
  1519                           ; Number of cases is 1, Range of values is 48 to 48
  1520                           ; switch strategies available:
  1521                           ; Name         Instructions Cycles
  1522                           ; simple_byte            4     3 (average)
  1523                           ; direct_byte           14    11 (fixed)
  1524                           ; jumptable            263     9 (fixed)
  1525                           ;	Chosen strategy is simple_byte
  1526     0049  084E               	movf	??_sprintf,w
  1527     004A  3A30               	xorlw	48	; case 48
  1528     004B  1903               	skipnz
  1529     004C  2836               	goto	l323
  1530     004D  284E               	goto	l1798
  1531     004E                     l1798:
  1532                           
  1533                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1534     004E  0847               	movf	sprintf@f,w
  1535     004F  0084               	movwf	4
  1536     0050  120A  118A  250A  120A  118A  	fcall	stringdir
  1537     0055  120A  158A  2791  120A  118A  	fcall	_isdigit
  1538     005A  1C03               	btfss	3,0
  1539     005B  285D               	goto	u1431
  1540     005C  285E               	goto	u1430
  1541     005D                     u1431:
  1542     005D  28A1               	goto	l1812
  1543     005E                     u1430:
  1544     005E                     l1800:
  1545                           
  1546                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1547     005E  1283               	bcf	3,5	;RP0=0, select bank0
  1548     005F  1303               	bcf	3,6	;RP1=0, select bank0
  1549     0060  01D6               	clrf	sprintf@width
  1550     0061  01D7               	clrf	sprintf@width+1
  1551     0062                     l1802:
  1552                           
  1553                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1554     0062  300A               	movlw	10
  1555     0063  00F2               	movwf	___wmul@multiplier
  1556     0064  3000               	movlw	0
  1557     0065  00F3               	movwf	___wmul@multiplier+1
  1558     0066  1283               	bcf	3,5	;RP0=0, select bank0
  1559     0067  1303               	bcf	3,6	;RP1=0, select bank0
  1560     0068  0857               	movf	sprintf@width+1,w
  1561     0069  00F5               	movwf	___wmul@multiplicand+1
  1562     006A  0856               	movf	sprintf@width,w
  1563     006B  00F4               	movwf	___wmul@multiplicand
  1564     006C  120A  118A  278B  120A  118A  	fcall	___wmul
  1565     0071  0873               	movf	?___wmul+1,w
  1566     0072  1283               	bcf	3,5	;RP0=0, select bank0
  1567     0073  1303               	bcf	3,6	;RP1=0, select bank0
  1568     0074  00D7               	movwf	sprintf@width+1
  1569     0075  0872               	movf	?___wmul,w
  1570     0076  00D6               	movwf	sprintf@width
  1571     0077                     l1804:
  1572                           
  1573                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1574     0077  0847               	movf	sprintf@f,w
  1575     0078  0084               	movwf	4
  1576     0079  120A  118A  250A  120A  118A  	fcall	stringdir
  1577     007E  3ED0               	addlw	208
  1578     007F  00CE               	movwf	??_sprintf
  1579     0080  30FF               	movlw	255
  1580     0081  1803               	skipnc
  1581     0082  3000               	movlw	0
  1582     0083  00CF               	movwf	??_sprintf+1
  1583     0084  084E               	movf	??_sprintf,w
  1584     0085  07D6               	addwf	sprintf@width,f
  1585     0086  1803               	skipnc
  1586     0087  0AD7               	incf	sprintf@width+1,f
  1587     0088  084F               	movf	??_sprintf+1,w
  1588     0089  07D7               	addwf	sprintf@width+1,f
  1589     008A                     l1806:
  1590     008A  3001               	movlw	1
  1591     008B  00CE               	movwf	??_sprintf
  1592     008C  084E               	movf	??_sprintf,w
  1593     008D  07C7               	addwf	sprintf@f,f
  1594     008E                     l1808:
  1595                           
  1596                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1597     008E  0847               	movf	sprintf@f,w
  1598     008F  0084               	movwf	4
  1599     0090  120A  118A  250A  120A  118A  	fcall	stringdir
  1600     0095  120A  158A  2791  120A  118A  	fcall	_isdigit
  1601     009A  1803               	btfsc	3,0
  1602     009B  289D               	goto	u1441
  1603     009C  289E               	goto	u1440
  1604     009D                     u1441:
  1605     009D  2862               	goto	l1802
  1606     009E                     u1440:
  1607     009E  28A1               	goto	l1812
  1608     009F                     l337:	
  1609                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 843:   case 'u':
  1610                           
  1611                           
  1612                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          x40;
  1613     009F  1755               	bsf	sprintf@flag,6
  1614                           
  1615                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 845:    break;
  1616     00A0  28C3               	goto	l335
  1617     00A1                     l1812:
  1618     00A1  3001               	movlw	1
  1619     00A2  1283               	bcf	3,5	;RP0=0, select bank0
  1620     00A3  1303               	bcf	3,6	;RP1=0, select bank0
  1621     00A4  07C7               	addwf	sprintf@f,f
  1622     00A5  30FF               	movlw	-1
  1623     00A6  0747               	addwf	sprintf@f,w
  1624     00A7  0084               	movwf	4
  1625     00A8  120A  118A  250A  120A  118A  	fcall	stringdir
  1626     00AD  00D9               	movwf	sprintf@c
  1627     00AE  00CE               	movwf	??_sprintf
  1628     00AF  01CF               	clrf	??_sprintf+1
  1629                           
  1630                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1631                           ; Switch size 1, requested type "simple"
  1632                           ; Number of cases is 1, Range of values is 0 to 0
  1633                           ; switch strategies available:
  1634                           ; Name         Instructions Cycles
  1635                           ; simple_byte            4     3 (average)
  1636                           ; direct_byte           11     8 (fixed)
  1637                           ; jumptable            260     6 (fixed)
  1638                           ;	Chosen strategy is simple_byte
  1639     00B0  084F               	movf	??_sprintf+1,w
  1640     00B1  3A00               	xorlw	0	; case 0
  1641     00B2  1903               	skipnz
  1642     00B3  28B5               	goto	l2036
  1643     00B4  29DE               	goto	l1890
  1644     00B5                     l2036:
  1645                           
  1646                           ; Switch size 1, requested type "simple"
  1647                           ; Number of cases is 4, Range of values is 0 to 117
  1648                           ; switch strategies available:
  1649                           ; Name         Instructions Cycles
  1650                           ; simple_byte           13     7 (average)
  1651                           ; jumptable            260     6 (fixed)
  1652                           ;	Chosen strategy is simple_byte
  1653     00B5  084E               	movf	??_sprintf,w
  1654     00B6  3A00               	xorlw	0	; case 0
  1655     00B7  1903               	skipnz
  1656     00B8  29EE               	goto	l1892
  1657     00B9  3A64               	xorlw	100	; case 100
  1658     00BA  1903               	skipnz
  1659     00BB  28C3               	goto	l335
  1660     00BC  3A0D               	xorlw	13	; case 105
  1661     00BD  1903               	skipnz
  1662     00BE  28C3               	goto	l335
  1663     00BF  3A1C               	xorlw	28	; case 117
  1664     00C0  1903               	skipnz
  1665     00C1  289F               	goto	l337
  1666     00C2  29DE               	goto	l1890
  1667     00C3                     l335:
  1668                           
  1669                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1277:   if((flag 
      +                          & 0x40) == 0x00)
  1670     00C3  1B55               	btfsc	sprintf@flag,6
  1671     00C4  28C6               	goto	u1451
  1672     00C5  28C7               	goto	u1450
  1673     00C6                     u1451:
  1674     00C6  28E1               	goto	l1824
  1675     00C7                     u1450:
  1676     00C7                     l1814:
  1677                           
  1678                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1679     00C7  0852               	movf	sprintf@ap,w
  1680     00C8  0084               	movwf	4
  1681     00C9  1383               	bcf	3,7	;select IRP bank0
  1682     00CA  0800               	movf	0,w
  1683     00CB  00D3               	movwf	sprintf@val
  1684     00CC  0A84               	incf	4,f
  1685     00CD  0800               	movf	0,w
  1686     00CE  00D4               	movwf	sprintf@val+1
  1687     00CF                     l1816:
  1688     00CF  3002               	movlw	2
  1689     00D0  00CE               	movwf	??_sprintf
  1690     00D1  084E               	movf	??_sprintf,w
  1691     00D2  07D2               	addwf	sprintf@ap,f
  1692     00D3                     l1818:
  1693                           
  1694                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1695     00D3  1FD4               	btfss	sprintf@val+1,7
  1696     00D4  28D6               	goto	u1461
  1697     00D5  28D7               	goto	u1460
  1698     00D6                     u1461:
  1699     00D6  28ED               	goto	l1828
  1700     00D7                     u1460:
  1701     00D7                     l1820:
  1702                           
  1703                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1704     00D7  3003               	movlw	3
  1705     00D8  00CE               	movwf	??_sprintf
  1706     00D9  084E               	movf	??_sprintf,w
  1707     00DA  04D5               	iorwf	sprintf@flag,f
  1708     00DB                     l1822:
  1709                           
  1710                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1711     00DB  09D3               	comf	sprintf@val,f
  1712     00DC  09D4               	comf	sprintf@val+1,f
  1713     00DD  0AD3               	incf	sprintf@val,f
  1714     00DE  1903               	skipnz
  1715     00DF  0AD4               	incf	sprintf@val+1,f
  1716     00E0  28ED               	goto	l1828
  1717     00E1                     l1824:
  1718                           
  1719                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1720     00E1  0852               	movf	sprintf@ap,w
  1721     00E2  0084               	movwf	4
  1722     00E3  1383               	bcf	3,7	;select IRP bank0
  1723     00E4  0800               	movf	0,w
  1724     00E5  00D3               	movwf	sprintf@val
  1725     00E6  0A84               	incf	4,f
  1726     00E7  0800               	movf	0,w
  1727     00E8  00D4               	movwf	sprintf@val+1
  1728     00E9                     l1826:
  1729     00E9  3002               	movlw	2
  1730     00EA  00CE               	movwf	??_sprintf
  1731     00EB  084E               	movf	??_sprintf,w
  1732     00EC  07D2               	addwf	sprintf@ap,f
  1733     00ED                     l1828:
  1734                           
  1735                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1736     00ED  01D9               	clrf	sprintf@c
  1737     00EE  0AD9               	incf	sprintf@c,f
  1738     00EF                     l1834:
  1739                           
  1740                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1741     00EF  0859               	movf	sprintf@c,w
  1742     00F0  00CE               	movwf	??_sprintf
  1743     00F1  074E               	addwf	??_sprintf,w
  1744     00F2  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1745     00F3  0084               	movwf	4
  1746     00F4  120A  118A  250A  120A  118A  	fcall	stringdir
  1747     00F9  00CF               	movwf	??_sprintf+1
  1748     00FA  120A  118A  250A  120A  118A  	fcall	stringdir
  1749     00FF  00D0               	movwf	??_sprintf+2
  1750     0100  0850               	movf	??_sprintf+2,w
  1751     0101  0254               	subwf	sprintf@val+1,w
  1752     0102  1D03               	skipz
  1753     0103  2906               	goto	u1475
  1754     0104  084F               	movf	??_sprintf+1,w
  1755     0105  0253               	subwf	sprintf@val,w
  1756     0106                     u1475:
  1757     0106  1803               	skipnc
  1758     0107  2909               	goto	u1471
  1759     0108  290A               	goto	u1470
  1760     0109                     u1471:
  1761     0109  290B               	goto	l1838
  1762     010A                     u1470:
  1763     010A  2915               	goto	l1840
  1764     010B                     l1838:
  1765     010B  3001               	movlw	1
  1766     010C  00CE               	movwf	??_sprintf
  1767     010D  084E               	movf	??_sprintf,w
  1768     010E  07D9               	addwf	sprintf@c,f
  1769     010F  3005               	movlw	5
  1770     0110  0659               	xorwf	sprintf@c,w
  1771     0111  1D03               	btfss	3,2
  1772     0112  2914               	goto	u1481
  1773     0113  2915               	goto	u1480
  1774     0114                     u1481:
  1775     0114  28EF               	goto	l1834
  1776     0115                     u1480:
  1777     0115                     l1840:
  1778                           
  1779                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  1780     0115  0856               	movf	sprintf@width,w
  1781     0116  0457               	iorwf	sprintf@width+1,w
  1782     0117  1903               	btfsc	3,2
  1783     0118  291A               	goto	u1491
  1784     0119  291B               	goto	u1490
  1785     011A                     u1491:
  1786     011A  2927               	goto	l344
  1787     011B                     u1490:
  1788     011B                     l1842:
  1789     011B  0855               	movf	sprintf@flag,w
  1790     011C  3903               	andlw	3
  1791     011D  1903               	btfsc	3,2
  1792     011E  2920               	goto	u1501
  1793     011F  2921               	goto	u1500
  1794     0120                     u1501:
  1795     0120  2927               	goto	l344
  1796     0121                     u1500:
  1797     0121                     l1844:
  1798                           
  1799                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1372:    width--;
  1800     0121  30FF               	movlw	255
  1801     0122  07D6               	addwf	sprintf@width,f
  1802     0123  1803               	skipnc
  1803     0124  0AD7               	incf	sprintf@width+1,f
  1804     0125  30FF               	movlw	255
  1805     0126  07D7               	addwf	sprintf@width+1,f
  1806     0127                     l344:
  1807                           
  1808                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  1809     0127  0857               	movf	sprintf@width+1,w
  1810     0128  3A80               	xorlw	128
  1811     0129  3C80               	sublw	128
  1812     012A  1D03               	skipz
  1813     012B  292E               	goto	u1515
  1814     012C  0856               	movf	sprintf@width,w
  1815     012D  0259               	subwf	sprintf@c,w
  1816     012E                     u1515:
  1817     012E  1803               	skipnc
  1818     012F  2931               	goto	u1511
  1819     0130  2932               	goto	u1510
  1820     0131                     u1511:
  1821     0131  293E               	goto	l1848
  1822     0132                     u1510:
  1823     0132                     l1846:
  1824                           
  1825                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  1826     0132  1283               	bcf	3,5	;RP0=0, select bank0
  1827     0133  1303               	bcf	3,6	;RP1=0, select bank0
  1828     0134  0859               	movf	sprintf@c,w
  1829     0135  00CE               	movwf	??_sprintf
  1830     0136  01CF               	clrf	??_sprintf+1
  1831     0137  084E               	movf	??_sprintf,w
  1832     0138  02D6               	subwf	sprintf@width,f
  1833     0139  084F               	movf	??_sprintf+1,w
  1834     013A  1C03               	skipc
  1835     013B  03D7               	decf	sprintf@width+1,f
  1836     013C  02D7               	subwf	sprintf@width+1,f
  1837     013D  2942               	goto	l1850
  1838     013E                     l1848:
  1839                           
  1840                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  1841     013E  1283               	bcf	3,5	;RP0=0, select bank0
  1842     013F  1303               	bcf	3,6	;RP1=0, select bank0
  1843     0140  01D6               	clrf	sprintf@width
  1844     0141  01D7               	clrf	sprintf@width+1
  1845     0142                     l1850:
  1846                           
  1847                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1413:   if(flag &
      +                           0x04) {
  1848     0142  1D55               	btfss	sprintf@flag,2
  1849     0143  2945               	goto	u1521
  1850     0144  2946               	goto	u1520
  1851     0145                     u1521:
  1852     0145  2971               	goto	l1866
  1853     0146                     u1520:
  1854     0146                     l1852:
  1855                           
  1856                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1418:    if(flag 
      +                          & 0x03)
  1857     0146  0855               	movf	sprintf@flag,w
  1858     0147  3903               	andlw	3
  1859     0148  1903               	btfsc	3,2
  1860     0149  294B               	goto	u1531
  1861     014A  294C               	goto	u1530
  1862     014B                     u1531:
  1863     014B  2955               	goto	l1858
  1864     014C                     u1530:
  1865     014C                     l1854:
  1866                           
  1867                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1419:     ((*sp++
      +                           = ('-')));
  1868     014C  0858               	movf	sprintf@sp,w
  1869     014D  0084               	movwf	4
  1870     014E  302D               	movlw	45
  1871     014F  1383               	bcf	3,7	;select IRP bank0
  1872     0150  0080               	movwf	0
  1873     0151                     l1856:
  1874     0151  3001               	movlw	1
  1875     0152  00CE               	movwf	??_sprintf
  1876     0153  084E               	movf	??_sprintf,w
  1877     0154  07D8               	addwf	sprintf@sp,f
  1878     0155                     l1858:
  1879                           
  1880                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1441:    if(width
      +                          )
  1881     0155  0856               	movf	sprintf@width,w
  1882     0156  0457               	iorwf	sprintf@width+1,w
  1883     0157  1903               	btfsc	3,2
  1884     0158  295A               	goto	u1541
  1885     0159  295B               	goto	u1540
  1886     015A                     u1541:
  1887     015A  299B               	goto	l1880
  1888     015B                     u1540:
  1889     015B                     l1860:
  1890                           
  1891                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1443:      ((*sp+
      +                          + = ('0')));
  1892     015B  0858               	movf	sprintf@sp,w
  1893     015C  0084               	movwf	4
  1894     015D  3030               	movlw	48
  1895     015E  1383               	bcf	3,7	;select IRP bank0
  1896     015F  0080               	movwf	0
  1897     0160                     l1862:
  1898     0160  3001               	movlw	1
  1899     0161  00CE               	movwf	??_sprintf
  1900     0162  084E               	movf	??_sprintf,w
  1901     0163  07D8               	addwf	sprintf@sp,f
  1902     0164                     l1864:
  1903     0164  30FF               	movlw	255
  1904     0165  07D6               	addwf	sprintf@width,f
  1905     0166  1803               	skipnc
  1906     0167  0AD7               	incf	sprintf@width+1,f
  1907     0168  30FF               	movlw	255
  1908     0169  07D7               	addwf	sprintf@width+1,f
  1909     016A  0856               	movf	sprintf@width,w
  1910     016B  0457               	iorwf	sprintf@width+1,w
  1911     016C  1D03               	btfss	3,2
  1912     016D  296F               	goto	u1551
  1913     016E  2970               	goto	u1550
  1914     016F                     u1551:
  1915     016F  295B               	goto	l1860
  1916     0170                     u1550:
  1917     0170  299B               	goto	l1880
  1918     0171                     l1866:
  1919                           
  1920                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1450:    if(width
  1921     0171  0856               	movf	sprintf@width,w
  1922     0172  0457               	iorwf	sprintf@width+1,w
  1923     0173  1903               	btfsc	3,2
  1924     0174  2976               	goto	u1561
  1925     0175  2977               	goto	u1560
  1926     0176                     u1561:
  1927     0176  298C               	goto	l1874
  1928     0177                     u1560:
  1929     0177                     l1868:
  1930                           
  1931                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  1932     0177  0858               	movf	sprintf@sp,w
  1933     0178  0084               	movwf	4
  1934     0179  3020               	movlw	32
  1935     017A  1383               	bcf	3,7	;select IRP bank0
  1936     017B  0080               	movwf	0
  1937     017C                     l1870:
  1938     017C  3001               	movlw	1
  1939     017D  00CE               	movwf	??_sprintf
  1940     017E  084E               	movf	??_sprintf,w
  1941     017F  07D8               	addwf	sprintf@sp,f
  1942     0180                     l1872:
  1943     0180  30FF               	movlw	255
  1944     0181  07D6               	addwf	sprintf@width,f
  1945     0182  1803               	skipnc
  1946     0183  0AD7               	incf	sprintf@width+1,f
  1947     0184  30FF               	movlw	255
  1948     0185  07D7               	addwf	sprintf@width+1,f
  1949     0186  0856               	movf	sprintf@width,w
  1950     0187  0457               	iorwf	sprintf@width+1,w
  1951     0188  1D03               	btfss	3,2
  1952     0189  298B               	goto	u1571
  1953     018A  298C               	goto	u1570
  1954     018B                     u1571:
  1955     018B  2977               	goto	l1868
  1956     018C                     u1570:
  1957     018C                     l1874:
  1958                           
  1959                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
  1960     018C  0855               	movf	sprintf@flag,w
  1961     018D  3903               	andlw	3
  1962     018E  1903               	btfsc	3,2
  1963     018F  2991               	goto	u1581
  1964     0190  2992               	goto	u1580
  1965     0191                     u1581:
  1966     0191  299B               	goto	l1880
  1967     0192                     u1580:
  1968     0192                     l1876:
  1969                           
  1970                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1971     0192  0858               	movf	sprintf@sp,w
  1972     0193  0084               	movwf	4
  1973     0194  302D               	movlw	45
  1974     0195  1383               	bcf	3,7	;select IRP bank0
  1975     0196  0080               	movwf	0
  1976     0197                     l1878:
  1977     0197  3001               	movlw	1
  1978     0198  00CE               	movwf	??_sprintf
  1979     0199  084E               	movf	??_sprintf,w
  1980     019A  07D8               	addwf	sprintf@sp,f
  1981     019B                     l1880:
  1982                           
  1983                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1984     019B  0859               	movf	sprintf@c,w
  1985     019C  00D1               	movwf	sprintf@prec
  1986                           
  1987                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1988     019D  29D5               	goto	l1888
  1989     019E                     l1882:
  1990                           
  1991                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1992     019E  300A               	movlw	10
  1993     019F  00C3               	movwf	___lwmod@divisor
  1994     01A0  3000               	movlw	0
  1995     01A1  00C4               	movwf	___lwmod@divisor+1
  1996     01A2  0851               	movf	sprintf@prec,w
  1997     01A3  00CE               	movwf	??_sprintf
  1998     01A4  074E               	addwf	??_sprintf,w
  1999     01A5  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2000     01A6  0084               	movwf	4
  2001     01A7  120A  118A  250A  120A  118A  	fcall	stringdir
  2002     01AC  00F2               	movwf	___lwdiv@divisor
  2003     01AD  120A  118A  250A  120A  118A  	fcall	stringdir
  2004     01B2  00F3               	movwf	___lwdiv@divisor+1
  2005     01B3  0854               	movf	sprintf@val+1,w
  2006     01B4  00F5               	movwf	___lwdiv@dividend+1
  2007     01B5  0853               	movf	sprintf@val,w
  2008     01B6  00F4               	movwf	___lwdiv@dividend
  2009     01B7  120A  118A  2547  120A  118A  	fcall	___lwdiv
  2010     01BC  0873               	movf	?___lwdiv+1,w
  2011     01BD  1283               	bcf	3,5	;RP0=0, select bank0
  2012     01BE  1303               	bcf	3,6	;RP1=0, select bank0
  2013     01BF  00C6               	movwf	___lwmod@dividend+1
  2014     01C0  0872               	movf	?___lwdiv,w
  2015     01C1  00C5               	movwf	___lwmod@dividend
  2016     01C2  120A  118A  264A  120A  118A  	fcall	___lwmod
  2017     01C7  1283               	bcf	3,5	;RP0=0, select bank0
  2018     01C8  1303               	bcf	3,6	;RP1=0, select bank0
  2019     01C9  0843               	movf	?___lwmod,w
  2020     01CA  3E30               	addlw	48
  2021     01CB  00D9               	movwf	sprintf@c
  2022     01CC                     l1884:
  2023                           
  2024                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2025     01CC  0858               	movf	sprintf@sp,w
  2026     01CD  0084               	movwf	4
  2027     01CE  0859               	movf	sprintf@c,w
  2028     01CF  1383               	bcf	3,7	;select IRP bank0
  2029     01D0  0080               	movwf	0
  2030     01D1                     l1886:
  2031     01D1  3001               	movlw	1
  2032     01D2  00CE               	movwf	??_sprintf
  2033     01D3  084E               	movf	??_sprintf,w
  2034     01D4  07D8               	addwf	sprintf@sp,f
  2035     01D5                     l1888:
  2036                           
  2037                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2038     01D5  30FF               	movlw	255
  2039     01D6  00CE               	movwf	??_sprintf
  2040     01D7  084E               	movf	??_sprintf,w
  2041     01D8  07D1               	addwf	sprintf@prec,f
  2042     01D9  0A51               	incf	sprintf@prec,w
  2043     01DA  1D03               	btfss	3,2
  2044     01DB  29DD               	goto	u1591
  2045     01DC  29DE               	goto	u1590
  2046     01DD                     u1591:
  2047     01DD  299E               	goto	l1882
  2048     01DE                     u1590:
  2049     01DE                     l1890:
  2050                           
  2051                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2052     01DE  3001               	movlw	1
  2053     01DF  07C7               	addwf	sprintf@f,f
  2054     01E0  30FF               	movlw	-1
  2055     01E1  0747               	addwf	sprintf@f,w
  2056     01E2  0084               	movwf	4
  2057     01E3  120A  118A  250A  120A  118A  	fcall	stringdir
  2058     01E8  00D9               	movwf	sprintf@c
  2059     01E9  0859               	movf	sprintf@c,w
  2060     01EA  1D03               	btfss	3,2
  2061     01EB  29ED               	goto	u1601
  2062     01EC  29EE               	goto	u1600
  2063     01ED                     u1601:
  2064     01ED  2822               	goto	l1784
  2065     01EE                     u1600:
  2066     01EE                     l1892:
  2067                           
  2068                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2069     01EE  0858               	movf	sprintf@sp,w
  2070     01EF  0084               	movwf	4
  2071     01F0  1383               	bcf	3,7	;select IRP bank0
  2072     01F1  0180               	clrf	0
  2073     01F2                     l361:
  2074     01F2  0008               	return
  2075     01F3                     __end_of_sprintf:
  2076                           
  2077                           	psect	text2
  2078     0F91                     __ptext2:	
  2079 ;; *************** function _isdigit *****************
  2080 ;; Defined at:
  2081 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\isdigit.c"
  2082 ;; Parameters:    Size  Location     Type
  2083 ;;  c               1    wreg     unsigned char 
  2084 ;; Auto vars:     Size  Location     Type
  2085 ;;  c               1    3[COMMON] unsigned char 
  2086 ;; Return value:  Size  Location     Type
  2087 ;;		None               void
  2088 ;; Registers used:
  2089 ;;		wreg, status,2, status,0
  2090 ;; Tracked objects:
  2091 ;;		On entry : 0/0
  2092 ;;		On exit  : 0/0
  2093 ;;		Unchanged: 0/0
  2094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2095 ;;      Params:         0       0       0       0       0
  2096 ;;      Locals:         2       0       0       0       0
  2097 ;;      Temps:          0       0       0       0       0
  2098 ;;      Totals:         2       0       0       0       0
  2099 ;;Total ram usage:        2 bytes
  2100 ;; Hardware stack levels used: 1
  2101 ;; Hardware stack levels required when called: 1
  2102 ;; This function calls:
  2103 ;;		Nothing
  2104 ;; This function is called by:
  2105 ;;		_sprintf
  2106 ;; This function uses a non-reentrant model
  2107 ;;
  2108                           
  2109     0F91                     _isdigit:	
  2110                           ;psect for function _isdigit
  2111                           
  2112                           
  2113                           ;incstack = 0
  2114                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2115                           ;isdigit@c stored from wreg
  2116     0F91  00F3               	movwf	isdigit@c
  2117     0F92                     l1618:
  2118     0F92  01F2               	clrf	_isdigit$835
  2119     0F93                     l1620:
  2120     0F93  303A               	movlw	58
  2121     0F94  0273               	subwf	isdigit@c,w
  2122     0F95  1803               	skipnc
  2123     0F96  2F98               	goto	u1081
  2124     0F97  2F99               	goto	u1080
  2125     0F98                     u1081:
  2126     0F98  2FA1               	goto	l1626
  2127     0F99                     u1080:
  2128     0F99                     l1622:
  2129     0F99  3030               	movlw	48
  2130     0F9A  0273               	subwf	isdigit@c,w
  2131     0F9B  1C03               	skipc
  2132     0F9C  2F9E               	goto	u1091
  2133     0F9D  2F9F               	goto	u1090
  2134     0F9E                     u1091:
  2135     0F9E  2FA1               	goto	l1626
  2136     0F9F                     u1090:
  2137     0F9F                     l1624:
  2138     0F9F  01F2               	clrf	_isdigit$835
  2139     0FA0  0AF2               	incf	_isdigit$835,f
  2140     0FA1                     l1626:
  2141     0FA1  0C72               	rrf	_isdigit$835,w
  2142     0FA2                     l818:
  2143     0FA2  0008               	return
  2144     0FA3                     __end_of_isdigit:
  2145                           
  2146                           	psect	text3
  2147     064A                     __ptext3:	
  2148 ;; *************** function ___lwmod *****************
  2149 ;; Defined at:
  2150 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  2151 ;; Parameters:    Size  Location     Type
  2152 ;;  divisor         2    0[BANK0 ] unsigned int 
  2153 ;;  dividend        2    2[BANK0 ] unsigned int 
  2154 ;; Auto vars:     Size  Location     Type
  2155 ;;  counter         1   11[COMMON] unsigned char 
  2156 ;; Return value:  Size  Location     Type
  2157 ;;                  2    0[BANK0 ] unsigned int 
  2158 ;; Registers used:
  2159 ;;		wreg, status,2, status,0
  2160 ;; Tracked objects:
  2161 ;;		On entry : 0/0
  2162 ;;		On exit  : 0/0
  2163 ;;		Unchanged: 0/0
  2164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2165 ;;      Params:         0       4       0       0       0
  2166 ;;      Locals:         1       0       0       0       0
  2167 ;;      Temps:          1       0       0       0       0
  2168 ;;      Totals:         2       4       0       0       0
  2169 ;;Total ram usage:        6 bytes
  2170 ;; Hardware stack levels used: 1
  2171 ;; Hardware stack levels required when called: 1
  2172 ;; This function calls:
  2173 ;;		Nothing
  2174 ;; This function is called by:
  2175 ;;		_sprintf
  2176 ;; This function uses a non-reentrant model
  2177 ;;
  2178                           
  2179     064A                     ___lwmod:	
  2180                           ;psect for function ___lwmod
  2181                           
  2182     064A                     l1714:	
  2183                           ;incstack = 0
  2184                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2185                           
  2186     064A  1283               	bcf	3,5	;RP0=0, select bank0
  2187     064B  1303               	bcf	3,6	;RP1=0, select bank0
  2188     064C  0843               	movf	___lwmod@divisor,w
  2189     064D  0444               	iorwf	___lwmod@divisor+1,w
  2190     064E  1903               	btfsc	3,2
  2191     064F  2E51               	goto	u1311
  2192     0650  2E52               	goto	u1310
  2193     0651                     u1311:
  2194     0651  2E81               	goto	l1732
  2195     0652                     u1310:
  2196     0652                     l1716:
  2197     0652  01FB               	clrf	___lwmod@counter
  2198     0653  0AFB               	incf	___lwmod@counter,f
  2199     0654  2E60               	goto	l1722
  2200     0655                     l1718:
  2201     0655  3001               	movlw	1
  2202     0656                     u1325:
  2203     0656  1003               	clrc
  2204     0657  0DC3               	rlf	___lwmod@divisor,f
  2205     0658  0DC4               	rlf	___lwmod@divisor+1,f
  2206     0659  3EFF               	addlw	-1
  2207     065A  1D03               	skipz
  2208     065B  2E56               	goto	u1325
  2209     065C                     l1720:
  2210     065C  3001               	movlw	1
  2211     065D  00FA               	movwf	??___lwmod
  2212     065E  087A               	movf	??___lwmod,w
  2213     065F  07FB               	addwf	___lwmod@counter,f
  2214     0660                     l1722:
  2215     0660  1FC4               	btfss	___lwmod@divisor+1,7
  2216     0661  2E63               	goto	u1331
  2217     0662  2E64               	goto	u1330
  2218     0663                     u1331:
  2219     0663  2E55               	goto	l1718
  2220     0664                     u1330:
  2221     0664                     l1724:
  2222     0664  0844               	movf	___lwmod@divisor+1,w
  2223     0665  0246               	subwf	___lwmod@dividend+1,w
  2224     0666  1D03               	skipz
  2225     0667  2E6A               	goto	u1345
  2226     0668  0843               	movf	___lwmod@divisor,w
  2227     0669  0245               	subwf	___lwmod@dividend,w
  2228     066A                     u1345:
  2229     066A  1C03               	skipc
  2230     066B  2E6D               	goto	u1341
  2231     066C  2E6E               	goto	u1340
  2232     066D                     u1341:
  2233     066D  2E74               	goto	l1728
  2234     066E                     u1340:
  2235     066E                     l1726:
  2236     066E  0843               	movf	___lwmod@divisor,w
  2237     066F  02C5               	subwf	___lwmod@dividend,f
  2238     0670  0844               	movf	___lwmod@divisor+1,w
  2239     0671  1C03               	skipc
  2240     0672  03C6               	decf	___lwmod@dividend+1,f
  2241     0673  02C6               	subwf	___lwmod@dividend+1,f
  2242     0674                     l1728:
  2243     0674  3001               	movlw	1
  2244     0675                     u1355:
  2245     0675  1003               	clrc
  2246     0676  0CC4               	rrf	___lwmod@divisor+1,f
  2247     0677  0CC3               	rrf	___lwmod@divisor,f
  2248     0678  3EFF               	addlw	-1
  2249     0679  1D03               	skipz
  2250     067A  2E75               	goto	u1355
  2251     067B                     l1730:
  2252     067B  3001               	movlw	1
  2253     067C  02FB               	subwf	___lwmod@counter,f
  2254     067D  1D03               	btfss	3,2
  2255     067E  2E80               	goto	u1361
  2256     067F  2E81               	goto	u1360
  2257     0680                     u1361:
  2258     0680  2E64               	goto	l1724
  2259     0681                     u1360:
  2260     0681                     l1732:
  2261     0681  0846               	movf	___lwmod@dividend+1,w
  2262     0682  00C4               	movwf	?___lwmod+1
  2263     0683  0845               	movf	___lwmod@dividend,w
  2264     0684  00C3               	movwf	?___lwmod
  2265     0685                     l647:
  2266     0685  0008               	return
  2267     0686                     __end_of___lwmod:
  2268                           
  2269                           	psect	text4
  2270     0547                     __ptext4:	
  2271 ;; *************** function ___lwdiv *****************
  2272 ;; Defined at:
  2273 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  2274 ;; Parameters:    Size  Location     Type
  2275 ;;  divisor         2    2[COMMON] unsigned int 
  2276 ;;  dividend        2    4[COMMON] unsigned int 
  2277 ;; Auto vars:     Size  Location     Type
  2278 ;;  quotient        2    7[COMMON] unsigned int 
  2279 ;;  counter         1    9[COMMON] unsigned char 
  2280 ;; Return value:  Size  Location     Type
  2281 ;;                  2    2[COMMON] unsigned int 
  2282 ;; Registers used:
  2283 ;;		wreg, status,2, status,0
  2284 ;; Tracked objects:
  2285 ;;		On entry : 0/0
  2286 ;;		On exit  : 0/0
  2287 ;;		Unchanged: 0/0
  2288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2289 ;;      Params:         4       0       0       0       0
  2290 ;;      Locals:         3       0       0       0       0
  2291 ;;      Temps:          1       0       0       0       0
  2292 ;;      Totals:         8       0       0       0       0
  2293 ;;Total ram usage:        8 bytes
  2294 ;; Hardware stack levels used: 1
  2295 ;; Hardware stack levels required when called: 1
  2296 ;; This function calls:
  2297 ;;		Nothing
  2298 ;; This function is called by:
  2299 ;;		_sprintf
  2300 ;; This function uses a non-reentrant model
  2301 ;;
  2302                           
  2303     0547                     ___lwdiv:	
  2304                           ;psect for function ___lwdiv
  2305                           
  2306     0547                     l1688:	
  2307                           ;incstack = 0
  2308                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2309                           
  2310     0547  01F7               	clrf	___lwdiv@quotient
  2311     0548  01F8               	clrf	___lwdiv@quotient+1
  2312     0549                     l1690:
  2313     0549  0872               	movf	___lwdiv@divisor,w
  2314     054A  0473               	iorwf	___lwdiv@divisor+1,w
  2315     054B  1903               	btfsc	3,2
  2316     054C  2D4E               	goto	u1241
  2317     054D  2D4F               	goto	u1240
  2318     054E                     u1241:
  2319     054E  2D86               	goto	l1710
  2320     054F                     u1240:
  2321     054F                     l1692:
  2322     054F  01F9               	clrf	___lwdiv@counter
  2323     0550  0AF9               	incf	___lwdiv@counter,f
  2324     0551  2D5D               	goto	l1698
  2325     0552                     l1694:
  2326     0552  3001               	movlw	1
  2327     0553                     u1255:
  2328     0553  1003               	clrc
  2329     0554  0DF2               	rlf	___lwdiv@divisor,f
  2330     0555  0DF3               	rlf	___lwdiv@divisor+1,f
  2331     0556  3EFF               	addlw	-1
  2332     0557  1D03               	skipz
  2333     0558  2D53               	goto	u1255
  2334     0559                     l1696:
  2335     0559  3001               	movlw	1
  2336     055A  00F6               	movwf	??___lwdiv
  2337     055B  0876               	movf	??___lwdiv,w
  2338     055C  07F9               	addwf	___lwdiv@counter,f
  2339     055D                     l1698:
  2340     055D  1FF3               	btfss	___lwdiv@divisor+1,7
  2341     055E  2D60               	goto	u1261
  2342     055F  2D61               	goto	u1260
  2343     0560                     u1261:
  2344     0560  2D52               	goto	l1694
  2345     0561                     u1260:
  2346     0561                     l1700:
  2347     0561  3001               	movlw	1
  2348     0562                     u1275:
  2349     0562  1003               	clrc
  2350     0563  0DF7               	rlf	___lwdiv@quotient,f
  2351     0564  0DF8               	rlf	___lwdiv@quotient+1,f
  2352     0565  3EFF               	addlw	-1
  2353     0566  1D03               	skipz
  2354     0567  2D62               	goto	u1275
  2355     0568  0873               	movf	___lwdiv@divisor+1,w
  2356     0569  0275               	subwf	___lwdiv@dividend+1,w
  2357     056A  1D03               	skipz
  2358     056B  2D6E               	goto	u1285
  2359     056C  0872               	movf	___lwdiv@divisor,w
  2360     056D  0274               	subwf	___lwdiv@dividend,w
  2361     056E                     u1285:
  2362     056E  1C03               	skipc
  2363     056F  2D71               	goto	u1281
  2364     0570  2D72               	goto	u1280
  2365     0571                     u1281:
  2366     0571  2D79               	goto	l1706
  2367     0572                     u1280:
  2368     0572                     l1702:
  2369     0572  0872               	movf	___lwdiv@divisor,w
  2370     0573  02F4               	subwf	___lwdiv@dividend,f
  2371     0574  0873               	movf	___lwdiv@divisor+1,w
  2372     0575  1C03               	skipc
  2373     0576  03F5               	decf	___lwdiv@dividend+1,f
  2374     0577  02F5               	subwf	___lwdiv@dividend+1,f
  2375     0578                     l1704:
  2376     0578  1477               	bsf	___lwdiv@quotient,0
  2377     0579                     l1706:
  2378     0579  3001               	movlw	1
  2379     057A                     u1295:
  2380     057A  1003               	clrc
  2381     057B  0CF3               	rrf	___lwdiv@divisor+1,f
  2382     057C  0CF2               	rrf	___lwdiv@divisor,f
  2383     057D  3EFF               	addlw	-1
  2384     057E  1D03               	skipz
  2385     057F  2D7A               	goto	u1295
  2386     0580                     l1708:
  2387     0580  3001               	movlw	1
  2388     0581  02F9               	subwf	___lwdiv@counter,f
  2389     0582  1D03               	btfss	3,2
  2390     0583  2D85               	goto	u1301
  2391     0584  2D86               	goto	u1300
  2392     0585                     u1301:
  2393     0585  2D61               	goto	l1700
  2394     0586                     u1300:
  2395     0586                     l1710:
  2396     0586  0878               	movf	___lwdiv@quotient+1,w
  2397     0587  00F3               	movwf	?___lwdiv+1
  2398     0588  0877               	movf	___lwdiv@quotient,w
  2399     0589  00F2               	movwf	?___lwdiv
  2400     058A                     l637:
  2401     058A  0008               	return
  2402     058B                     __end_of___lwdiv:
  2403                           
  2404                           	psect	text5
  2405     07B0                     __ptext5:	
  2406 ;; *************** function _setup *****************
  2407 ;; Defined at:
  2408 ;;		line 112 in file "main.c"
  2409 ;; Parameters:    Size  Location     Type
  2410 ;;		None
  2411 ;; Auto vars:     Size  Location     Type
  2412 ;;		None
  2413 ;; Return value:  Size  Location     Type
  2414 ;;                  1    wreg      void 
  2415 ;; Registers used:
  2416 ;;		wreg, status,2, status,0, pclath, cstack
  2417 ;; Tracked objects:
  2418 ;;		On entry : 0/0
  2419 ;;		On exit  : 0/0
  2420 ;;		Unchanged: 0/0
  2421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2422 ;;      Params:         0       0       0       0       0
  2423 ;;      Locals:         0       0       0       0       0
  2424 ;;      Temps:          0       0       0       0       0
  2425 ;;      Totals:         0       0       0       0       0
  2426 ;;Total ram usage:        0 bytes
  2427 ;; Hardware stack levels used: 1
  2428 ;; Hardware stack levels required when called: 3
  2429 ;; This function calls:
  2430 ;;		_I2C_Master_Init
  2431 ;; This function is called by:
  2432 ;;		_main
  2433 ;; This function uses a non-reentrant model
  2434 ;;
  2435                           
  2436     07B0                     _setup:	
  2437                           ;psect for function _setup
  2438                           
  2439     07B0                     l1740:	
  2440                           ;incstack = 0
  2441                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  2442                           
  2443                           
  2444                           ;main.c: 115:     ANSEL = 0;
  2445     07B0  1683               	bsf	3,5	;RP0=1, select bank3
  2446     07B1  1703               	bsf	3,6	;RP1=1, select bank3
  2447     07B2  0188               	clrf	8	;volatile
  2448                           
  2449                           ;main.c: 116:     ANSELH = 0;
  2450     07B3  0189               	clrf	9	;volatile
  2451                           
  2452                           ;main.c: 120:     TRISB = 0;
  2453     07B4  1683               	bsf	3,5	;RP0=1, select bank1
  2454     07B5  1303               	bcf	3,6	;RP1=0, select bank1
  2455     07B6  0186               	clrf	6	;volatile
  2456                           
  2457                           ;main.c: 121:     TRISD = 0;
  2458     07B7  0188               	clrf	8	;volatile
  2459                           
  2460                           ;main.c: 126:     PORTA = 0;
  2461     07B8  1283               	bcf	3,5	;RP0=0, select bank0
  2462     07B9  1303               	bcf	3,6	;RP1=0, select bank0
  2463     07BA  0185               	clrf	5	;volatile
  2464                           
  2465                           ;main.c: 127:     PORTB = 0;
  2466     07BB  0186               	clrf	6	;volatile
  2467                           
  2468                           ;main.c: 128:     PORTC = 0;
  2469     07BC  0187               	clrf	7	;volatile
  2470                           
  2471                           ;main.c: 129:     PORTD = 0;
  2472     07BD  0188               	clrf	8	;volatile
  2473                           
  2474                           ;main.c: 130:     PORTE = 0;
  2475     07BE  0189               	clrf	9	;volatile
  2476     07BF                     l1742:
  2477                           
  2478                           ;main.c: 152:     OSCCONbits.IRCF = 0b111 ;
  2479     07BF  3070               	movlw	112
  2480     07C0  1683               	bsf	3,5	;RP0=1, select bank1
  2481     07C1  1303               	bcf	3,6	;RP1=0, select bank1
  2482     07C2  048F               	iorwf	15,f	;volatile
  2483     07C3                     l1744:
  2484                           
  2485                           ;main.c: 153:     OSCCONbits.SCS = 1;
  2486     07C3  140F               	bsf	15,0	;volatile
  2487     07C4                     l1746:
  2488                           
  2489                           ;main.c: 156:     I2C_Master_Init(100000);
  2490     07C4  3000               	movlw	0
  2491     07C5  1283               	bcf	3,5	;RP0=0, select bank0
  2492     07C6  1303               	bcf	3,6	;RP1=0, select bank0
  2493     07C7  00CB               	movwf	I2C_Master_Init@c+3
  2494     07C8  3001               	movlw	1
  2495     07C9  00CA               	movwf	I2C_Master_Init@c+2
  2496     07CA  3086               	movlw	134
  2497     07CB  00C9               	movwf	I2C_Master_Init@c+1
  2498     07CC  30A0               	movlw	160
  2499     07CD  00C8               	movwf	I2C_Master_Init@c
  2500     07CE  120A  118A  2686  120A  118A  	fcall	_I2C_Master_Init
  2501     07D3                     l95:
  2502     07D3  0008               	return
  2503     07D4                     __end_of_setup:
  2504                           
  2505                           	psect	text6
  2506     0686                     __ptext6:	
  2507 ;; *************** function _I2C_Master_Init *****************
  2508 ;; Defined at:
  2509 ;;		line 16 in file "I2C.c"
  2510 ;; Parameters:    Size  Location     Type
  2511 ;;  c               4    5[BANK0 ] const unsigned long 
  2512 ;; Auto vars:     Size  Location     Type
  2513 ;;		None
  2514 ;; Return value:  Size  Location     Type
  2515 ;;                  1    wreg      void 
  2516 ;; Registers used:
  2517 ;;		wreg, status,2, status,0, pclath, cstack
  2518 ;; Tracked objects:
  2519 ;;		On entry : 0/0
  2520 ;;		On exit  : 0/0
  2521 ;;		Unchanged: 0/0
  2522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2523 ;;      Params:         0       4       0       0       0
  2524 ;;      Locals:         0       0       0       0       0
  2525 ;;      Temps:          0       4       0       0       0
  2526 ;;      Totals:         0       8       0       0       0
  2527 ;;Total ram usage:        8 bytes
  2528 ;; Hardware stack levels used: 1
  2529 ;; Hardware stack levels required when called: 2
  2530 ;; This function calls:
  2531 ;;		___lldiv
  2532 ;; This function is called by:
  2533 ;;		_setup
  2534 ;; This function uses a non-reentrant model
  2535 ;;
  2536                           
  2537     0686                     _I2C_Master_Init:	
  2538                           ;psect for function _I2C_Master_Init
  2539                           
  2540     0686                     l1558:	
  2541                           ;incstack = 0
  2542                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  2543                           
  2544                           
  2545                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  2546     0686  3028               	movlw	40
  2547     0687  1283               	bcf	3,5	;RP0=0, select bank0
  2548     0688  1303               	bcf	3,6	;RP1=0, select bank0
  2549     0689  0094               	movwf	20	;volatile
  2550     068A                     l1560:
  2551                           
  2552                           ;I2C.c: 19:     SSPCON2 = 0;
  2553     068A  1683               	bsf	3,5	;RP0=1, select bank1
  2554     068B  1303               	bcf	3,6	;RP1=0, select bank1
  2555     068C  0191               	clrf	17	;volatile
  2556     068D                     l1562:
  2557                           
  2558                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  2559     068D  1283               	bcf	3,5	;RP0=0, select bank0
  2560     068E  1303               	bcf	3,6	;RP1=0, select bank0
  2561     068F  0848               	movf	I2C_Master_Init@c,w
  2562     0690  00CC               	movwf	??_I2C_Master_Init
  2563     0691  0849               	movf	I2C_Master_Init@c+1,w
  2564     0692  00CD               	movwf	??_I2C_Master_Init+1
  2565     0693  084A               	movf	I2C_Master_Init@c+2,w
  2566     0694  00CE               	movwf	??_I2C_Master_Init+2
  2567     0695  084B               	movf	I2C_Master_Init@c+3,w
  2568     0696  00CF               	movwf	??_I2C_Master_Init+3
  2569     0697  3002               	movlw	2
  2570     0698                     u1065:
  2571     0698  1003               	clrc
  2572     0699  0DCC               	rlf	??_I2C_Master_Init,f
  2573     069A  0DCD               	rlf	??_I2C_Master_Init+1,f
  2574     069B  0DCE               	rlf	??_I2C_Master_Init+2,f
  2575     069C  0DCF               	rlf	??_I2C_Master_Init+3,f
  2576     069D                     u1060:
  2577     069D  3EFF               	addlw	-1
  2578     069E  1D03               	skipz
  2579     069F  2E98               	goto	u1065
  2580     06A0  084F               	movf	??_I2C_Master_Init+3,w
  2581     06A1  00F5               	movwf	___lldiv@divisor+3
  2582     06A2  084E               	movf	??_I2C_Master_Init+2,w
  2583     06A3  00F4               	movwf	___lldiv@divisor+2
  2584     06A4  084D               	movf	??_I2C_Master_Init+1,w
  2585     06A5  00F3               	movwf	___lldiv@divisor+1
  2586     06A6  084C               	movf	??_I2C_Master_Init,w
  2587     06A7  00F2               	movwf	___lldiv@divisor
  2588     06A8  3000               	movlw	0
  2589     06A9  00F9               	movwf	___lldiv@dividend+3
  2590     06AA  307A               	movlw	122
  2591     06AB  00F8               	movwf	___lldiv@dividend+2
  2592     06AC  3012               	movlw	18
  2593     06AD  00F7               	movwf	___lldiv@dividend+1
  2594     06AE  3000               	movlw	0
  2595     06AF  00F6               	movwf	___lldiv@dividend
  2596     06B0  120A  118A  23DA  120A  118A  	fcall	___lldiv
  2597     06B5  0872               	movf	?___lldiv,w
  2598     06B6  3EFF               	addlw	255
  2599     06B7  1683               	bsf	3,5	;RP0=1, select bank1
  2600     06B8  1303               	bcf	3,6	;RP1=0, select bank1
  2601     06B9  0093               	movwf	19	;volatile
  2602     06BA                     l1564:
  2603                           
  2604                           ;I2C.c: 21:     SSPSTAT = 0;
  2605     06BA  0194               	clrf	20	;volatile
  2606     06BB                     l1566:
  2607                           
  2608                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  2609     06BB  1587               	bsf	7,3	;volatile
  2610     06BC                     l1568:
  2611                           
  2612                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  2613     06BC  1607               	bsf	7,4	;volatile
  2614     06BD                     l144:
  2615     06BD  0008               	return
  2616     06BE                     __end_of_I2C_Master_Init:
  2617                           
  2618                           	psect	text7
  2619     03DA                     __ptext7:	
  2620 ;; *************** function ___lldiv *****************
  2621 ;; Defined at:
  2622 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  2623 ;; Parameters:    Size  Location     Type
  2624 ;;  divisor         4    2[COMMON] unsigned long 
  2625 ;;  dividend        4    6[COMMON] unsigned long 
  2626 ;; Auto vars:     Size  Location     Type
  2627 ;;  quotient        4    0[BANK0 ] unsigned long 
  2628 ;;  counter         1    4[BANK0 ] unsigned char 
  2629 ;; Return value:  Size  Location     Type
  2630 ;;                  4    2[COMMON] unsigned long 
  2631 ;; Registers used:
  2632 ;;		wreg, status,2, status,0
  2633 ;; Tracked objects:
  2634 ;;		On entry : 0/0
  2635 ;;		On exit  : 0/0
  2636 ;;		Unchanged: 0/0
  2637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2638 ;;      Params:         8       0       0       0       0
  2639 ;;      Locals:         0       5       0       0       0
  2640 ;;      Temps:          1       0       0       0       0
  2641 ;;      Totals:         9       5       0       0       0
  2642 ;;Total ram usage:       14 bytes
  2643 ;; Hardware stack levels used: 1
  2644 ;; Hardware stack levels required when called: 1
  2645 ;; This function calls:
  2646 ;;		Nothing
  2647 ;; This function is called by:
  2648 ;;		_I2C_Master_Init
  2649 ;; This function uses a non-reentrant model
  2650 ;;
  2651                           
  2652     03DA                     ___lldiv:	
  2653                           ;psect for function ___lldiv
  2654                           
  2655     03DA                     l1534:	
  2656                           ;incstack = 0
  2657                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2658                           
  2659     03DA  3000               	movlw	0
  2660     03DB  1283               	bcf	3,5	;RP0=0, select bank0
  2661     03DC  1303               	bcf	3,6	;RP1=0, select bank0
  2662     03DD  00C6               	movwf	___lldiv@quotient+3
  2663     03DE  3000               	movlw	0
  2664     03DF  00C5               	movwf	___lldiv@quotient+2
  2665     03E0  3000               	movlw	0
  2666     03E1  00C4               	movwf	___lldiv@quotient+1
  2667     03E2  3000               	movlw	0
  2668     03E3  00C3               	movwf	___lldiv@quotient
  2669     03E4  0875               	movf	___lldiv@divisor+3,w
  2670     03E5  0474               	iorwf	___lldiv@divisor+2,w
  2671     03E6  0473               	iorwf	___lldiv@divisor+1,w
  2672     03E7  0472               	iorwf	___lldiv@divisor,w
  2673     03E8  1903               	skipnz
  2674     03E9  2BEB               	goto	u991
  2675     03EA  2BEC               	goto	u990
  2676     03EB                     u991:
  2677     03EB  2C39               	goto	l1554
  2678     03EC                     u990:
  2679     03EC                     l1536:
  2680     03EC  01C7               	clrf	___lldiv@counter
  2681     03ED  0AC7               	incf	___lldiv@counter,f
  2682     03EE  2BFC               	goto	l1540
  2683     03EF                     l1538:
  2684     03EF  3001               	movlw	1
  2685     03F0  00FA               	movwf	??___lldiv
  2686     03F1                     u1005:
  2687     03F1  1003               	clrc
  2688     03F2  0DF2               	rlf	___lldiv@divisor,f
  2689     03F3  0DF3               	rlf	___lldiv@divisor+1,f
  2690     03F4  0DF4               	rlf	___lldiv@divisor+2,f
  2691     03F5  0DF5               	rlf	___lldiv@divisor+3,f
  2692     03F6  0BFA               	decfsz	??___lldiv,f
  2693     03F7  2BF1               	goto	u1005
  2694     03F8  3001               	movlw	1
  2695     03F9  00FA               	movwf	??___lldiv
  2696     03FA  087A               	movf	??___lldiv,w
  2697     03FB  07C7               	addwf	___lldiv@counter,f
  2698     03FC                     l1540:
  2699     03FC  1FF5               	btfss	___lldiv@divisor+3,7
  2700     03FD  2BFF               	goto	u1011
  2701     03FE  2C00               	goto	u1010
  2702     03FF                     u1011:
  2703     03FF  2BEF               	goto	l1538
  2704     0400                     u1010:
  2705     0400                     l1542:
  2706     0400  3001               	movlw	1
  2707     0401  00FA               	movwf	??___lldiv
  2708     0402                     u1025:
  2709     0402  1003               	clrc
  2710     0403  0DC3               	rlf	___lldiv@quotient,f
  2711     0404  0DC4               	rlf	___lldiv@quotient+1,f
  2712     0405  0DC5               	rlf	___lldiv@quotient+2,f
  2713     0406  0DC6               	rlf	___lldiv@quotient+3,f
  2714     0407  0BFA               	decfsz	??___lldiv,f
  2715     0408  2C02               	goto	u1025
  2716     0409                     l1544:
  2717     0409  0875               	movf	___lldiv@divisor+3,w
  2718     040A  0279               	subwf	___lldiv@dividend+3,w
  2719     040B  1D03               	skipz
  2720     040C  2C17               	goto	u1035
  2721     040D  0874               	movf	___lldiv@divisor+2,w
  2722     040E  0278               	subwf	___lldiv@dividend+2,w
  2723     040F  1D03               	skipz
  2724     0410  2C17               	goto	u1035
  2725     0411  0873               	movf	___lldiv@divisor+1,w
  2726     0412  0277               	subwf	___lldiv@dividend+1,w
  2727     0413  1D03               	skipz
  2728     0414  2C17               	goto	u1035
  2729     0415  0872               	movf	___lldiv@divisor,w
  2730     0416  0276               	subwf	___lldiv@dividend,w
  2731     0417                     u1035:
  2732     0417  1C03               	skipc
  2733     0418  2C1A               	goto	u1031
  2734     0419  2C1B               	goto	u1030
  2735     041A                     u1031:
  2736     041A  2C2A               	goto	l1550
  2737     041B                     u1030:
  2738     041B                     l1546:
  2739     041B  0872               	movf	___lldiv@divisor,w
  2740     041C  02F6               	subwf	___lldiv@dividend,f
  2741     041D  0873               	movf	___lldiv@divisor+1,w
  2742     041E  1C03               	skipc
  2743     041F  0F73               	incfsz	___lldiv@divisor+1,w
  2744     0420  02F7               	subwf	___lldiv@dividend+1,f
  2745     0421  0874               	movf	___lldiv@divisor+2,w
  2746     0422  1C03               	skipc
  2747     0423  0F74               	incfsz	___lldiv@divisor+2,w
  2748     0424  02F8               	subwf	___lldiv@dividend+2,f
  2749     0425  0875               	movf	___lldiv@divisor+3,w
  2750     0426  1C03               	skipc
  2751     0427  0F75               	incfsz	___lldiv@divisor+3,w
  2752     0428  02F9               	subwf	___lldiv@dividend+3,f
  2753     0429                     l1548:
  2754     0429  1443               	bsf	___lldiv@quotient,0
  2755     042A                     l1550:
  2756     042A  3001               	movlw	1
  2757     042B                     u1045:
  2758     042B  1003               	clrc
  2759     042C  0CF5               	rrf	___lldiv@divisor+3,f
  2760     042D  0CF4               	rrf	___lldiv@divisor+2,f
  2761     042E  0CF3               	rrf	___lldiv@divisor+1,f
  2762     042F  0CF2               	rrf	___lldiv@divisor,f
  2763     0430  3EFF               	addlw	-1
  2764     0431  1D03               	skipz
  2765     0432  2C2B               	goto	u1045
  2766     0433                     l1552:
  2767     0433  3001               	movlw	1
  2768     0434  02C7               	subwf	___lldiv@counter,f
  2769     0435  1D03               	btfss	3,2
  2770     0436  2C38               	goto	u1051
  2771     0437  2C39               	goto	u1050
  2772     0438                     u1051:
  2773     0438  2C00               	goto	l1542
  2774     0439                     u1050:
  2775     0439                     l1554:
  2776     0439  0846               	movf	___lldiv@quotient+3,w
  2777     043A  00F5               	movwf	?___lldiv+3
  2778     043B  0845               	movf	___lldiv@quotient+2,w
  2779     043C  00F4               	movwf	?___lldiv+2
  2780     043D  0844               	movf	___lldiv@quotient+1,w
  2781     043E  00F3               	movwf	?___lldiv+1
  2782     043F  0843               	movf	___lldiv@quotient,w
  2783     0440  00F2               	movwf	?___lldiv
  2784     0441                     l401:
  2785     0441  0008               	return
  2786     0442                     __end_of___lldiv:
  2787                           
  2788                           	psect	text8
  2789     06BE                     __ptext8:	
  2790 ;; *************** function _map *****************
  2791 ;; Defined at:
  2792 ;;		line 52 in file "main.c"
  2793 ;; Parameters:    Size  Location     Type
  2794 ;;  value           1    wreg     unsigned char 
  2795 ;;  inputmin        2    5[BANK0 ] int 
  2796 ;;  inputmax        2    7[BANK0 ] int 
  2797 ;;  outmin          2    9[BANK0 ] int 
  2798 ;;  outmax          2   11[BANK0 ] int 
  2799 ;; Auto vars:     Size  Location     Type
  2800 ;;  value           1   14[BANK0 ] unsigned char 
  2801 ;; Return value:  Size  Location     Type
  2802 ;;                  2    5[BANK0 ] int 
  2803 ;; Registers used:
  2804 ;;		wreg, status,2, status,0, pclath, cstack
  2805 ;; Tracked objects:
  2806 ;;		On entry : 0/0
  2807 ;;		On exit  : 0/0
  2808 ;;		Unchanged: 0/0
  2809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2810 ;;      Params:         0       8       0       0       0
  2811 ;;      Locals:         0       1       0       0       0
  2812 ;;      Temps:          0       1       0       0       0
  2813 ;;      Totals:         0      10       0       0       0
  2814 ;;Total ram usage:       10 bytes
  2815 ;; Hardware stack levels used: 1
  2816 ;; Hardware stack levels required when called: 2
  2817 ;; This function calls:
  2818 ;;		___awdiv
  2819 ;;		___wmul
  2820 ;; This function is called by:
  2821 ;;		_main
  2822 ;; This function uses a non-reentrant model
  2823 ;;
  2824                           
  2825     06BE                     _map:	
  2826                           ;psect for function _map
  2827                           
  2828                           
  2829                           ;incstack = 0
  2830                           ; Regs used in _map: [wreg+status,2+status,0+pclath+cstack]
  2831                           ;map@value stored from wreg
  2832     06BE  1283               	bcf	3,5	;RP0=0, select bank0
  2833     06BF  1303               	bcf	3,6	;RP1=0, select bank0
  2834     06C0  00D1               	movwf	map@value
  2835     06C1                     l1736:
  2836                           
  2837                           ;main.c: 53:     return ((value - inputmin)*(outmax-outmin)) / (inputmax-inputmin)+outmi
      +                          n;}
  2838     06C1  0848               	movf	map@inputmin,w
  2839     06C2  024A               	subwf	map@inputmax,w
  2840     06C3  00F8               	movwf	___awdiv@divisor
  2841     06C4  0849               	movf	map@inputmin+1,w
  2842     06C5  1C03               	skipc
  2843     06C6  0A49               	incf	map@inputmin+1,w
  2844     06C7  024B               	subwf	map@inputmax+1,w
  2845     06C8  00F9               	movwf	___awdiv@divisor+1
  2846     06C9  0851               	movf	map@value,w
  2847     06CA  00D0               	movwf	??_map
  2848     06CB  0848               	movf	map@inputmin,w
  2849     06CC  0250               	subwf	??_map,w
  2850     06CD  00F2               	movwf	___wmul@multiplier
  2851     06CE  0949               	comf	map@inputmin+1,w
  2852     06CF  1803               	skipnc
  2853     06D0  3E01               	addlw	1
  2854     06D1  00F3               	movwf	___wmul@multiplier+1
  2855     06D2  084C               	movf	map@outmin,w
  2856     06D3  024E               	subwf	map@outmax,w
  2857     06D4  00F4               	movwf	___wmul@multiplicand
  2858     06D5  084D               	movf	map@outmin+1,w
  2859     06D6  1C03               	skipc
  2860     06D7  0A4D               	incf	map@outmin+1,w
  2861     06D8  024F               	subwf	map@outmax+1,w
  2862     06D9  00F5               	movwf	___wmul@multiplicand+1
  2863     06DA  120A  118A  278B  120A  118A  	fcall	___wmul
  2864     06DF  0873               	movf	?___wmul+1,w
  2865     06E0  00FB               	movwf	___awdiv@dividend+1
  2866     06E1  0872               	movf	?___wmul,w
  2867     06E2  00FA               	movwf	___awdiv@dividend
  2868     06E3  120A  118A  2371  120A  118A  	fcall	___awdiv
  2869     06E8  1283               	bcf	3,5	;RP0=0, select bank0
  2870     06E9  1303               	bcf	3,6	;RP1=0, select bank0
  2871     06EA  084C               	movf	map@outmin,w
  2872     06EB  0778               	addwf	?___awdiv,w
  2873     06EC  00C8               	movwf	?_map
  2874     06ED  084D               	movf	map@outmin+1,w
  2875     06EE  1803               	skipnc
  2876     06EF  0A4D               	incf	map@outmin+1,w
  2877     06F0  0779               	addwf	?___awdiv+1,w
  2878     06F1  00C9               	movwf	?_map+1
  2879     06F2                     l79:
  2880     06F2  0008               	return
  2881     06F3                     __end_of_map:
  2882                           
  2883                           	psect	text9
  2884     078B                     __ptext9:	
  2885 ;; *************** function ___wmul *****************
  2886 ;; Defined at:
  2887 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  2888 ;; Parameters:    Size  Location     Type
  2889 ;;  multiplier      2    2[COMMON] unsigned int 
  2890 ;;  multiplicand    2    4[COMMON] unsigned int 
  2891 ;; Auto vars:     Size  Location     Type
  2892 ;;  product         2    6[COMMON] unsigned int 
  2893 ;; Return value:  Size  Location     Type
  2894 ;;                  2    2[COMMON] unsigned int 
  2895 ;; Registers used:
  2896 ;;		wreg, status,2, status,0
  2897 ;; Tracked objects:
  2898 ;;		On entry : 0/0
  2899 ;;		On exit  : 0/0
  2900 ;;		Unchanged: 0/0
  2901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2902 ;;      Params:         4       0       0       0       0
  2903 ;;      Locals:         2       0       0       0       0
  2904 ;;      Temps:          0       0       0       0       0
  2905 ;;      Totals:         6       0       0       0       0
  2906 ;;Total ram usage:        6 bytes
  2907 ;; Hardware stack levels used: 1
  2908 ;; Hardware stack levels required when called: 1
  2909 ;; This function calls:
  2910 ;;		Nothing
  2911 ;; This function is called by:
  2912 ;;		_map
  2913 ;;		_main
  2914 ;;		_sprintf
  2915 ;; This function uses a non-reentrant model
  2916 ;;
  2917                           
  2918     078B                     ___wmul:	
  2919                           ;psect for function ___wmul
  2920                           
  2921     078B                     l1630:	
  2922                           ;incstack = 0
  2923                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2924                           
  2925     078B  01F6               	clrf	___wmul@product
  2926     078C  01F7               	clrf	___wmul@product+1
  2927     078D                     l1632:
  2928     078D  1C72               	btfss	___wmul@multiplier,0
  2929     078E  2F90               	goto	u1101
  2930     078F  2F91               	goto	u1100
  2931     0790                     u1101:
  2932     0790  2F97               	goto	l365
  2933     0791                     u1100:
  2934     0791                     l1634:
  2935     0791  0874               	movf	___wmul@multiplicand,w
  2936     0792  07F6               	addwf	___wmul@product,f
  2937     0793  1803               	skipnc
  2938     0794  0AF7               	incf	___wmul@product+1,f
  2939     0795  0875               	movf	___wmul@multiplicand+1,w
  2940     0796  07F7               	addwf	___wmul@product+1,f
  2941     0797                     l365:
  2942     0797  3001               	movlw	1
  2943     0798                     u1115:
  2944     0798  1003               	clrc
  2945     0799  0DF4               	rlf	___wmul@multiplicand,f
  2946     079A  0DF5               	rlf	___wmul@multiplicand+1,f
  2947     079B  3EFF               	addlw	-1
  2948     079C  1D03               	skipz
  2949     079D  2F98               	goto	u1115
  2950     079E                     l1636:
  2951     079E  3001               	movlw	1
  2952     079F                     u1125:
  2953     079F  1003               	clrc
  2954     07A0  0CF3               	rrf	___wmul@multiplier+1,f
  2955     07A1  0CF2               	rrf	___wmul@multiplier,f
  2956     07A2  3EFF               	addlw	-1
  2957     07A3  1D03               	skipz
  2958     07A4  2F9F               	goto	u1125
  2959     07A5                     l1638:
  2960     07A5  0872               	movf	___wmul@multiplier,w
  2961     07A6  0473               	iorwf	___wmul@multiplier+1,w
  2962     07A7  1D03               	btfss	3,2
  2963     07A8  2FAA               	goto	u1131
  2964     07A9  2FAB               	goto	u1130
  2965     07AA                     u1131:
  2966     07AA  2F8D               	goto	l1632
  2967     07AB                     u1130:
  2968     07AB                     l1640:
  2969     07AB  0877               	movf	___wmul@product+1,w
  2970     07AC  00F3               	movwf	?___wmul+1
  2971     07AD  0876               	movf	___wmul@product,w
  2972     07AE  00F2               	movwf	?___wmul
  2973     07AF                     l367:
  2974     07AF  0008               	return
  2975     07B0                     __end_of___wmul:
  2976                           
  2977                           	psect	text10
  2978     0371                     __ptext10:	
  2979 ;; *************** function ___awdiv *****************
  2980 ;; Defined at:
  2981 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  2982 ;; Parameters:    Size  Location     Type
  2983 ;;  divisor         2    8[COMMON] int 
  2984 ;;  dividend        2   10[COMMON] int 
  2985 ;; Auto vars:     Size  Location     Type
  2986 ;;  quotient        2    3[BANK0 ] int 
  2987 ;;  sign            1    2[BANK0 ] unsigned char 
  2988 ;;  counter         1    1[BANK0 ] unsigned char 
  2989 ;; Return value:  Size  Location     Type
  2990 ;;                  2    8[COMMON] int 
  2991 ;; Registers used:
  2992 ;;		wreg, status,2, status,0
  2993 ;; Tracked objects:
  2994 ;;		On entry : 0/0
  2995 ;;		On exit  : 0/0
  2996 ;;		Unchanged: 0/0
  2997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2998 ;;      Params:         4       0       0       0       0
  2999 ;;      Locals:         0       4       0       0       0
  3000 ;;      Temps:          0       1       0       0       0
  3001 ;;      Totals:         4       5       0       0       0
  3002 ;;Total ram usage:        9 bytes
  3003 ;; Hardware stack levels used: 1
  3004 ;; Hardware stack levels required when called: 1
  3005 ;; This function calls:
  3006 ;;		Nothing
  3007 ;; This function is called by:
  3008 ;;		_map
  3009 ;;		_main
  3010 ;; This function uses a non-reentrant model
  3011 ;;
  3012                           
  3013     0371                     ___awdiv:	
  3014                           ;psect for function ___awdiv
  3015                           
  3016     0371                     l1644:	
  3017                           ;incstack = 0
  3018                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3019                           
  3020     0371  1283               	bcf	3,5	;RP0=0, select bank0
  3021     0372  1303               	bcf	3,6	;RP1=0, select bank0
  3022     0373  01C5               	clrf	___awdiv@sign
  3023     0374                     l1646:
  3024     0374  1FF9               	btfss	___awdiv@divisor+1,7
  3025     0375  2B77               	goto	u1141
  3026     0376  2B78               	goto	u1140
  3027     0377                     u1141:
  3028     0377  2B7F               	goto	l1652
  3029     0378                     u1140:
  3030     0378                     l1648:
  3031     0378  09F8               	comf	___awdiv@divisor,f
  3032     0379  09F9               	comf	___awdiv@divisor+1,f
  3033     037A  0AF8               	incf	___awdiv@divisor,f
  3034     037B  1903               	skipnz
  3035     037C  0AF9               	incf	___awdiv@divisor+1,f
  3036     037D                     l1650:
  3037     037D  01C5               	clrf	___awdiv@sign
  3038     037E  0AC5               	incf	___awdiv@sign,f
  3039     037F                     l1652:
  3040     037F  1FFB               	btfss	___awdiv@dividend+1,7
  3041     0380  2B82               	goto	u1151
  3042     0381  2B83               	goto	u1150
  3043     0382                     u1151:
  3044     0382  2B8C               	goto	l1658
  3045     0383                     u1150:
  3046     0383                     l1654:
  3047     0383  09FA               	comf	___awdiv@dividend,f
  3048     0384  09FB               	comf	___awdiv@dividend+1,f
  3049     0385  0AFA               	incf	___awdiv@dividend,f
  3050     0386  1903               	skipnz
  3051     0387  0AFB               	incf	___awdiv@dividend+1,f
  3052     0388                     l1656:
  3053     0388  3001               	movlw	1
  3054     0389  00C3               	movwf	??___awdiv
  3055     038A  0843               	movf	??___awdiv,w
  3056     038B  06C5               	xorwf	___awdiv@sign,f
  3057     038C                     l1658:
  3058     038C  01C6               	clrf	___awdiv@quotient
  3059     038D  01C7               	clrf	___awdiv@quotient+1
  3060     038E                     l1660:
  3061     038E  0878               	movf	___awdiv@divisor,w
  3062     038F  0479               	iorwf	___awdiv@divisor+1,w
  3063     0390  1903               	btfsc	3,2
  3064     0391  2B93               	goto	u1161
  3065     0392  2B94               	goto	u1160
  3066     0393                     u1161:
  3067     0393  2BCB               	goto	l1680
  3068     0394                     u1160:
  3069     0394                     l1662:
  3070     0394  01C4               	clrf	___awdiv@counter
  3071     0395  0AC4               	incf	___awdiv@counter,f
  3072     0396  2BA2               	goto	l1668
  3073     0397                     l1664:
  3074     0397  3001               	movlw	1
  3075     0398                     u1175:
  3076     0398  1003               	clrc
  3077     0399  0DF8               	rlf	___awdiv@divisor,f
  3078     039A  0DF9               	rlf	___awdiv@divisor+1,f
  3079     039B  3EFF               	addlw	-1
  3080     039C  1D03               	skipz
  3081     039D  2B98               	goto	u1175
  3082     039E                     l1666:
  3083     039E  3001               	movlw	1
  3084     039F  00C3               	movwf	??___awdiv
  3085     03A0  0843               	movf	??___awdiv,w
  3086     03A1  07C4               	addwf	___awdiv@counter,f
  3087     03A2                     l1668:
  3088     03A2  1FF9               	btfss	___awdiv@divisor+1,7
  3089     03A3  2BA5               	goto	u1181
  3090     03A4  2BA6               	goto	u1180
  3091     03A5                     u1181:
  3092     03A5  2B97               	goto	l1664
  3093     03A6                     u1180:
  3094     03A6                     l1670:
  3095     03A6  3001               	movlw	1
  3096     03A7                     u1195:
  3097     03A7  1003               	clrc
  3098     03A8  0DC6               	rlf	___awdiv@quotient,f
  3099     03A9  0DC7               	rlf	___awdiv@quotient+1,f
  3100     03AA  3EFF               	addlw	-1
  3101     03AB  1D03               	skipz
  3102     03AC  2BA7               	goto	u1195
  3103     03AD  0879               	movf	___awdiv@divisor+1,w
  3104     03AE  027B               	subwf	___awdiv@dividend+1,w
  3105     03AF  1D03               	skipz
  3106     03B0  2BB3               	goto	u1205
  3107     03B1  0878               	movf	___awdiv@divisor,w
  3108     03B2  027A               	subwf	___awdiv@dividend,w
  3109     03B3                     u1205:
  3110     03B3  1C03               	skipc
  3111     03B4  2BB6               	goto	u1201
  3112     03B5  2BB7               	goto	u1200
  3113     03B6                     u1201:
  3114     03B6  2BBE               	goto	l1676
  3115     03B7                     u1200:
  3116     03B7                     l1672:
  3117     03B7  0878               	movf	___awdiv@divisor,w
  3118     03B8  02FA               	subwf	___awdiv@dividend,f
  3119     03B9  0879               	movf	___awdiv@divisor+1,w
  3120     03BA  1C03               	skipc
  3121     03BB  03FB               	decf	___awdiv@dividend+1,f
  3122     03BC  02FB               	subwf	___awdiv@dividend+1,f
  3123     03BD                     l1674:
  3124     03BD  1446               	bsf	___awdiv@quotient,0
  3125     03BE                     l1676:
  3126     03BE  3001               	movlw	1
  3127     03BF                     u1215:
  3128     03BF  1003               	clrc
  3129     03C0  0CF9               	rrf	___awdiv@divisor+1,f
  3130     03C1  0CF8               	rrf	___awdiv@divisor,f
  3131     03C2  3EFF               	addlw	-1
  3132     03C3  1D03               	skipz
  3133     03C4  2BBF               	goto	u1215
  3134     03C5                     l1678:
  3135     03C5  3001               	movlw	1
  3136     03C6  02C4               	subwf	___awdiv@counter,f
  3137     03C7  1D03               	btfss	3,2
  3138     03C8  2BCA               	goto	u1221
  3139     03C9  2BCB               	goto	u1220
  3140     03CA                     u1221:
  3141     03CA  2BA6               	goto	l1670
  3142     03CB                     u1220:
  3143     03CB                     l1680:
  3144     03CB  0845               	movf	___awdiv@sign,w
  3145     03CC  1903               	btfsc	3,2
  3146     03CD  2BCF               	goto	u1231
  3147     03CE  2BD0               	goto	u1230
  3148     03CF                     u1231:
  3149     03CF  2BD5               	goto	l1684
  3150     03D0                     u1230:
  3151     03D0                     l1682:
  3152     03D0  09C6               	comf	___awdiv@quotient,f
  3153     03D1  09C7               	comf	___awdiv@quotient+1,f
  3154     03D2  0AC6               	incf	___awdiv@quotient,f
  3155     03D3  1903               	skipnz
  3156     03D4  0AC7               	incf	___awdiv@quotient+1,f
  3157     03D5                     l1684:
  3158     03D5  0847               	movf	___awdiv@quotient+1,w
  3159     03D6  00F9               	movwf	?___awdiv+1
  3160     03D7  0846               	movf	___awdiv@quotient,w
  3161     03D8  00F8               	movwf	?___awdiv
  3162     03D9                     l518:
  3163     03D9  0008               	return
  3164     03DA                     __end_of___awdiv:
  3165                           
  3166                           	psect	text11
  3167     0442                     __ptext11:	
  3168 ;; *************** function ___awmod *****************
  3169 ;; Defined at:
  3170 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  3171 ;; Parameters:    Size  Location     Type
  3172 ;;  divisor         2    5[BANK0 ] int 
  3173 ;;  dividend        2    7[BANK0 ] int 
  3174 ;; Auto vars:     Size  Location     Type
  3175 ;;  sign            1   11[BANK0 ] unsigned char 
  3176 ;;  counter         1   10[BANK0 ] unsigned char 
  3177 ;; Return value:  Size  Location     Type
  3178 ;;                  2    5[BANK0 ] int 
  3179 ;; Registers used:
  3180 ;;		wreg, status,2, status,0
  3181 ;; Tracked objects:
  3182 ;;		On entry : 0/0
  3183 ;;		On exit  : 0/0
  3184 ;;		Unchanged: 0/0
  3185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3186 ;;      Params:         0       4       0       0       0
  3187 ;;      Locals:         0       2       0       0       0
  3188 ;;      Temps:          0       1       0       0       0
  3189 ;;      Totals:         0       7       0       0       0
  3190 ;;Total ram usage:        7 bytes
  3191 ;; Hardware stack levels used: 1
  3192 ;; Hardware stack levels required when called: 1
  3193 ;; This function calls:
  3194 ;;		Nothing
  3195 ;; This function is called by:
  3196 ;;		_main
  3197 ;; This function uses a non-reentrant model
  3198 ;;
  3199                           
  3200     0442                     ___awmod:	
  3201                           ;psect for function ___awmod
  3202                           
  3203     0442                     l1908:	
  3204                           ;incstack = 0
  3205                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3206                           
  3207     0442  1283               	bcf	3,5	;RP0=0, select bank0
  3208     0443  1303               	bcf	3,6	;RP1=0, select bank0
  3209     0444  01CE               	clrf	___awmod@sign
  3210     0445                     l1910:
  3211     0445  1FCB               	btfss	___awmod@dividend+1,7
  3212     0446  2C48               	goto	u1611
  3213     0447  2C49               	goto	u1610
  3214     0448                     u1611:
  3215     0448  2C50               	goto	l1916
  3216     0449                     u1610:
  3217     0449                     l1912:
  3218     0449  09CA               	comf	___awmod@dividend,f
  3219     044A  09CB               	comf	___awmod@dividend+1,f
  3220     044B  0ACA               	incf	___awmod@dividend,f
  3221     044C  1903               	skipnz
  3222     044D  0ACB               	incf	___awmod@dividend+1,f
  3223     044E                     l1914:
  3224     044E  01CE               	clrf	___awmod@sign
  3225     044F  0ACE               	incf	___awmod@sign,f
  3226     0450                     l1916:
  3227     0450  1FC9               	btfss	___awmod@divisor+1,7
  3228     0451  2C53               	goto	u1621
  3229     0452  2C54               	goto	u1620
  3230     0453                     u1621:
  3231     0453  2C59               	goto	l1920
  3232     0454                     u1620:
  3233     0454                     l1918:
  3234     0454  09C8               	comf	___awmod@divisor,f
  3235     0455  09C9               	comf	___awmod@divisor+1,f
  3236     0456  0AC8               	incf	___awmod@divisor,f
  3237     0457  1903               	skipnz
  3238     0458  0AC9               	incf	___awmod@divisor+1,f
  3239     0459                     l1920:
  3240     0459  0848               	movf	___awmod@divisor,w
  3241     045A  0449               	iorwf	___awmod@divisor+1,w
  3242     045B  1903               	btfsc	3,2
  3243     045C  2C5E               	goto	u1631
  3244     045D  2C5F               	goto	u1630
  3245     045E                     u1631:
  3246     045E  2C8E               	goto	l1938
  3247     045F                     u1630:
  3248     045F                     l1922:
  3249     045F  01CD               	clrf	___awmod@counter
  3250     0460  0ACD               	incf	___awmod@counter,f
  3251     0461  2C6D               	goto	l1928
  3252     0462                     l1924:
  3253     0462  3001               	movlw	1
  3254     0463                     u1645:
  3255     0463  1003               	clrc
  3256     0464  0DC8               	rlf	___awmod@divisor,f
  3257     0465  0DC9               	rlf	___awmod@divisor+1,f
  3258     0466  3EFF               	addlw	-1
  3259     0467  1D03               	skipz
  3260     0468  2C63               	goto	u1645
  3261     0469                     l1926:
  3262     0469  3001               	movlw	1
  3263     046A  00CC               	movwf	??___awmod
  3264     046B  084C               	movf	??___awmod,w
  3265     046C  07CD               	addwf	___awmod@counter,f
  3266     046D                     l1928:
  3267     046D  1FC9               	btfss	___awmod@divisor+1,7
  3268     046E  2C70               	goto	u1651
  3269     046F  2C71               	goto	u1650
  3270     0470                     u1651:
  3271     0470  2C62               	goto	l1924
  3272     0471                     u1650:
  3273     0471                     l1930:
  3274     0471  0849               	movf	___awmod@divisor+1,w
  3275     0472  024B               	subwf	___awmod@dividend+1,w
  3276     0473  1D03               	skipz
  3277     0474  2C77               	goto	u1665
  3278     0475  0848               	movf	___awmod@divisor,w
  3279     0476  024A               	subwf	___awmod@dividend,w
  3280     0477                     u1665:
  3281     0477  1C03               	skipc
  3282     0478  2C7A               	goto	u1661
  3283     0479  2C7B               	goto	u1660
  3284     047A                     u1661:
  3285     047A  2C81               	goto	l1934
  3286     047B                     u1660:
  3287     047B                     l1932:
  3288     047B  0848               	movf	___awmod@divisor,w
  3289     047C  02CA               	subwf	___awmod@dividend,f
  3290     047D  0849               	movf	___awmod@divisor+1,w
  3291     047E  1C03               	skipc
  3292     047F  03CB               	decf	___awmod@dividend+1,f
  3293     0480  02CB               	subwf	___awmod@dividend+1,f
  3294     0481                     l1934:
  3295     0481  3001               	movlw	1
  3296     0482                     u1675:
  3297     0482  1003               	clrc
  3298     0483  0CC9               	rrf	___awmod@divisor+1,f
  3299     0484  0CC8               	rrf	___awmod@divisor,f
  3300     0485  3EFF               	addlw	-1
  3301     0486  1D03               	skipz
  3302     0487  2C82               	goto	u1675
  3303     0488                     l1936:
  3304     0488  3001               	movlw	1
  3305     0489  02CD               	subwf	___awmod@counter,f
  3306     048A  1D03               	btfss	3,2
  3307     048B  2C8D               	goto	u1681
  3308     048C  2C8E               	goto	u1680
  3309     048D                     u1681:
  3310     048D  2C71               	goto	l1930
  3311     048E                     u1680:
  3312     048E                     l1938:
  3313     048E  084E               	movf	___awmod@sign,w
  3314     048F  1903               	btfsc	3,2
  3315     0490  2C92               	goto	u1691
  3316     0491  2C93               	goto	u1690
  3317     0492                     u1691:
  3318     0492  2C98               	goto	l1942
  3319     0493                     u1690:
  3320     0493                     l1940:
  3321     0493  09CA               	comf	___awmod@dividend,f
  3322     0494  09CB               	comf	___awmod@dividend+1,f
  3323     0495  0ACA               	incf	___awmod@dividend,f
  3324     0496  1903               	skipnz
  3325     0497  0ACB               	incf	___awmod@dividend+1,f
  3326     0498                     l1942:
  3327     0498  084B               	movf	___awmod@dividend+1,w
  3328     0499  00C9               	movwf	?___awmod+1
  3329     049A  084A               	movf	___awmod@dividend,w
  3330     049B  00C8               	movwf	?___awmod
  3331     049C                     l531:
  3332     049C  0008               	return
  3333     049D                     __end_of___awmod:
  3334                           
  3335                           	psect	text12
  3336     06F3                     __ptext12:	
  3337 ;; *************** function _Read_Time *****************
  3338 ;; Defined at:
  3339 ;;		line 175 in file "main.c"
  3340 ;; Parameters:    Size  Location     Type
  3341 ;;  s               1    wreg     PTR unsigned char 
  3342 ;;		 -> segundo(1), 
  3343 ;;  m               1    0[BANK0 ] PTR unsigned char 
  3344 ;;		 -> minuto(1), 
  3345 ;;  h               1    1[BANK0 ] PTR unsigned char 
  3346 ;;		 -> hora(1), 
  3347 ;; Auto vars:     Size  Location     Type
  3348 ;;  s               1    2[BANK0 ] PTR unsigned char 
  3349 ;;		 -> segundo(1), 
  3350 ;; Return value:  Size  Location     Type
  3351 ;;                  1    wreg      void 
  3352 ;; Registers used:
  3353 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3354 ;; Tracked objects:
  3355 ;;		On entry : 0/0
  3356 ;;		On exit  : 0/0
  3357 ;;		Unchanged: 0/0
  3358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3359 ;;      Params:         0       2       0       0       0
  3360 ;;      Locals:         0       1       0       0       0
  3361 ;;      Temps:          0       0       0       0       0
  3362 ;;      Totals:         0       3       0       0       0
  3363 ;;Total ram usage:        3 bytes
  3364 ;; Hardware stack levels used: 1
  3365 ;; Hardware stack levels required when called: 4
  3366 ;; This function calls:
  3367 ;;		_Bcd_to_Dec
  3368 ;;		_Read
  3369 ;; This function is called by:
  3370 ;;		_main
  3371 ;; This function uses a non-reentrant model
  3372 ;;
  3373                           
  3374     06F3                     _Read_Time:	
  3375                           ;psect for function _Read_Time
  3376                           
  3377                           
  3378                           ;incstack = 0
  3379                           ; Regs used in _Read_Time: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3380                           ;Read_Time@s stored from wreg
  3381     06F3  1283               	bcf	3,5	;RP0=0, select bank0
  3382     06F4  1303               	bcf	3,6	;RP1=0, select bank0
  3383     06F5  00C5               	movwf	Read_Time@s
  3384     06F6                     l1904:
  3385                           
  3386                           ;main.c: 176:     *s = Bcd_to_Dec(Read(0x00));
  3387     06F6  0845               	movf	Read_Time@s,w
  3388     06F7  0084               	movwf	4
  3389     06F8  3000               	movlw	0
  3390     06F9  120A  118A  25CD  120A  118A  	fcall	_Read
  3391     06FE  120A  158A  27CE  120A  118A  	fcall	_Bcd_to_Dec
  3392     0703  1383               	bcf	3,7	;select IRP bank0
  3393     0704  0080               	movwf	0
  3394                           
  3395                           ;main.c: 177:     *m = Bcd_to_Dec(Read(0x01));
  3396     0705  1283               	bcf	3,5	;RP0=0, select bank0
  3397     0706  1303               	bcf	3,6	;RP1=0, select bank0
  3398     0707  0843               	movf	Read_Time@m,w
  3399     0708  0084               	movwf	4
  3400     0709  3001               	movlw	1
  3401     070A  120A  118A  25CD  120A  118A  	fcall	_Read
  3402     070F  120A  158A  27CE  120A  118A  	fcall	_Bcd_to_Dec
  3403     0714  1383               	bcf	3,7	;select IRP bank0
  3404     0715  0080               	movwf	0
  3405                           
  3406                           ;main.c: 178:     *h = Bcd_to_Dec(Read(0x02));
  3407     0716  1283               	bcf	3,5	;RP0=0, select bank0
  3408     0717  1303               	bcf	3,6	;RP1=0, select bank0
  3409     0718  0844               	movf	Read_Time@h,w
  3410     0719  0084               	movwf	4
  3411     071A  3002               	movlw	2
  3412     071B  120A  118A  25CD  120A  118A  	fcall	_Read
  3413     0720  120A  158A  27CE  120A  118A  	fcall	_Bcd_to_Dec
  3414     0725  1383               	bcf	3,7	;select IRP bank0
  3415     0726  0080               	movwf	0
  3416     0727                     l101:
  3417     0727  0008               	return
  3418     0728                     __end_of_Read_Time:
  3419                           
  3420                           	psect	text13
  3421     0728                     __ptext13:	
  3422 ;; *************** function _Read_Date *****************
  3423 ;; Defined at:
  3424 ;;		line 181 in file "main.c"
  3425 ;; Parameters:    Size  Location     Type
  3426 ;;  d               1    wreg     PTR unsigned char 
  3427 ;;		 -> dia(1), 
  3428 ;;  month           1    0[BANK0 ] PTR unsigned char 
  3429 ;;		 -> mes(1), 
  3430 ;;  y               1    1[BANK0 ] PTR unsigned char 
  3431 ;;		 -> ano(1), 
  3432 ;; Auto vars:     Size  Location     Type
  3433 ;;  d               1    2[BANK0 ] PTR unsigned char 
  3434 ;;		 -> dia(1), 
  3435 ;; Return value:  Size  Location     Type
  3436 ;;                  1    wreg      void 
  3437 ;; Registers used:
  3438 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3439 ;; Tracked objects:
  3440 ;;		On entry : 0/0
  3441 ;;		On exit  : 0/0
  3442 ;;		Unchanged: 0/0
  3443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3444 ;;      Params:         0       2       0       0       0
  3445 ;;      Locals:         0       1       0       0       0
  3446 ;;      Temps:          0       0       0       0       0
  3447 ;;      Totals:         0       3       0       0       0
  3448 ;;Total ram usage:        3 bytes
  3449 ;; Hardware stack levels used: 1
  3450 ;; Hardware stack levels required when called: 4
  3451 ;; This function calls:
  3452 ;;		_Bcd_to_Dec
  3453 ;;		_Read
  3454 ;; This function is called by:
  3455 ;;		_main
  3456 ;; This function uses a non-reentrant model
  3457 ;;
  3458                           
  3459     0728                     _Read_Date:	
  3460                           ;psect for function _Read_Date
  3461                           
  3462                           
  3463                           ;incstack = 0
  3464                           ; Regs used in _Read_Date: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3465                           ;Read_Date@d stored from wreg
  3466     0728  1283               	bcf	3,5	;RP0=0, select bank0
  3467     0729  1303               	bcf	3,6	;RP1=0, select bank0
  3468     072A  00C5               	movwf	Read_Date@d
  3469     072B                     l1906:
  3470                           
  3471                           ;main.c: 182:     *d = Bcd_to_Dec(Read(0x04));
  3472     072B  0845               	movf	Read_Date@d,w
  3473     072C  0084               	movwf	4
  3474     072D  3004               	movlw	4
  3475     072E  120A  118A  25CD  120A  118A  	fcall	_Read
  3476     0733  120A  158A  27CE  120A  118A  	fcall	_Bcd_to_Dec
  3477     0738  1383               	bcf	3,7	;select IRP bank0
  3478     0739  0080               	movwf	0
  3479                           
  3480                           ;main.c: 183:     *month = Bcd_to_Dec(Read(0x05));
  3481     073A  1283               	bcf	3,5	;RP0=0, select bank0
  3482     073B  1303               	bcf	3,6	;RP1=0, select bank0
  3483     073C  0843               	movf	Read_Date@month,w
  3484     073D  0084               	movwf	4
  3485     073E  3005               	movlw	5
  3486     073F  120A  118A  25CD  120A  118A  	fcall	_Read
  3487     0744  120A  158A  27CE  120A  118A  	fcall	_Bcd_to_Dec
  3488     0749  1383               	bcf	3,7	;select IRP bank0
  3489     074A  0080               	movwf	0
  3490                           
  3491                           ;main.c: 184:     *y = Bcd_to_Dec(Read(0x06));
  3492     074B  1283               	bcf	3,5	;RP0=0, select bank0
  3493     074C  1303               	bcf	3,6	;RP1=0, select bank0
  3494     074D  0844               	movf	Read_Date@y,w
  3495     074E  0084               	movwf	4
  3496     074F  3006               	movlw	6
  3497     0750  120A  118A  25CD  120A  118A  	fcall	_Read
  3498     0755  120A  158A  27CE  120A  118A  	fcall	_Bcd_to_Dec
  3499     075A  1383               	bcf	3,7	;select IRP bank0
  3500     075B  0080               	movwf	0
  3501     075C                     l104:
  3502     075C  0008               	return
  3503     075D                     __end_of_Read_Date:
  3504                           
  3505                           	psect	text14
  3506     05CD                     __ptext14:	
  3507 ;; *************** function _Read *****************
  3508 ;; Defined at:
  3509 ;;		line 162 in file "main.c"
  3510 ;; Parameters:    Size  Location     Type
  3511 ;;  address         1    wreg     unsigned char 
  3512 ;; Auto vars:     Size  Location     Type
  3513 ;;  address         1   10[COMMON] unsigned char 
  3514 ;;  dato            1   11[COMMON] unsigned char 
  3515 ;; Return value:  Size  Location     Type
  3516 ;;                  1    wreg      unsigned char 
  3517 ;; Registers used:
  3518 ;;		wreg, status,2, status,0, pclath, cstack
  3519 ;; Tracked objects:
  3520 ;;		On entry : 0/0
  3521 ;;		On exit  : 0/0
  3522 ;;		Unchanged: 0/0
  3523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3524 ;;      Params:         0       0       0       0       0
  3525 ;;      Locals:         2       0       0       0       0
  3526 ;;      Temps:          2       0       0       0       0
  3527 ;;      Totals:         4       0       0       0       0
  3528 ;;Total ram usage:        4 bytes
  3529 ;; Hardware stack levels used: 1
  3530 ;; Hardware stack levels required when called: 3
  3531 ;; This function calls:
  3532 ;;		_I2C_Master_Read
  3533 ;;		_I2C_Master_RepeatedStart
  3534 ;;		_I2C_Master_Start
  3535 ;;		_I2C_Master_Stop
  3536 ;;		_I2C_Master_Write
  3537 ;; This function is called by:
  3538 ;;		_Read_Time
  3539 ;;		_Read_Date
  3540 ;; This function uses a non-reentrant model
  3541 ;;
  3542                           
  3543     05CD                     _Read:	
  3544                           ;psect for function _Read
  3545                           
  3546                           
  3547                           ;incstack = 0
  3548                           ; Regs used in _Read: [wreg+status,2+status,0+pclath+cstack]
  3549                           ;Read@address stored from wreg
  3550     05CD  00FA               	movwf	Read@address
  3551     05CE                     l1570:
  3552     05CE                     l1572:
  3553                           
  3554                           ;main.c: 164:     I2C_Master_Start();
  3555     05CE  120A  158A  2772  120A  118A  	fcall	_I2C_Master_Start
  3556     05D3                     l1574:
  3557                           
  3558                           ;main.c: 165:     I2C_Master_Write(0xD0);
  3559     05D3  30D0               	movlw	208
  3560     05D4  00F2               	movwf	I2C_Master_Write@d
  3561     05D5  3000               	movlw	0
  3562     05D6  00F3               	movwf	I2C_Master_Write@d+1
  3563     05D7  120A  118A  27F4  120A  118A  	fcall	_I2C_Master_Write
  3564     05DC                     l1576:
  3565                           
  3566                           ;main.c: 166:     I2C_Master_Write(address);
  3567     05DC  087A               	movf	Read@address,w
  3568     05DD  00F8               	movwf	??_Read
  3569     05DE  01F9               	clrf	??_Read+1
  3570     05DF  0878               	movf	??_Read,w
  3571     05E0  00F2               	movwf	I2C_Master_Write@d
  3572     05E1  0879               	movf	??_Read+1,w
  3573     05E2  00F3               	movwf	I2C_Master_Write@d+1
  3574     05E3  120A  118A  27F4  120A  118A  	fcall	_I2C_Master_Write
  3575     05E8                     l1578:
  3576                           
  3577                           ;main.c: 167:     I2C_Master_RepeatedStart();
  3578     05E8  120A  158A  2769  120A  118A  	fcall	_I2C_Master_RepeatedStart
  3579     05ED                     l1580:
  3580                           
  3581                           ;main.c: 168:     I2C_Master_Write(0xD1);
  3582     05ED  30D1               	movlw	209
  3583     05EE  00F2               	movwf	I2C_Master_Write@d
  3584     05EF  3000               	movlw	0
  3585     05F0  00F3               	movwf	I2C_Master_Write@d+1
  3586     05F1  120A  118A  27F4  120A  118A  	fcall	_I2C_Master_Write
  3587     05F6                     l1582:
  3588                           
  3589                           ;main.c: 169:     dato = I2C_Master_Read(0);
  3590     05F6  3000               	movlw	0
  3591     05F7  00F2               	movwf	I2C_Master_Read@a
  3592     05F8  00F3               	movwf	I2C_Master_Read@a+1
  3593     05F9  120A  118A  275D  120A  118A  	fcall	_I2C_Master_Read
  3594     05FE  0872               	movf	?_I2C_Master_Read,w
  3595     05FF  00FB               	movwf	Read@dato
  3596     0600                     l1584:
  3597                           
  3598                           ;main.c: 170:     I2C_Master_Stop();
  3599     0600  120A  158A  277B  120A  118A  	fcall	_I2C_Master_Stop
  3600     0605                     l1586:
  3601                           
  3602                           ;main.c: 171:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  3603     0605  3006               	movlw	6
  3604     0606  00F8               	movwf	??_Read
  3605     0607                     u1717:
  3606     0607  0BF8               	decfsz	??_Read,f
  3607     0608  2E07               	goto	u1717
  3608     0609  0000               	nop
  3609     060A                     l1588:
  3610                           
  3611                           ;main.c: 172:     return dato;
  3612     060A  087B               	movf	Read@dato,w
  3613     060B                     l98:
  3614     060B  0008               	return
  3615     060C                     __end_of_Read:
  3616                           
  3617                           	psect	text15
  3618     07F4                     __ptext15:	
  3619 ;; *************** function _I2C_Master_Write *****************
  3620 ;; Defined at:
  3621 ;;		line 65 in file "I2C.c"
  3622 ;; Parameters:    Size  Location     Type
  3623 ;;  d               2    2[COMMON] unsigned int 
  3624 ;; Auto vars:     Size  Location     Type
  3625 ;;		None
  3626 ;; Return value:  Size  Location     Type
  3627 ;;                  1    wreg      void 
  3628 ;; Registers used:
  3629 ;;		wreg, status,2, status,0, pclath, cstack
  3630 ;; Tracked objects:
  3631 ;;		On entry : 0/0
  3632 ;;		On exit  : 0/0
  3633 ;;		Unchanged: 0/0
  3634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3635 ;;      Params:         2       0       0       0       0
  3636 ;;      Locals:         0       0       0       0       0
  3637 ;;      Temps:          0       0       0       0       0
  3638 ;;      Totals:         2       0       0       0       0
  3639 ;;Total ram usage:        2 bytes
  3640 ;; Hardware stack levels used: 1
  3641 ;; Hardware stack levels required when called: 2
  3642 ;; This function calls:
  3643 ;;		_I2C_Master_Wait
  3644 ;; This function is called by:
  3645 ;;		_main
  3646 ;;		_Read
  3647 ;; This function uses a non-reentrant model
  3648 ;;
  3649                           
  3650     07F4                     _I2C_Master_Write:	
  3651                           ;psect for function _I2C_Master_Write
  3652                           
  3653     07F4                     l1474:	
  3654                           ;incstack = 0
  3655                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3656                           
  3657                           
  3658                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  3659     07F4  120A  118A  24EF  120A  118A  	fcall	_I2C_Master_Wait
  3660     07F9                     l1476:
  3661                           
  3662                           ;I2C.c: 68:     SSPBUF = d;
  3663     07F9  0872               	movf	I2C_Master_Write@d,w
  3664     07FA  1283               	bcf	3,5	;RP0=0, select bank0
  3665     07FB  1303               	bcf	3,6	;RP1=0, select bank0
  3666     07FC  0093               	movwf	19	;volatile
  3667     07FD                     l162:
  3668     07FD  0008               	return
  3669     07FE                     __end_of_I2C_Master_Write:
  3670                           
  3671                           	psect	text16
  3672     0F7B                     __ptext16:	
  3673 ;; *************** function _I2C_Master_Stop *****************
  3674 ;; Defined at:
  3675 ;;		line 55 in file "I2C.c"
  3676 ;; Parameters:    Size  Location     Type
  3677 ;;		None
  3678 ;; Auto vars:     Size  Location     Type
  3679 ;;		None
  3680 ;; Return value:  Size  Location     Type
  3681 ;;                  1    wreg      void 
  3682 ;; Registers used:
  3683 ;;		wreg, status,2, status,0, pclath, cstack
  3684 ;; Tracked objects:
  3685 ;;		On entry : 0/0
  3686 ;;		On exit  : 0/0
  3687 ;;		Unchanged: 0/0
  3688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3689 ;;      Params:         0       0       0       0       0
  3690 ;;      Locals:         0       0       0       0       0
  3691 ;;      Temps:          0       0       0       0       0
  3692 ;;      Totals:         0       0       0       0       0
  3693 ;;Total ram usage:        0 bytes
  3694 ;; Hardware stack levels used: 1
  3695 ;; Hardware stack levels required when called: 2
  3696 ;; This function calls:
  3697 ;;		_I2C_Master_Wait
  3698 ;; This function is called by:
  3699 ;;		_main
  3700 ;;		_Read
  3701 ;; This function uses a non-reentrant model
  3702 ;;
  3703                           
  3704     0F7B                     _I2C_Master_Stop:	
  3705                           ;psect for function _I2C_Master_Stop
  3706                           
  3707     0F7B                     l1494:	
  3708                           ;incstack = 0
  3709                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3710                           
  3711                           
  3712                           ;I2C.c: 57:     I2C_Master_Wait();
  3713     0F7B  120A  118A  24EF  120A  158A  	fcall	_I2C_Master_Wait
  3714     0F80                     l1496:
  3715                           
  3716                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  3717     0F80  1683               	bsf	3,5	;RP0=1, select bank1
  3718     0F81  1303               	bcf	3,6	;RP1=0, select bank1
  3719     0F82  1511               	bsf	17,2	;volatile
  3720     0F83                     l159:
  3721     0F83  0008               	return
  3722     0F84                     __end_of_I2C_Master_Stop:
  3723                           
  3724                           	psect	text17
  3725     0F72                     __ptext17:	
  3726 ;; *************** function _I2C_Master_Start *****************
  3727 ;; Defined at:
  3728 ;;		line 39 in file "I2C.c"
  3729 ;; Parameters:    Size  Location     Type
  3730 ;;		None
  3731 ;; Auto vars:     Size  Location     Type
  3732 ;;		None
  3733 ;; Return value:  Size  Location     Type
  3734 ;;                  1    wreg      void 
  3735 ;; Registers used:
  3736 ;;		wreg, status,2, status,0, pclath, cstack
  3737 ;; Tracked objects:
  3738 ;;		On entry : 0/0
  3739 ;;		On exit  : 0/0
  3740 ;;		Unchanged: 0/0
  3741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3742 ;;      Params:         0       0       0       0       0
  3743 ;;      Locals:         0       0       0       0       0
  3744 ;;      Temps:          0       0       0       0       0
  3745 ;;      Totals:         0       0       0       0       0
  3746 ;;Total ram usage:        0 bytes
  3747 ;; Hardware stack levels used: 1
  3748 ;; Hardware stack levels required when called: 2
  3749 ;; This function calls:
  3750 ;;		_I2C_Master_Wait
  3751 ;; This function is called by:
  3752 ;;		_main
  3753 ;;		_Read
  3754 ;; This function uses a non-reentrant model
  3755 ;;
  3756                           
  3757     0F72                     _I2C_Master_Start:	
  3758                           ;psect for function _I2C_Master_Start
  3759                           
  3760     0F72                     l1470:	
  3761                           ;incstack = 0
  3762                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3763                           
  3764                           
  3765                           ;I2C.c: 41:     I2C_Master_Wait();
  3766     0F72  120A  118A  24EF  120A  158A  	fcall	_I2C_Master_Wait
  3767     0F77                     l1472:
  3768                           
  3769                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  3770     0F77  1683               	bsf	3,5	;RP0=1, select bank1
  3771     0F78  1303               	bcf	3,6	;RP1=0, select bank1
  3772     0F79  1411               	bsf	17,0	;volatile
  3773     0F7A                     l153:
  3774     0F7A  0008               	return
  3775     0F7B                     __end_of_I2C_Master_Start:
  3776                           
  3777                           	psect	text18
  3778     0F69                     __ptext18:	
  3779 ;; *************** function _I2C_Master_RepeatedStart *****************
  3780 ;; Defined at:
  3781 ;;		line 47 in file "I2C.c"
  3782 ;; Parameters:    Size  Location     Type
  3783 ;;		None
  3784 ;; Auto vars:     Size  Location     Type
  3785 ;;		None
  3786 ;; Return value:  Size  Location     Type
  3787 ;;                  1    wreg      void 
  3788 ;; Registers used:
  3789 ;;		wreg, status,2, status,0, pclath, cstack
  3790 ;; Tracked objects:
  3791 ;;		On entry : 0/0
  3792 ;;		On exit  : 0/0
  3793 ;;		Unchanged: 0/0
  3794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3795 ;;      Params:         0       0       0       0       0
  3796 ;;      Locals:         0       0       0       0       0
  3797 ;;      Temps:          0       0       0       0       0
  3798 ;;      Totals:         0       0       0       0       0
  3799 ;;Total ram usage:        0 bytes
  3800 ;; Hardware stack levels used: 1
  3801 ;; Hardware stack levels required when called: 2
  3802 ;; This function calls:
  3803 ;;		_I2C_Master_Wait
  3804 ;; This function is called by:
  3805 ;;		_Read
  3806 ;; This function uses a non-reentrant model
  3807 ;;
  3808                           
  3809     0F69                     _I2C_Master_RepeatedStart:	
  3810                           ;psect for function _I2C_Master_RepeatedStart
  3811                           
  3812     0F69                     l1498:	
  3813                           ;incstack = 0
  3814                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  3815                           
  3816                           
  3817                           ;I2C.c: 49:     I2C_Master_Wait();
  3818     0F69  120A  118A  24EF  120A  158A  	fcall	_I2C_Master_Wait
  3819     0F6E                     l1500:
  3820                           
  3821                           ;I2C.c: 50:     SSPCON2bits.RSEN = 1;
  3822     0F6E  1683               	bsf	3,5	;RP0=1, select bank1
  3823     0F6F  1303               	bcf	3,6	;RP1=0, select bank1
  3824     0F70  1491               	bsf	17,1	;volatile
  3825     0F71                     l156:
  3826     0F71  0008               	return
  3827     0F72                     __end_of_I2C_Master_RepeatedStart:
  3828                           
  3829                           	psect	text19
  3830     075D                     __ptext19:	
  3831 ;; *************** function _I2C_Master_Read *****************
  3832 ;; Defined at:
  3833 ;;		line 74 in file "I2C.c"
  3834 ;; Parameters:    Size  Location     Type
  3835 ;;  a               2    2[COMMON] unsigned short 
  3836 ;; Auto vars:     Size  Location     Type
  3837 ;;  temp            2    6[COMMON] unsigned short 
  3838 ;; Return value:  Size  Location     Type
  3839 ;;                  2    2[COMMON] unsigned short 
  3840 ;; Registers used:
  3841 ;;		wreg, status,2, status,0, pclath, cstack
  3842 ;; Tracked objects:
  3843 ;;		On entry : 0/0
  3844 ;;		On exit  : 0/0
  3845 ;;		Unchanged: 0/0
  3846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3847 ;;      Params:         2       0       0       0       0
  3848 ;;      Locals:         2       0       0       0       0
  3849 ;;      Temps:          2       0       0       0       0
  3850 ;;      Totals:         6       0       0       0       0
  3851 ;;Total ram usage:        6 bytes
  3852 ;; Hardware stack levels used: 1
  3853 ;; Hardware stack levels required when called: 2
  3854 ;; This function calls:
  3855 ;;		_I2C_Master_Wait
  3856 ;; This function is called by:
  3857 ;;		_main
  3858 ;;		_Read
  3859 ;; This function uses a non-reentrant model
  3860 ;;
  3861                           
  3862     075D                     _I2C_Master_Read:	
  3863                           ;psect for function _I2C_Master_Read
  3864                           
  3865     075D                     l1478:	
  3866                           ;incstack = 0
  3867                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3868                           
  3869                           
  3870                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  3871     075D  120A  118A  24EF  120A  118A  	fcall	_I2C_Master_Wait
  3872     0762                     l1480:
  3873                           
  3874                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  3875     0762  1683               	bsf	3,5	;RP0=1, select bank1
  3876     0763  1303               	bcf	3,6	;RP1=0, select bank1
  3877     0764  1591               	bsf	17,3	;volatile
  3878                           
  3879                           ;I2C.c: 79:     I2C_Master_Wait();
  3880     0765  120A  118A  24EF  120A  118A  	fcall	_I2C_Master_Wait
  3881     076A                     l1482:
  3882                           
  3883                           ;I2C.c: 80:     temp = SSPBUF;
  3884     076A  1283               	bcf	3,5	;RP0=0, select bank0
  3885     076B  1303               	bcf	3,6	;RP1=0, select bank0
  3886     076C  0813               	movf	19,w	;volatile
  3887     076D  00F4               	movwf	??_I2C_Master_Read
  3888     076E  01F5               	clrf	??_I2C_Master_Read+1
  3889     076F  0874               	movf	??_I2C_Master_Read,w
  3890     0770  00F6               	movwf	I2C_Master_Read@temp
  3891     0771  0875               	movf	??_I2C_Master_Read+1,w
  3892     0772  00F7               	movwf	I2C_Master_Read@temp+1
  3893     0773                     l1484:
  3894                           
  3895                           ;I2C.c: 81:     I2C_Master_Wait();
  3896     0773  120A  118A  24EF  120A  118A  	fcall	_I2C_Master_Wait
  3897     0778                     l1486:
  3898                           
  3899                           ;I2C.c: 82:     if(a == 1){
  3900     0778  0372               	decf	I2C_Master_Read@a,w
  3901     0779  0473               	iorwf	I2C_Master_Read@a+1,w
  3902     077A  1D03               	btfss	3,2
  3903     077B  2F7D               	goto	u881
  3904     077C  2F7E               	goto	u880
  3905     077D                     u881:
  3906     077D  2F82               	goto	l165
  3907     077E                     u880:
  3908     077E                     l1488:
  3909                           
  3910                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  3911     077E  1683               	bsf	3,5	;RP0=1, select bank1
  3912     077F  1303               	bcf	3,6	;RP1=0, select bank1
  3913     0780  1291               	bcf	17,5	;volatile
  3914                           
  3915                           ;I2C.c: 84:     }else{
  3916     0781  2F85               	goto	l166
  3917     0782                     l165:
  3918                           
  3919                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  3920     0782  1683               	bsf	3,5	;RP0=1, select bank1
  3921     0783  1303               	bcf	3,6	;RP1=0, select bank1
  3922     0784  1691               	bsf	17,5	;volatile
  3923     0785                     l166:	
  3924                           ;I2C.c: 86:     }
  3925                           
  3926                           
  3927                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  3928     0785  1611               	bsf	17,4	;volatile
  3929     0786                     l1490:
  3930                           
  3931                           ;I2C.c: 88:     return temp;
  3932     0786  0877               	movf	I2C_Master_Read@temp+1,w
  3933     0787  00F3               	movwf	?_I2C_Master_Read+1
  3934     0788  0876               	movf	I2C_Master_Read@temp,w
  3935     0789  00F2               	movwf	?_I2C_Master_Read
  3936     078A                     l167:
  3937     078A  0008               	return
  3938     078B                     __end_of_I2C_Master_Read:
  3939                           
  3940                           	psect	text20
  3941     04EF                     __ptext20:	
  3942 ;; *************** function _I2C_Master_Wait *****************
  3943 ;; Defined at:
  3944 ;;		line 32 in file "I2C.c"
  3945 ;; Parameters:    Size  Location     Type
  3946 ;;		None
  3947 ;; Auto vars:     Size  Location     Type
  3948 ;;		None
  3949 ;; Return value:  Size  Location     Type
  3950 ;;                  1    wreg      void 
  3951 ;; Registers used:
  3952 ;;		wreg, status,2
  3953 ;; Tracked objects:
  3954 ;;		On entry : 0/0
  3955 ;;		On exit  : 0/0
  3956 ;;		Unchanged: 0/0
  3957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3958 ;;      Params:         0       0       0       0       0
  3959 ;;      Locals:         0       0       0       0       0
  3960 ;;      Temps:          0       0       0       0       0
  3961 ;;      Totals:         0       0       0       0       0
  3962 ;;Total ram usage:        0 bytes
  3963 ;; Hardware stack levels used: 1
  3964 ;; Hardware stack levels required when called: 1
  3965 ;; This function calls:
  3966 ;;		Nothing
  3967 ;; This function is called by:
  3968 ;;		_I2C_Master_Start
  3969 ;;		_I2C_Master_RepeatedStart
  3970 ;;		_I2C_Master_Stop
  3971 ;;		_I2C_Master_Write
  3972 ;;		_I2C_Master_Read
  3973 ;; This function uses a non-reentrant model
  3974 ;;
  3975                           
  3976     04EF                     _I2C_Master_Wait:	
  3977                           ;psect for function _I2C_Master_Wait
  3978                           
  3979     04EF                     l1466:	
  3980                           ;incstack = 0
  3981                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3982                           
  3983     04EF                     l147:	
  3984                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3985                           
  3986     04EF  1683               	bsf	3,5	;RP0=1, select bank1
  3987     04F0  1303               	bcf	3,6	;RP1=0, select bank1
  3988     04F1  1914               	btfsc	20,2	;volatile
  3989     04F2  2CF4               	goto	u861
  3990     04F3  2CF5               	goto	u860
  3991     04F4                     u861:
  3992     04F4  2CEF               	goto	l147
  3993     04F5                     u860:
  3994     04F5                     l1468:
  3995     04F5  0811               	movf	17,w	;volatile
  3996     04F6  391F               	andlw	31
  3997     04F7  1D03               	btfss	3,2
  3998     04F8  2CFA               	goto	u871
  3999     04F9  2CFB               	goto	u870
  4000     04FA                     u871:
  4001     04FA  2CEF               	goto	l147
  4002     04FB                     u870:
  4003     04FB                     l150:
  4004     04FB  0008               	return
  4005     04FC                     __end_of_I2C_Master_Wait:
  4006                           
  4007                           	psect	text21
  4008     0FCE                     __ptext21:	
  4009 ;; *************** function _Bcd_to_Dec *****************
  4010 ;; Defined at:
  4011 ;;		line 203 in file "main.c"
  4012 ;; Parameters:    Size  Location     Type
  4013 ;;  bcd             1    wreg     unsigned char 
  4014 ;; Auto vars:     Size  Location     Type
  4015 ;;  bcd             1    9[COMMON] unsigned char 
  4016 ;;  dec             1    8[COMMON] unsigned char 
  4017 ;; Return value:  Size  Location     Type
  4018 ;;                  1    wreg      unsigned char 
  4019 ;; Registers used:
  4020 ;;		wreg, status,2, status,0, pclath, cstack
  4021 ;; Tracked objects:
  4022 ;;		On entry : 0/0
  4023 ;;		On exit  : 0/0
  4024 ;;		Unchanged: 0/0
  4025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4026 ;;      Params:         0       0       0       0       0
  4027 ;;      Locals:         2       0       0       0       0
  4028 ;;      Temps:          2       0       0       0       0
  4029 ;;      Totals:         4       0       0       0       0
  4030 ;;Total ram usage:        4 bytes
  4031 ;; Hardware stack levels used: 1
  4032 ;; Hardware stack levels required when called: 2
  4033 ;; This function calls:
  4034 ;;		___bmul
  4035 ;; This function is called by:
  4036 ;;		_Read_Time
  4037 ;;		_Read_Date
  4038 ;; This function uses a non-reentrant model
  4039 ;;
  4040                           
  4041     0FCE                     _Bcd_to_Dec:	
  4042                           ;psect for function _Bcd_to_Dec
  4043                           
  4044                           
  4045                           ;incstack = 0
  4046                           ; Regs used in _Bcd_to_Dec: [wreg+status,2+status,0+pclath+cstack]
  4047                           ;Bcd_to_Dec@bcd stored from wreg
  4048     0FCE  00F9               	movwf	Bcd_to_Dec@bcd
  4049     0FCF                     l1592:
  4050                           
  4051                           ;main.c: 204:     uint8_t dec;;main.c: 205:     dec = ((bcd>>4)*10)+(bcd & 0b00001111);
  4052     0FCF  300F               	movlw	15
  4053     0FD0  0579               	andwf	Bcd_to_Dec@bcd,w
  4054     0FD1  00F6               	movwf	??_Bcd_to_Dec
  4055     0FD2  300A               	movlw	10
  4056     0FD3  00F2               	movwf	___bmul@multiplicand
  4057     0FD4  0879               	movf	Bcd_to_Dec@bcd,w
  4058     0FD5  00F7               	movwf	??_Bcd_to_Dec+1
  4059     0FD6  3004               	movlw	4
  4060     0FD7                     u1075:
  4061     0FD7  1003               	clrc
  4062     0FD8  0CF7               	rrf	??_Bcd_to_Dec+1,f
  4063     0FD9  3EFF               	addlw	-1
  4064     0FDA  1D03               	skipz
  4065     0FDB  2FD7               	goto	u1075
  4066     0FDC  0877               	movf	??_Bcd_to_Dec+1,w
  4067     0FDD  120A  158A  27A3  120A  158A  	fcall	___bmul
  4068     0FE2  0776               	addwf	??_Bcd_to_Dec,w
  4069     0FE3  00F8               	movwf	Bcd_to_Dec@dec
  4070     0FE4                     l1594:
  4071                           
  4072                           ;main.c: 206:     return dec;
  4073     0FE4  0878               	movf	Bcd_to_Dec@dec,w
  4074     0FE5                     l115:
  4075     0FE5  0008               	return
  4076     0FE6                     __end_of_Bcd_to_Dec:
  4077                           
  4078                           	psect	text22
  4079     0FA3                     __ptext22:	
  4080 ;; *************** function ___bmul *****************
  4081 ;; Defined at:
  4082 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8.c"
  4083 ;; Parameters:    Size  Location     Type
  4084 ;;  multiplier      1    wreg     unsigned char 
  4085 ;;  multiplicand    1    2[COMMON] unsigned char 
  4086 ;; Auto vars:     Size  Location     Type
  4087 ;;  multiplier      1    5[COMMON] unsigned char 
  4088 ;;  product         1    4[COMMON] unsigned char 
  4089 ;; Return value:  Size  Location     Type
  4090 ;;                  1    wreg      unsigned char 
  4091 ;; Registers used:
  4092 ;;		wreg, status,2, status,0
  4093 ;; Tracked objects:
  4094 ;;		On entry : 0/0
  4095 ;;		On exit  : 0/0
  4096 ;;		Unchanged: 0/0
  4097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4098 ;;      Params:         1       0       0       0       0
  4099 ;;      Locals:         2       0       0       0       0
  4100 ;;      Temps:          1       0       0       0       0
  4101 ;;      Totals:         4       0       0       0       0
  4102 ;;Total ram usage:        4 bytes
  4103 ;; Hardware stack levels used: 1
  4104 ;; Hardware stack levels required when called: 1
  4105 ;; This function calls:
  4106 ;;		Nothing
  4107 ;; This function is called by:
  4108 ;;		_Bcd_to_Dec
  4109 ;; This function uses a non-reentrant model
  4110 ;;
  4111                           
  4112     0FA3                     ___bmul:	
  4113                           ;psect for function ___bmul
  4114                           
  4115                           
  4116                           ;incstack = 0
  4117                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4118                           ;___bmul@multiplier stored from wreg
  4119     0FA3  00F5               	movwf	___bmul@multiplier
  4120     0FA4                     l1520:
  4121     0FA4  01F4               	clrf	___bmul@product
  4122     0FA5                     l1522:
  4123     0FA5  1C75               	btfss	___bmul@multiplier,0
  4124     0FA6  2FA8               	goto	u971
  4125     0FA7  2FA9               	goto	u970
  4126     0FA8                     u971:
  4127     0FA8  2FAD               	goto	l1526
  4128     0FA9                     u970:
  4129     0FA9                     l1524:
  4130     0FA9  0872               	movf	___bmul@multiplicand,w
  4131     0FAA  00F3               	movwf	??___bmul
  4132     0FAB  0873               	movf	??___bmul,w
  4133     0FAC  07F4               	addwf	___bmul@product,f
  4134     0FAD                     l1526:
  4135     0FAD  1003               	clrc
  4136     0FAE  0DF2               	rlf	___bmul@multiplicand,f
  4137     0FAF                     l1528:
  4138     0FAF  1003               	clrc
  4139     0FB0  0CF5               	rrf	___bmul@multiplier,f
  4140     0FB1  0875               	movf	___bmul@multiplier,w
  4141     0FB2  1D03               	btfss	3,2
  4142     0FB3  2FB5               	goto	u981
  4143     0FB4  2FB6               	goto	u980
  4144     0FB5                     u981:
  4145     0FB5  2FA5               	goto	l1522
  4146     0FB6                     u980:
  4147     0FB6                     l1530:
  4148     0FB6  0874               	movf	___bmul@product,w
  4149     0FB7                     l391:
  4150     0FB7  0008               	return
  4151     0FB8                     __end_of___bmul:
  4152                           
  4153                           	psect	text23
  4154     058B                     __ptext23:	
  4155 ;; *************** function _Lcd_Write_String *****************
  4156 ;; Defined at:
  4157 ;;		line 103 in file "LCD.c"
  4158 ;; Parameters:    Size  Location     Type
  4159 ;;  a               2    5[COMMON] PTR unsigned char 
  4160 ;;		 -> buffer(20), STR_1(4), 
  4161 ;; Auto vars:     Size  Location     Type
  4162 ;;  i               2   10[COMMON] int 
  4163 ;; Return value:  Size  Location     Type
  4164 ;;                  1    wreg      void 
  4165 ;; Registers used:
  4166 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4167 ;; Tracked objects:
  4168 ;;		On entry : 0/0
  4169 ;;		On exit  : 0/0
  4170 ;;		Unchanged: 0/0
  4171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4172 ;;      Params:         2       0       0       0       0
  4173 ;;      Locals:         2       0       0       0       0
  4174 ;;      Temps:          3       0       0       0       0
  4175 ;;      Totals:         7       0       0       0       0
  4176 ;;Total ram usage:        7 bytes
  4177 ;; Hardware stack levels used: 1
  4178 ;; Hardware stack levels required when called: 3
  4179 ;; This function calls:
  4180 ;;		_Lcd_Write_Char
  4181 ;; This function is called by:
  4182 ;;		_main
  4183 ;; This function uses a non-reentrant model
  4184 ;;
  4185                           
  4186     058B                     _Lcd_Write_String:	
  4187                           ;psect for function _Lcd_Write_String
  4188                           
  4189     058B                     l1774:	
  4190                           ;incstack = 0
  4191                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4192                           
  4193                           
  4194                           ;LCD.c: 104:     int i;;LCD.c: 105:     for (i = 0; a[i] != '\0'; i++)
  4195     058B  01FA               	clrf	Lcd_Write_String@i
  4196     058C  01FB               	clrf	Lcd_Write_String@i+1
  4197     058D  2DB0               	goto	l1780
  4198     058E                     l1776:
  4199                           
  4200                           ;LCD.c: 106:         Lcd_Write_Char(a[i]);
  4201     058E  087A               	movf	Lcd_Write_String@i,w
  4202     058F  0775               	addwf	Lcd_Write_String@a,w
  4203     0590  00F8               	movwf	??_Lcd_Write_String+1
  4204     0591  0876               	movf	Lcd_Write_String@a+1,w
  4205     0592  00F7               	movwf	??_Lcd_Write_String
  4206     0593  1803               	skipnc
  4207     0594  0AF7               	incf	??_Lcd_Write_String,f
  4208     0595  1FFA               	btfss	Lcd_Write_String@i,7
  4209     0596  2D98               	goto	u1390
  4210     0597  03F7               	decf	??_Lcd_Write_String,f
  4211     0598                     u1390:
  4212     0598  0877               	movf	??_Lcd_Write_String,w
  4213     0599  00F9               	movwf	??_Lcd_Write_String+2
  4214     059A  0879               	movf	??_Lcd_Write_String+2,w
  4215     059B  1283               	bcf	3,5	;RP0=0, select bank0
  4216     059C  1303               	bcf	3,6	;RP1=0, select bank0
  4217     059D  00FF               	movwf	btemp+1
  4218     059E  0878               	movf	??_Lcd_Write_String+1,w
  4219     059F  0084               	movwf	4
  4220     05A0  120A  118A  2500  120A  118A  	fcall	stringtab
  4221     05A5  120A  158A  27B8  120A  118A  	fcall	_Lcd_Write_Char
  4222     05AA                     l1778:
  4223     05AA  3001               	movlw	1
  4224     05AB  07FA               	addwf	Lcd_Write_String@i,f
  4225     05AC  1803               	skipnc
  4226     05AD  0AFB               	incf	Lcd_Write_String@i+1,f
  4227     05AE  3000               	movlw	0
  4228     05AF  07FB               	addwf	Lcd_Write_String@i+1,f
  4229     05B0                     l1780:
  4230     05B0  087A               	movf	Lcd_Write_String@i,w
  4231     05B1  0775               	addwf	Lcd_Write_String@a,w
  4232     05B2  00F8               	movwf	??_Lcd_Write_String+1
  4233     05B3  0876               	movf	Lcd_Write_String@a+1,w
  4234     05B4  00F7               	movwf	??_Lcd_Write_String
  4235     05B5  1803               	skipnc
  4236     05B6  0AF7               	incf	??_Lcd_Write_String,f
  4237     05B7  1FFA               	btfss	Lcd_Write_String@i,7
  4238     05B8  2DBA               	goto	u1400
  4239     05B9  03F7               	decf	??_Lcd_Write_String,f
  4240     05BA                     u1400:
  4241     05BA  0877               	movf	??_Lcd_Write_String,w
  4242     05BB  00F9               	movwf	??_Lcd_Write_String+2
  4243     05BC  0879               	movf	??_Lcd_Write_String+2,w
  4244     05BD  1283               	bcf	3,5	;RP0=0, select bank0
  4245     05BE  1303               	bcf	3,6	;RP1=0, select bank0
  4246     05BF  00FF               	movwf	btemp+1
  4247     05C0  0878               	movf	??_Lcd_Write_String+1,w
  4248     05C1  0084               	movwf	4
  4249     05C2  120A  118A  2500  120A  118A  	fcall	stringtab
  4250     05C7  3A00               	xorlw	0
  4251     05C8  1D03               	skipz
  4252     05C9  2DCB               	goto	u1411
  4253     05CA  2DCC               	goto	u1410
  4254     05CB                     u1411:
  4255     05CB  2D8E               	goto	l1776
  4256     05CC                     u1410:
  4257     05CC                     l219:
  4258     05CC  0008               	return
  4259     05CD                     __end_of_Lcd_Write_String:
  4260                           
  4261                           	psect	text24
  4262     0FB8                     __ptext24:	
  4263 ;; *************** function _Lcd_Write_Char *****************
  4264 ;; Defined at:
  4265 ;;		line 95 in file "LCD.c"
  4266 ;; Parameters:    Size  Location     Type
  4267 ;;  a               1    wreg     unsigned char 
  4268 ;; Auto vars:     Size  Location     Type
  4269 ;;  a               1    4[COMMON] unsigned char 
  4270 ;; Return value:  Size  Location     Type
  4271 ;;                  1    wreg      void 
  4272 ;; Registers used:
  4273 ;;		wreg, status,2, status,0, pclath, cstack
  4274 ;; Tracked objects:
  4275 ;;		On entry : 0/0
  4276 ;;		On exit  : 0/0
  4277 ;;		Unchanged: 0/0
  4278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4279 ;;      Params:         0       0       0       0       0
  4280 ;;      Locals:         1       0       0       0       0
  4281 ;;      Temps:          1       0       0       0       0
  4282 ;;      Totals:         2       0       0       0       0
  4283 ;;Total ram usage:        2 bytes
  4284 ;; Hardware stack levels used: 1
  4285 ;; Hardware stack levels required when called: 2
  4286 ;; This function calls:
  4287 ;;		_Lcd_Port
  4288 ;; This function is called by:
  4289 ;;		_Lcd_Write_String
  4290 ;; This function uses a non-reentrant model
  4291 ;;
  4292                           
  4293     0FB8                     _Lcd_Write_Char:	
  4294                           ;psect for function _Lcd_Write_Char
  4295                           
  4296                           
  4297                           ;incstack = 0
  4298                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  4299                           ;Lcd_Write_Char@a stored from wreg
  4300     0FB8  00F4               	movwf	Lcd_Write_Char@a
  4301     0FB9                     l1608:
  4302                           
  4303                           ;LCD.c: 96:     PORTBbits.RB0 = 1;
  4304     0FB9  1283               	bcf	3,5	;RP0=0, select bank0
  4305     0FBA  1303               	bcf	3,6	;RP1=0, select bank0
  4306     0FBB  1406               	bsf	6,0	;volatile
  4307     0FBC                     l1610:
  4308                           
  4309                           ;LCD.c: 97:     Lcd_Port(a);
  4310     0FBC  0874               	movf	Lcd_Write_Char@a,w
  4311     0FBD  120A  118A  260C  120A  158A  	fcall	_Lcd_Port
  4312     0FC2                     l1612:
  4313                           
  4314                           ;LCD.c: 98:     PORTBbits.RB1 = 1;
  4315     0FC2  1283               	bcf	3,5	;RP0=0, select bank0
  4316     0FC3  1303               	bcf	3,6	;RP1=0, select bank0
  4317     0FC4  1486               	bsf	6,1	;volatile
  4318     0FC5                     l1614:
  4319                           
  4320                           ;LCD.c: 99:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  4321     0FC5  301A               	movlw	26
  4322     0FC6  00F3               	movwf	??_Lcd_Write_Char
  4323     0FC7                     u1727:
  4324     0FC7  0BF3               	decfsz	??_Lcd_Write_Char,f
  4325     0FC8  2FC7               	goto	u1727
  4326     0FC9  0000               	nop
  4327     0FCA                     l1616:
  4328                           
  4329                           ;LCD.c: 100:     PORTBbits.RB1 = 0;
  4330     0FCA  1283               	bcf	3,5	;RP0=0, select bank0
  4331     0FCB  1303               	bcf	3,6	;RP1=0, select bank0
  4332     0FCC  1086               	bcf	6,1	;volatile
  4333     0FCD                     l213:
  4334     0FCD  0008               	return
  4335     0FCE                     __end_of_Lcd_Write_Char:
  4336                           
  4337                           	psect	text25
  4338     07D4                     __ptext25:	
  4339 ;; *************** function _Lcd_Set_Cursor *****************
  4340 ;; Defined at:
  4341 ;;		line 68 in file "LCD.c"
  4342 ;; Parameters:    Size  Location     Type
  4343 ;;  a               1    wreg     unsigned char 
  4344 ;;  b               1    6[COMMON] unsigned char 
  4345 ;; Auto vars:     Size  Location     Type
  4346 ;;  a               1    7[COMMON] unsigned char 
  4347 ;;  temp            1    8[COMMON] unsigned char 
  4348 ;;  y               1    0        unsigned char 
  4349 ;;  z               1    0        unsigned char 
  4350 ;; Return value:  Size  Location     Type
  4351 ;;                  1    wreg      void 
  4352 ;; Registers used:
  4353 ;;		wreg, status,2, status,0, pclath, cstack
  4354 ;; Tracked objects:
  4355 ;;		On entry : 0/0
  4356 ;;		On exit  : 0/0
  4357 ;;		Unchanged: 0/0
  4358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4359 ;;      Params:         1       0       0       0       0
  4360 ;;      Locals:         2       0       0       0       0
  4361 ;;      Temps:          0       0       0       0       0
  4362 ;;      Totals:         3       0       0       0       0
  4363 ;;Total ram usage:        3 bytes
  4364 ;; Hardware stack levels used: 1
  4365 ;; Hardware stack levels required when called: 3
  4366 ;; This function calls:
  4367 ;;		_Lcd_Cmd
  4368 ;; This function is called by:
  4369 ;;		_main
  4370 ;; This function uses a non-reentrant model
  4371 ;;
  4372                           
  4373     07D4                     _Lcd_Set_Cursor:	
  4374                           ;psect for function _Lcd_Set_Cursor
  4375                           
  4376                           
  4377                           ;incstack = 0
  4378                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  4379                           ;Lcd_Set_Cursor@a stored from wreg
  4380     07D4  00F7               	movwf	Lcd_Set_Cursor@a
  4381     07D5                     l1762:
  4382                           
  4383                           ;LCD.c: 69:     char temp, z, y;;LCD.c: 70:     if (a == 1) {
  4384     07D5  0377               	decf	Lcd_Set_Cursor@a,w
  4385     07D6  1D03               	btfss	3,2
  4386     07D7  2FD9               	goto	u1371
  4387     07D8  2FDA               	goto	u1370
  4388     07D9                     u1371:
  4389     07D9  2FE4               	goto	l1768
  4390     07DA                     u1370:
  4391     07DA                     l1764:
  4392                           
  4393                           ;LCD.c: 71:         temp = 0x80 + b - 1;
  4394     07DA  0876               	movf	Lcd_Set_Cursor@b,w
  4395     07DB  3E7F               	addlw	127
  4396     07DC  00F8               	movwf	Lcd_Set_Cursor@temp
  4397     07DD                     l1766:
  4398                           
  4399                           ;LCD.c: 72:         Lcd_Cmd(temp);
  4400     07DD  0878               	movf	Lcd_Set_Cursor@temp,w
  4401     07DE  120A  158A  27E6  120A  118A  	fcall	_Lcd_Cmd
  4402                           
  4403                           ;LCD.c: 73:     } else if (a == 2) {
  4404     07E3  2FF3               	goto	l207
  4405     07E4                     l1768:
  4406     07E4  3002               	movlw	2
  4407     07E5  0677               	xorwf	Lcd_Set_Cursor@a,w
  4408     07E6  1D03               	btfss	3,2
  4409     07E7  2FE9               	goto	u1381
  4410     07E8  2FEA               	goto	u1380
  4411     07E9                     u1381:
  4412     07E9  2FF3               	goto	l207
  4413     07EA                     u1380:
  4414     07EA                     l1770:
  4415                           
  4416                           ;LCD.c: 74:         temp = 0xC0 + b - 1;
  4417     07EA  0876               	movf	Lcd_Set_Cursor@b,w
  4418     07EB  3EBF               	addlw	191
  4419     07EC  00F8               	movwf	Lcd_Set_Cursor@temp
  4420     07ED                     l1772:
  4421                           
  4422                           ;LCD.c: 75:         Lcd_Cmd(temp);
  4423     07ED  0878               	movf	Lcd_Set_Cursor@temp,w
  4424     07EE  120A  158A  27E6  120A  118A  	fcall	_Lcd_Cmd
  4425     07F3                     l207:
  4426     07F3  0008               	return
  4427     07F4                     __end_of_Lcd_Set_Cursor:
  4428                           
  4429                           	psect	text26
  4430     049D                     __ptext26:	
  4431 ;; *************** function _Lcd_Init *****************
  4432 ;; Defined at:
  4433 ;;		line 79 in file "LCD.c"
  4434 ;; Parameters:    Size  Location     Type
  4435 ;;		None
  4436 ;; Auto vars:     Size  Location     Type
  4437 ;;		None
  4438 ;; Return value:  Size  Location     Type
  4439 ;;                  1    wreg      void 
  4440 ;; Registers used:
  4441 ;;		wreg, status,2, status,0, pclath, cstack
  4442 ;; Tracked objects:
  4443 ;;		On entry : 0/0
  4444 ;;		On exit  : 0/0
  4445 ;;		Unchanged: 0/0
  4446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4447 ;;      Params:         0       0       0       0       0
  4448 ;;      Locals:         0       0       0       0       0
  4449 ;;      Temps:          2       0       0       0       0
  4450 ;;      Totals:         2       0       0       0       0
  4451 ;;Total ram usage:        2 bytes
  4452 ;; Hardware stack levels used: 1
  4453 ;; Hardware stack levels required when called: 3
  4454 ;; This function calls:
  4455 ;;		_Lcd_Cmd
  4456 ;;		_Lcd_Port
  4457 ;; This function is called by:
  4458 ;;		_main
  4459 ;; This function uses a non-reentrant model
  4460 ;;
  4461                           
  4462     049D                     _Lcd_Init:	
  4463                           ;psect for function _Lcd_Init
  4464                           
  4465     049D                     l1748:	
  4466                           ;incstack = 0
  4467                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  4468                           
  4469                           
  4470                           ;LCD.c: 80:     Lcd_Port(0x00);
  4471     049D  3000               	movlw	0
  4472     049E  120A  118A  260C  120A  118A  	fcall	_Lcd_Port
  4473     04A3                     l1750:
  4474                           
  4475                           ;LCD.c: 81:     _delay((unsigned long)((20)*(8000000/4000.0)));
  4476     04A3  3034               	movlw	52
  4477     04A4  00F7               	movwf	??_Lcd_Init+1
  4478     04A5  30F1               	movlw	241
  4479     04A6  00F6               	movwf	??_Lcd_Init
  4480     04A7                     u1737:
  4481     04A7  0BF6               	decfsz	??_Lcd_Init,f
  4482     04A8  2CA7               	goto	u1737
  4483     04A9  0BF7               	decfsz	??_Lcd_Init+1,f
  4484     04AA  2CA7               	goto	u1737
  4485     04AB  2CAC               	nop2
  4486     04AC                     l1752:
  4487                           
  4488                           ;LCD.c: 82:     Lcd_Cmd(0x030);
  4489     04AC  3030               	movlw	48
  4490     04AD  120A  158A  27E6  120A  118A  	fcall	_Lcd_Cmd
  4491                           
  4492                           ;LCD.c: 83:     _delay((unsigned long)((5)*(8000000/4000.0)));
  4493     04B2  300D               	movlw	13
  4494     04B3  00F7               	movwf	??_Lcd_Init+1
  4495     04B4  30FB               	movlw	251
  4496     04B5  00F6               	movwf	??_Lcd_Init
  4497     04B6                     u1747:
  4498     04B6  0BF6               	decfsz	??_Lcd_Init,f
  4499     04B7  2CB6               	goto	u1747
  4500     04B8  0BF7               	decfsz	??_Lcd_Init+1,f
  4501     04B9  2CB6               	goto	u1747
  4502     04BA  2CBB               	nop2
  4503     04BB                     l1754:
  4504                           
  4505                           ;LCD.c: 84:     Lcd_Cmd(0x030);
  4506     04BB  3030               	movlw	48
  4507     04BC  120A  158A  27E6  120A  118A  	fcall	_Lcd_Cmd
  4508     04C1                     l1756:
  4509                           
  4510                           ;LCD.c: 85:     _delay((unsigned long)((200)*(8000000/4000000.0)));
  4511     04C1  3085               	movlw	133
  4512     04C2  00F6               	movwf	??_Lcd_Init
  4513     04C3                     u1757:
  4514     04C3  0BF6               	decfsz	??_Lcd_Init,f
  4515     04C4  2CC3               	goto	u1757
  4516                           
  4517                           ;LCD.c: 86:     Lcd_Cmd(0x030);
  4518     04C5  3030               	movlw	48
  4519     04C6  120A  158A  27E6  120A  118A  	fcall	_Lcd_Cmd
  4520                           
  4521                           ;LCD.c: 87:     Lcd_Cmd(0x38);
  4522     04CB  3038               	movlw	56
  4523     04CC  120A  158A  27E6  120A  118A  	fcall	_Lcd_Cmd
  4524                           
  4525                           ;LCD.c: 88:     Lcd_Cmd(0x08);
  4526     04D1  3008               	movlw	8
  4527     04D2  120A  158A  27E6  120A  118A  	fcall	_Lcd_Cmd
  4528                           
  4529                           ;LCD.c: 89:     Lcd_Cmd(0x01);
  4530     04D7  3001               	movlw	1
  4531     04D8  120A  158A  27E6  120A  118A  	fcall	_Lcd_Cmd
  4532                           
  4533                           ;LCD.c: 90:     Lcd_Cmd(0x06);
  4534     04DD  3006               	movlw	6
  4535     04DE  120A  158A  27E6  120A  118A  	fcall	_Lcd_Cmd
  4536                           
  4537                           ;LCD.c: 91:     Lcd_Cmd(0x0C);
  4538     04E3  300C               	movlw	12
  4539     04E4  120A  158A  27E6  120A  118A  	fcall	_Lcd_Cmd
  4540     04E9                     l1758:
  4541                           
  4542                           ;LCD.c: 92:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  4543     04E9  3042               	movlw	66
  4544     04EA  00F6               	movwf	??_Lcd_Init
  4545     04EB                     u1767:
  4546     04EB  0BF6               	decfsz	??_Lcd_Init,f
  4547     04EC  2CEB               	goto	u1767
  4548     04ED  0000               	nop
  4549     04EE                     l210:
  4550     04EE  0008               	return
  4551     04EF                     __end_of_Lcd_Init:
  4552                           
  4553                           	psect	text27
  4554     0F84                     __ptext27:	
  4555 ;; *************** function _Lcd_Clear *****************
  4556 ;; Defined at:
  4557 ;;		line 63 in file "LCD.c"
  4558 ;; Parameters:    Size  Location     Type
  4559 ;;		None
  4560 ;; Auto vars:     Size  Location     Type
  4561 ;;		None
  4562 ;; Return value:  Size  Location     Type
  4563 ;;                  1    wreg      void 
  4564 ;; Registers used:
  4565 ;;		wreg, status,2, status,0, pclath, cstack
  4566 ;; Tracked objects:
  4567 ;;		On entry : 0/0
  4568 ;;		On exit  : 0/0
  4569 ;;		Unchanged: 0/0
  4570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4571 ;;      Params:         0       0       0       0       0
  4572 ;;      Locals:         0       0       0       0       0
  4573 ;;      Temps:          0       0       0       0       0
  4574 ;;      Totals:         0       0       0       0       0
  4575 ;;Total ram usage:        0 bytes
  4576 ;; Hardware stack levels used: 1
  4577 ;; Hardware stack levels required when called: 3
  4578 ;; This function calls:
  4579 ;;		_Lcd_Cmd
  4580 ;; This function is called by:
  4581 ;;		_main
  4582 ;; This function uses a non-reentrant model
  4583 ;;
  4584                           
  4585     0F84                     _Lcd_Clear:	
  4586                           ;psect for function _Lcd_Clear
  4587                           
  4588     0F84                     l1760:	
  4589                           ;incstack = 0
  4590                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  4591                           
  4592                           
  4593                           ;LCD.c: 64:     Lcd_Cmd(0);
  4594     0F84  3000               	movlw	0
  4595     0F85  120A  158A  27E6  120A  158A  	fcall	_Lcd_Cmd
  4596                           
  4597                           ;LCD.c: 65:     Lcd_Cmd(1);
  4598     0F8A  3001               	movlw	1
  4599     0F8B  120A  158A  27E6  120A  158A  	fcall	_Lcd_Cmd
  4600     0F90                     l201:
  4601     0F90  0008               	return
  4602     0F91                     __end_of_Lcd_Clear:
  4603                           
  4604                           	psect	text28
  4605     0FE6                     __ptext28:	
  4606 ;; *************** function _Lcd_Cmd *****************
  4607 ;; Defined at:
  4608 ;;		line 55 in file "LCD.c"
  4609 ;; Parameters:    Size  Location     Type
  4610 ;;  a               1    wreg     unsigned char 
  4611 ;; Auto vars:     Size  Location     Type
  4612 ;;  a               1    5[COMMON] unsigned char 
  4613 ;; Return value:  Size  Location     Type
  4614 ;;                  1    wreg      void 
  4615 ;; Registers used:
  4616 ;;		wreg, status,2, status,0, pclath, cstack
  4617 ;; Tracked objects:
  4618 ;;		On entry : 0/0
  4619 ;;		On exit  : 0/0
  4620 ;;		Unchanged: 0/0
  4621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4622 ;;      Params:         0       0       0       0       0
  4623 ;;      Locals:         1       0       0       0       0
  4624 ;;      Temps:          2       0       0       0       0
  4625 ;;      Totals:         3       0       0       0       0
  4626 ;;Total ram usage:        3 bytes
  4627 ;; Hardware stack levels used: 1
  4628 ;; Hardware stack levels required when called: 2
  4629 ;; This function calls:
  4630 ;;		_Lcd_Port
  4631 ;; This function is called by:
  4632 ;;		_Lcd_Clear
  4633 ;;		_Lcd_Set_Cursor
  4634 ;;		_Lcd_Init
  4635 ;;		_Lcd_Shift_Right
  4636 ;;		_Lcd_Shift_Left
  4637 ;; This function uses a non-reentrant model
  4638 ;;
  4639                           
  4640     0FE6                     _Lcd_Cmd:	
  4641                           ;psect for function _Lcd_Cmd
  4642                           
  4643                           
  4644                           ;incstack = 0
  4645                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  4646                           ;Lcd_Cmd@a stored from wreg
  4647     0FE6  00F5               	movwf	Lcd_Cmd@a
  4648     0FE7                     l1598:
  4649                           
  4650                           ;LCD.c: 56:     PORTBbits.RB0 = 0;
  4651     0FE7  1283               	bcf	3,5	;RP0=0, select bank0
  4652     0FE8  1303               	bcf	3,6	;RP1=0, select bank0
  4653     0FE9  1006               	bcf	6,0	;volatile
  4654     0FEA                     l1600:
  4655                           
  4656                           ;LCD.c: 57:     Lcd_Port(a);
  4657     0FEA  0875               	movf	Lcd_Cmd@a,w
  4658     0FEB  120A  118A  260C  120A  158A  	fcall	_Lcd_Port
  4659     0FF0                     l1602:
  4660                           
  4661                           ;LCD.c: 58:     PORTBbits.RB1 = 1;
  4662     0FF0  1283               	bcf	3,5	;RP0=0, select bank0
  4663     0FF1  1303               	bcf	3,6	;RP1=0, select bank0
  4664     0FF2  1486               	bsf	6,1	;volatile
  4665     0FF3                     l1604:
  4666                           
  4667                           ;LCD.c: 59:     _delay((unsigned long)((4)*(8000000/4000.0)));
  4668     0FF3  300B               	movlw	11
  4669     0FF4  00F4               	movwf	??_Lcd_Cmd+1
  4670     0FF5  3062               	movlw	98
  4671     0FF6  00F3               	movwf	??_Lcd_Cmd
  4672     0FF7                     u1777:
  4673     0FF7  0BF3               	decfsz	??_Lcd_Cmd,f
  4674     0FF8  2FF7               	goto	u1777
  4675     0FF9  0BF4               	decfsz	??_Lcd_Cmd+1,f
  4676     0FFA  2FF7               	goto	u1777
  4677     0FFB  0000               	nop
  4678     0FFC                     l1606:
  4679                           
  4680                           ;LCD.c: 60:     PORTBbits.RB1 = 0;
  4681     0FFC  1283               	bcf	3,5	;RP0=0, select bank0
  4682     0FFD  1303               	bcf	3,6	;RP1=0, select bank0
  4683     0FFE  1086               	bcf	6,1	;volatile
  4684     0FFF                     l198:
  4685     0FFF  0008               	return
  4686     1000                     __end_of_Lcd_Cmd:
  4687                           
  4688                           	psect	text29
  4689     060C                     __ptext29:	
  4690 ;; *************** function _Lcd_Port *****************
  4691 ;; Defined at:
  4692 ;;		line 13 in file "LCD.c"
  4693 ;; Parameters:    Size  Location     Type
  4694 ;;  a               1    wreg     unsigned char 
  4695 ;; Auto vars:     Size  Location     Type
  4696 ;;  a               1    2[COMMON] unsigned char 
  4697 ;; Return value:  Size  Location     Type
  4698 ;;                  1    wreg      void 
  4699 ;; Registers used:
  4700 ;;		wreg
  4701 ;; Tracked objects:
  4702 ;;		On entry : 0/0
  4703 ;;		On exit  : 0/0
  4704 ;;		Unchanged: 0/0
  4705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4706 ;;      Params:         0       0       0       0       0
  4707 ;;      Locals:         1       0       0       0       0
  4708 ;;      Temps:          0       0       0       0       0
  4709 ;;      Totals:         1       0       0       0       0
  4710 ;;Total ram usage:        1 bytes
  4711 ;; Hardware stack levels used: 1
  4712 ;; Hardware stack levels required when called: 1
  4713 ;; This function calls:
  4714 ;;		Nothing
  4715 ;; This function is called by:
  4716 ;;		_Lcd_Cmd
  4717 ;;		_Lcd_Init
  4718 ;;		_Lcd_Write_Char
  4719 ;; This function uses a non-reentrant model
  4720 ;;
  4721                           
  4722     060C                     _Lcd_Port:	
  4723                           ;psect for function _Lcd_Port
  4724                           
  4725                           
  4726                           ;incstack = 0
  4727                           ; Regs used in _Lcd_Port: [wreg]
  4728                           ;Lcd_Port@a stored from wreg
  4729     060C  00F2               	movwf	Lcd_Port@a
  4730     060D                     l1502:
  4731                           
  4732                           ;LCD.c: 14:     if (a & 1)
  4733     060D  1C72               	btfss	Lcd_Port@a,0
  4734     060E  2E10               	goto	u891
  4735     060F  2E11               	goto	u890
  4736     0610                     u891:
  4737     0610  2E15               	goto	l179
  4738     0611                     u890:
  4739     0611                     l1504:
  4740                           
  4741                           ;LCD.c: 15:         PORTDbits.RD0 = 1;
  4742     0611  1283               	bcf	3,5	;RP0=0, select bank0
  4743     0612  1303               	bcf	3,6	;RP1=0, select bank0
  4744     0613  1408               	bsf	8,0	;volatile
  4745     0614  2E18               	goto	l180
  4746     0615                     l179:	
  4747                           ;LCD.c: 16:     else
  4748                           
  4749                           
  4750                           ;LCD.c: 17:         PORTDbits.RD0 = 0;
  4751     0615  1283               	bcf	3,5	;RP0=0, select bank0
  4752     0616  1303               	bcf	3,6	;RP1=0, select bank0
  4753     0617  1008               	bcf	8,0	;volatile
  4754     0618                     l180:
  4755                           
  4756                           ;LCD.c: 19:     if (a & 2)
  4757     0618  1CF2               	btfss	Lcd_Port@a,1
  4758     0619  2E1B               	goto	u901
  4759     061A  2E1C               	goto	u900
  4760     061B                     u901:
  4761     061B  2E1E               	goto	l181
  4762     061C                     u900:
  4763     061C                     l1506:
  4764                           
  4765                           ;LCD.c: 20:         PORTDbits.RD1 = 1;
  4766     061C  1488               	bsf	8,1	;volatile
  4767     061D  2E1F               	goto	l182
  4768     061E                     l181:	
  4769                           ;LCD.c: 21:     else
  4770                           
  4771                           
  4772                           ;LCD.c: 22:         PORTDbits.RD1 = 0;
  4773     061E  1088               	bcf	8,1	;volatile
  4774     061F                     l182:
  4775                           
  4776                           ;LCD.c: 24:     if (a & 4)
  4777     061F  1D72               	btfss	Lcd_Port@a,2
  4778     0620  2E22               	goto	u911
  4779     0621  2E23               	goto	u910
  4780     0622                     u911:
  4781     0622  2E25               	goto	l183
  4782     0623                     u910:
  4783     0623                     l1508:
  4784                           
  4785                           ;LCD.c: 25:         PORTDbits.RD2 = 1;
  4786     0623  1508               	bsf	8,2	;volatile
  4787     0624  2E26               	goto	l184
  4788     0625                     l183:	
  4789                           ;LCD.c: 26:     else
  4790                           
  4791                           
  4792                           ;LCD.c: 27:         PORTDbits.RD2 = 0;
  4793     0625  1108               	bcf	8,2	;volatile
  4794     0626                     l184:
  4795                           
  4796                           ;LCD.c: 29:     if (a & 8)
  4797     0626  1DF2               	btfss	Lcd_Port@a,3
  4798     0627  2E29               	goto	u921
  4799     0628  2E2A               	goto	u920
  4800     0629                     u921:
  4801     0629  2E2C               	goto	l185
  4802     062A                     u920:
  4803     062A                     l1510:
  4804                           
  4805                           ;LCD.c: 30:         PORTDbits.RD3 = 1;
  4806     062A  1588               	bsf	8,3	;volatile
  4807     062B  2E2D               	goto	l186
  4808     062C                     l185:	
  4809                           ;LCD.c: 31:     else
  4810                           
  4811                           
  4812                           ;LCD.c: 32:         PORTDbits.RD3 = 0;
  4813     062C  1188               	bcf	8,3	;volatile
  4814     062D                     l186:
  4815                           
  4816                           ;LCD.c: 34:     if (a & 16)
  4817     062D  1E72               	btfss	Lcd_Port@a,4
  4818     062E  2E30               	goto	u931
  4819     062F  2E31               	goto	u930
  4820     0630                     u931:
  4821     0630  2E33               	goto	l187
  4822     0631                     u930:
  4823     0631                     l1512:
  4824                           
  4825                           ;LCD.c: 35:         PORTDbits.RD4 = 1;
  4826     0631  1608               	bsf	8,4	;volatile
  4827     0632  2E34               	goto	l188
  4828     0633                     l187:	
  4829                           ;LCD.c: 36:     else
  4830                           
  4831                           
  4832                           ;LCD.c: 37:         PORTDbits.RD4 = 0;
  4833     0633  1208               	bcf	8,4	;volatile
  4834     0634                     l188:
  4835                           
  4836                           ;LCD.c: 39:     if (a & 32)
  4837     0634  1EF2               	btfss	Lcd_Port@a,5
  4838     0635  2E37               	goto	u941
  4839     0636  2E38               	goto	u940
  4840     0637                     u941:
  4841     0637  2E3A               	goto	l189
  4842     0638                     u940:
  4843     0638                     l1514:
  4844                           
  4845                           ;LCD.c: 40:         PORTDbits.RD5 = 1;
  4846     0638  1688               	bsf	8,5	;volatile
  4847     0639  2E3B               	goto	l190
  4848     063A                     l189:	
  4849                           ;LCD.c: 41:     else
  4850                           
  4851                           
  4852                           ;LCD.c: 42:         PORTDbits.RD5 = 0;
  4853     063A  1288               	bcf	8,5	;volatile
  4854     063B                     l190:
  4855                           
  4856                           ;LCD.c: 44:     if (a & 64)
  4857     063B  1F72               	btfss	Lcd_Port@a,6
  4858     063C  2E3E               	goto	u951
  4859     063D  2E3F               	goto	u950
  4860     063E                     u951:
  4861     063E  2E41               	goto	l191
  4862     063F                     u950:
  4863     063F                     l1516:
  4864                           
  4865                           ;LCD.c: 45:         PORTDbits.RD6 = 1;
  4866     063F  1708               	bsf	8,6	;volatile
  4867     0640  2E42               	goto	l192
  4868     0641                     l191:	
  4869                           ;LCD.c: 46:     else
  4870                           
  4871                           
  4872                           ;LCD.c: 47:         PORTDbits.RD6 = 0;
  4873     0641  1308               	bcf	8,6	;volatile
  4874     0642                     l192:
  4875                           
  4876                           ;LCD.c: 49:     if (a & 128)
  4877     0642  1FF2               	btfss	Lcd_Port@a,7
  4878     0643  2E45               	goto	u961
  4879     0644  2E46               	goto	u960
  4880     0645                     u961:
  4881     0645  2E48               	goto	l193
  4882     0646                     u960:
  4883     0646                     l1518:
  4884                           
  4885                           ;LCD.c: 50:         PORTDbits.RD7 = 1;
  4886     0646  1788               	bsf	8,7	;volatile
  4887     0647  2E49               	goto	l195
  4888     0648                     l193:	
  4889                           ;LCD.c: 51:     else
  4890                           
  4891                           
  4892                           ;LCD.c: 52:         PORTDbits.RD7 = 0;
  4893     0648  1388               	bcf	8,7	;volatile
  4894     0649                     l195:
  4895     0649  0008               	return
  4896     064A                     __end_of_Lcd_Port:
  4897                           
  4898                           	psect	text30
  4899     0F5A                     __ptext30:	
  4900 ;; *************** function _isr *****************
  4901 ;; Defined at:
  4902 ;;		line 107 in file "main.c"
  4903 ;; Parameters:    Size  Location     Type
  4904 ;;		None
  4905 ;; Auto vars:     Size  Location     Type
  4906 ;;		None
  4907 ;; Return value:  Size  Location     Type
  4908 ;;                  1    wreg      void 
  4909 ;; Registers used:
  4910 ;;		None
  4911 ;; Tracked objects:
  4912 ;;		On entry : 0/0
  4913 ;;		On exit  : 0/0
  4914 ;;		Unchanged: 0/0
  4915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4916 ;;      Params:         0       0       0       0       0
  4917 ;;      Locals:         0       0       0       0       0
  4918 ;;      Temps:          2       0       0       0       0
  4919 ;;      Totals:         2       0       0       0       0
  4920 ;;Total ram usage:        2 bytes
  4921 ;; Hardware stack levels used: 1
  4922 ;; This function calls:
  4923 ;;		Nothing
  4924 ;; This function is called by:
  4925 ;;		Interrupt level 1
  4926 ;; This function uses a non-reentrant model
  4927 ;;
  4928                           
  4929     0F5A                     _isr:	
  4930                           ;psect for function _isr
  4931                           
  4932     0F5A                     i1l92:
  4933     0F5A  0871               	movf	??_isr+1,w
  4934     0F5B  008A               	movwf	10
  4935     0F5C  0E70               	swapf	??_isr,w
  4936     0F5D  0083               	movwf	3
  4937     0F5E  0EFE               	swapf	btemp,f
  4938     0F5F  0E7E               	swapf	btemp,w
  4939     0F60  0009               	retfie
  4940     0F61                     __end_of_isr:
  4941     007E                     btemp	set	126	;btemp
  4942     007E                     wtemp0	set	126
  4943                           
  4944                           	psect	intentry
  4945     0004                     __pintentry:	
  4946                           ;incstack = 0
  4947                           ; Regs used in _isr: []
  4948                           
  4949     0004                     interrupt_function:
  4950     007E                     saved_w	set	btemp
  4951     0004  00FE               	movwf	btemp
  4952     0005  0E03               	swapf	3,w
  4953     0006  00F0               	movwf	??_isr
  4954     0007  080A               	movf	10,w
  4955     0008  00F1               	movwf	??_isr+1
  4956     0009  120A  158A  2F5A   	ljmp	_isr
  4957                           
  4958                           	psect	idloc
  4959                           
  4960                           ;Config register IDLOC0 @ 0x2000
  4961                           ;	unspecified, using default values
  4962     2000                     	org	8192
  4963     2000  3FFF               	dw	16383
  4964                           
  4965                           ;Config register IDLOC1 @ 0x2001
  4966                           ;	unspecified, using default values
  4967     2001                     	org	8193
  4968     2001  3FFF               	dw	16383
  4969                           
  4970                           ;Config register IDLOC2 @ 0x2002
  4971                           ;	unspecified, using default values
  4972     2002                     	org	8194
  4973     2002  3FFF               	dw	16383
  4974                           
  4975                           ;Config register IDLOC3 @ 0x2003
  4976                           ;	unspecified, using default values
  4977     2003                     	org	8195
  4978     2003  3FFF               	dw	16383
  4979                           
  4980                           	psect	config
  4981                           
  4982                           ;Config register CONFIG1 @ 0x2007
  4983                           ;	Oscillator Selection bits
  4984                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4985                           ;	Watchdog Timer Enable bit
  4986                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4987                           ;	Power-up Timer Enable bit
  4988                           ;	PWRTE = OFF, PWRT disabled
  4989                           ;	RE3/MCLR pin function select bit
  4990                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4991                           ;	Code Protection bit
  4992                           ;	CP = OFF, Program memory code protection is disabled
  4993                           ;	Data Code Protection bit
  4994                           ;	CPD = OFF, Data memory code protection is disabled
  4995                           ;	Brown Out Reset Selection bits
  4996                           ;	BOREN = OFF, BOR disabled
  4997                           ;	Internal External Switchover bit
  4998                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4999                           ;	Fail-Safe Clock Monitor Enabled bit
  5000                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  5001                           ;	Low Voltage Programming Enable bit
  5002                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  5003                           ;	In-Circuit Debugger Mode bit
  5004                           ;	DEBUG = 0x1, unprogramme  5005     2007                     	org	8199
  5006     2007  20D4               	dw	8404
  5007                           
  5008                           ;Config register CONFIG2 @ 0x2008
  5009                           ;	Brown-out Reset Selection bit
  5010                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  5011                           ;	Flash Program Memory Self Write Enable bits
  5012                           ;	WRT = OFF, Write protection off
  5013     2008                     	org	8200
  5014     2008  3FFF               	dw	16383

Data Sizes:
    Strings     45
    Constant    10
    Data        0
    BSS         35
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     29      64
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_4(CODE[17]), STR_3(CODE[15]), STR_2(CODE[9]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> buffer(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> buffer(BANK0[20]), STR_1(CODE[4]), 

    Read_Date@y	PTR unsigned char  size(1) Largest target is 1
		 -> ano(BANK0[1]), 

    Read_Date@month	PTR unsigned char  size(1) Largest target is 1
		 -> mes(BANK0[1]), 

    Read_Date@d	PTR unsigned char  size(1) Largest target is 1
		 -> dia(BANK0[1]), 

    Read_Time@h	PTR unsigned char  size(1) Largest target is 1
		 -> hora(BANK0[1]), 

    Read_Time@m	PTR unsigned char  size(1) Largest target is 1
		 -> minuto(BANK0[1]), 

    Read_Time@s	PTR unsigned char  size(1) Largest target is 1
		 -> segundo(BANK0[1]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Write_String
    _main->___awdiv
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _I2C_Master_Init->___lldiv
    _map->___awdiv
    ___awdiv->___wmul
    ___awmod->___awdiv
    _Read_Time->_Read
    _Read_Date->_Read
    _Read->_I2C_Master_Read
    _Bcd_to_Dec->___bmul
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _map->___awdiv
    ___awmod->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   11946
                                             23 BANK0      6     6      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                          _Read_Date
                          _Read_Time
                            ___awdiv
                            ___awmod
                             ___wmul
                                _map
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             27    20      7    2827
                                              4 BANK0     19    12      7
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                             10 COMMON     2     2      0
                                              0 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     412
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              5 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              2 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _map                                                 10     2      8    2066
                                              5 BANK0     10     2      8
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     852
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     756
                                              8 COMMON     4     0      4
                                              0 BANK0      5     5      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     600
                                              5 BANK0      7     3      4
                            ___awdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Read_Time                                            3     1      2    1055
                                              0 BANK0      3     1      2
                         _Bcd_to_Dec
                               _Read
 ---------------------------------------------------------------------------------
 (1) _Read_Date                                            3     1      2    1055
                                              0 BANK0      3     1      2
                         _Bcd_to_Dec
                               _Read
 ---------------------------------------------------------------------------------
 (2) _Read                                                 4     4      0     569
                                              8 COMMON     4     4      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     2     0      2     326
                                              2 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      6     4      2     197
                                              2 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Bcd_to_Dec                                           4     4      0     235
                                              6 COMMON     4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     168
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     592
                                              5 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0     198
                                              3 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       5     4      1     636
                                              6 COMMON     3     2      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     374
                                              6 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     198
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     198
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     176
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _Read_Date
     _Bcd_to_Dec
       ___bmul
     _Read
       _I2C_Master_Read
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
       _I2C_Master_Stop
       _I2C_Master_Write
   _Read_Time
     _Bcd_to_Dec
     _Read
   ___awdiv
     ___wmul (ARG)
   ___awmod
     ___awdiv (ARG)
     ___wmul (ARG)
   ___wmul
   _map
     ___awdiv
     ___wmul
   _setup
     _I2C_Master_Init
       ___lldiv
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      4C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1D      40       5       80.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      4C      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Aug 08 16:39:02 2023

                               pc 0002                    ___bmul@product 0074                       map@inputmax 004A  
                     map@inputmin 0048                                l79 06F2                                l95 07D3  
                              l98 060B                        _Bcd_to_Dec 0FCE                      ___awdiv@sign 0045  
                              fsr 0004               ___wmul@multiplicand 0074                               l101 0727  
                             l104 075C                               l201 0F90                               l210 04EE  
                             l115 0FE5                               l213 0FCD                               l150 04FB  
                             l207 07F3                               l144 06BD                               l153 0F7A  
                             l401 0441                               l162 07FD                               l219 05CC  
                             l147 04EF                               l323 0036                               l180 0618  
                             l156 0F71                               l181 061E                               l165 0782  
                             l190 063B                               l182 061F                               l166 0785  
                             l191 0641                               l183 0625                               l167 078A  
                             l159 0F83                               l335 00C3                               l192 0642  
                             l184 0626                               l344 0127                               l193 0648  
                             l185 062C                               l361 01F2                               l337 009F  
                             l186 062D                               l195 0649                               l187 0633  
                             l179 0615                               l531 049C                               l188 0634  
                             l189 063A                               l365 0797                               l198 0FFF  
                             l518 03D9                               l391 0FB7                               l367 07AF  
                             l637 058A                               l647 0685                               l818 0FA2  
                             _GIE 005F                               u900 061C                               u901 061B  
                             u910 0623                               u911 0622                               u920 062A  
                             u921 0629                               u930 0631                               u931 0630  
                             u940 0638                               u860 04F5                               u941 0637  
                             u861 04F4                               u950 063F                               u870 04FB  
                             u951 063E                               u871 04FA                               u960 0646  
                             u880 077E                               u961 0645                               u881 077D  
                             u890 0611                               u970 0FA9                               u891 0610  
                             u971 0FA8                               u980 0FB6                               u981 0FB5  
                             u990 03EC                               u991 03EB                               _dia 003F  
                             _ano 003D                               _map 06BE                               _mes 003E  
                             _isr 0F5A                               fsr0 0004                               indf 0000  
                    ___awmod@sign 004E                              l2034 0049                              l1500 0F6E  
                            l2036 00B5                              l1510 062A                              l1502 060D  
                            l1512 0631                              l1504 0611                              l1600 0FEA  
                            l1520 0FA4                              l1514 0638                              l1506 061C  
                            l1602 0FF0                              l1610 0FBC                              l1530 0FB6  
                            l1522 0FA5                              l1516 063F                              l1508 0623  
                            l1604 0FF3                              l1612 0FC2                              l1524 0FA9  
                            l1540 03FC                              l1700 0561                              l1620 0F93  
                            l1518 0646                              l1606 0FFC                              l1614 0FC5  
                            l1526 0FAD                              l1470 0F72                              l1630 078B  
                            l1550 042A                              l1542 0400                              l1534 03DA  
                            l1702 0572                              l1710 0586                              l1622 0F99  
                            l1616 0FCA                              l1608 0FB9                              l1528 0FAF  
                            l1480 0762                              l1472 0F77                              l1640 07AB  
                            l1632 078D                              l1552 0433                              l1544 0409  
                            l1536 03EC                              l1560 068A                              l1704 0578  
                            l1720 065C                              l1624 0F9F                              l1800 005E  
                            l1466 04EF                              l1490 0786                              l1482 076A  
                            l1474 07F4                              l1570 05CE                              l1650 037D  
                            l1634 0791                              l1546 041B                              l1538 03EF  
                            l1554 0439                              l1562 068D                              l1706 0579  
                            l1730 067B                              l1722 0660                              l1714 064A  
                            l1626 0FA1                              l1618 0F92                              l1802 0062  
                            l1468 04F5                              l1484 0773                              l1476 07F9  
                            l1580 05ED                              l1572 05CE                              l1660 038E  
                            l1652 037F                              l1644 0371                              l1636 079E  
                            l1548 0429                              l1564 06BA                              l1740 07B0  
                            l1708 0580                              l1724 0664                              l1716 0652  
                            l1732 0681                              l1820 00D7                              l1804 0077  
                            l1812 00A1                              l1750 04A3                              l1486 0778  
                            l1478 075D                              l1494 0F7B                              l1582 05F6  
                            l1574 05D3                              l1910 0445                              l1670 03A6  
                            l1662 0394                              l1654 0383                              l1646 0374  
                            l1638 07A5                              l1566 06BB                              l1558 0686  
                            l1742 07BF                              l1726 066E                              l1718 0655  
                            l1822 00DB                              l1814 00C7                              l1806 008A  
                            l1760 0F84                              l1752 04AC                              l1592 0FCF  
                            l1488 077E                              l1496 0F80                              l1584 0600  
                            l1576 05DC                              l1904 06F6                              l1920 0459  
                            l1912 0449                              l1672 03B7                              l1664 0397  
                            l1680 03CB                              l1656 0388                              l1648 0378  
                            l1736 06C1                              l1568 06BC                              l1744 07C3  
                            l1728 0674                              l1840 0115                              l1816 00CF  
                            l1824 00E1                              l1808 008E                              l1754 04BB  
                            l1770 07EA                              l1762 07D5                              l1594 0FE4  
                            l1498 0F69                              l1586 0605                              l1578 05E8  
                            l1906 072B                              l1930 0471                              l1922 045F  
                            l1914 044E                              l1682 03D0                              l1674 03BD  
                            l1666 039E                              l1658 038C                              l1746 07C4  
                            l1690 0549                              l1850 0142                              l1842 011B  
                            l1834 00EF                              l1826 00E9                              l1818 00D3  
                            l1756 04C1                              l1748 049D                              l1772 07ED  
                            l1764 07DA                              l1780 05B0                              l1588 060A  
                            l1940 0493                              l1932 047B                              l1924 0462  
                            l1916 0450                              l1908 0442                              l1684 03D5  
                            l1676 03BE                              l1668 03A2                              l1692 054F  
                            l1860 015B                              l1852 0146                              l1844 0121  
                            l1828 00ED                              l1598 0FE7                              l1758 04E9  
                            l1766 07DD                              l1774 058B                              l1942 0498  
                            l1934 0481                              l1926 0469                              l1918 0454  
                            l1678 03C5                              l1694 0552                              l1870 017C  
                            l1862 0160                              l1854 014C                              l1846 0132  
                            l1838 010B                              l1790 0032                              l1782 001F  
                            l1950 0213                              l1768 07E4                              l1776 058E  
                            l1936 0488                              l1928 046D                              l1696 0559  
                            l1688 0547                              l1872 0180                              l1864 0164  
                            l1880 019B                              l1856 0151                              l1848 013E  
                            l1792 0037                              l1784 0022                              l1960 0241  
                            l1952 0218                              l1778 05AA                              l1938 048E  
                            l1698 055D                              l1882 019E                              l1874 018C  
                            l1858 0155                              l1866 0171                              l1786 0028  
                            l1890 01DE                              l1970 02D6                              l1962 025D  
                            l1954 0221                              l1946 01F3                              l1884 01CC  
                            l1876 0192                              l1868 0177                              l1892 01EE  
                            l1796 003B                              l1788 002D                              l1980 0328  
                            l1972 02EC                              l1964 027D                              l1956 022D  
                            l1948 020A                              l1886 01D1                              l1878 0197  
                            l1798 004E                              l1982 0331                              l1974 02F5  
                            l1966 02AC                              l1958 0232                              ?_map 0048  
                            l1888 01D5                              l1984 033D                              l1976 0301  
                            l1968 02CE                              l1986 0345                              l1978 0309  
                            l1988 0364                              ?_isr 0070                              STR_1 0543  
                            STR_2 053A                              STR_3 052B                              STR_4 051A  
                            u1010 0400                              u1011 03FF                              u1100 0791  
                            u1101 0790                              u1005 03F1                              u1030 041B  
                            u1031 041A                              u1200 03B7                              u1201 03B6  
                            u1025 0402                              u1130 07AB                              u1050 0439  
                            u1131 07AA                              u1115 0798                              u1051 0438  
                            u1035 0417                              u1220 03CB                              u1140 0378  
                            u1060 069D                              u1300 0586                              u1221 03CA  
                            u1205 03B3                              u1141 0377                              u1125 079F  
                            u1045 042B                              u1301 0585                              u1230 03D0  
                            u1150 0383                              u1310 0652                              u1231 03CF  
                            u1215 03BF                              u1151 0382                              u1311 0651  
                            u1400 05BA                              u1160 0394                              u1240 054F  
                            u1080 0F99                              u1161 0393                              u1065 0698  
                            u1241 054E                              u1081 0F98                              u1410 05CC  
                            u1330 0664                              u1090 0F9F                              u1411 05CB  
                            u1075 0FD7                              u1331 0663                              u1091 0F9E  
                            u1180 03A6                              u1260 0561                              u1340 066E  
                            u1500 0121                              u1420 0028                              u1181 03A5  
                            u1261 0560                              u1341 066D                              u1325 0656  
                            u1501 0120                              u1421 0027                              u1510 0132  
                            u1430 005E                              u1175 0398                              u1255 0553  
                            u1511 0131                              u1431 005D                              u1280 0572  
                            u1360 0681                              u1600 01EE                              u1520 0146  
                            u1440 009E                              u1281 0571                              u1361 0680  
                            u1345 066A                              u1601 01ED                              u1521 0145  
                            u1441 009D                              u1370 07DA                              u1610 0449  
                            u1530 014C                              u1450 00C7                              u1371 07D9  
                            u1611 0448                              u1195 03A7                              u1275 0562  
                            u1355 0675                              u1531 014B                              u1515 012E  
                            u1451 00C6                              u1380 07EA                              u1620 0454  
                            u1540 015B                              u1460 00D7                              u1381 07E9  
                            u1621 0453                              u1285 056E                              u1541 015A  
                            u1461 00D6                              u1390 0598                              u1630 045F  
                            u1550 0170                              u1470 010A                              u1631 045E  
                            u1295 057A                              u1551 016F                              u1471 0109  
                            u1560 0177                              u1480 0115                              u1561 0176  
                            u1481 0114                              u1650 0471                              u1570 018C  
                            u1490 011B                              u1651 0470                              u1571 018B  
                            u1491 011A                              u1475 0106                              u1707 023A  
                            u1660 047B                              u1580 0192                              u1717 0607  
                            u1661 047A                              u1645 0463                              u1581 0191  
                            u1590 01DE                              u1727 0FC7                              u1591 01DD  
                            u1680 048E                              u1737 04A7                              u1681 048D  
                            u1665 0477                              u1690 0493                              u1747 04B6  
                            u1691 0492                              u1675 0482                              u1757 04C3  
                            u1767 04EB                              u1777 0FF7                              _PEIE 005E  
                            i1l92 0F5A                              _Read 05CD                 ?_Lcd_Write_String 0075  
__end_of_I2C_Master_RepeatedStart 0F72                              _main 01F3                              _hora 0040  
                            _vol1 0026                        Read_Date@d 0045                        Read_Date@y 0044  
                            btemp 007E                              start 000C                ??_Lcd_Write_String 0077  
                 __end_of_Lcd_Cmd 1000                        Read_Time@h 0044                        Read_Time@m 0043  
                      Read_Time@s 0045                 ___bmul@multiplier 0075                             ??_map 0050  
                     Read@address 007A                             ??_isr 0070                  ?_I2C_Master_Init 0048  
                ?_I2C_Master_Read 0072                  ?_I2C_Master_Wait 0070                  ?_I2C_Master_Stop 0070  
                           ?_Read 0070                             ?_main 0070                   __end_of___awdiv 03DA  
                 __end_of___awmod 049D                             _ANSEL 0188                   __end_of___lldiv 0442  
                 ___awdiv@divisor 0078                   __end_of___lwdiv 058B                   __end_of___lwmod 0686  
                 ___awdiv@counter 0044                             _PORTA 0005                             _PORTB 0006  
                           _PORTC 0007                             _PORTD 0008                             _PORTE 0009  
                           _TRISB 0086                             _TRISD 0088                             _SSPIE 0463  
                           _SSPIF 0063                   __end_of_dpowers 051A                   __end_of_isdigit 0FA3  
                           _setup 07B0                             pclath 000A                             status 0003  
                           wtemp0 007E                   __end_of_sprintf 01F3                  __end_of_Lcd_Init 04EF  
                __end_of_Lcd_Port 064A                   __initialization 000F                      __end_of_Read 060C  
                    __end_of_main 0371                       ?_Bcd_to_Dec 0070                            ??_Read 0078  
                          ??_main 005A                 ?_I2C_Master_Start 0070                 ?_I2C_Master_Write 0072  
              ??_I2C_Master_Start 0072                ??_I2C_Master_Write 0074                  ___awdiv@dividend 007A  
                          ?_setup 0070                            _ANSELH 0189                         ??_Lcd_Cmd 0073  
                          _SSPADD 0093                            _TRISC3 043B                            _TRISC4 043C  
                          _SSPCON 0014                            _SSPBUF 0013          _I2C_Master_RepeatedStart 0F69  
                          ___bmul 0FA3                            ___wmul 078B                         ??___awdiv 0043  
                       ??___awmod 004C                         ??___lldiv 007A                         ??___lwdiv 0076  
                       ??___lwmod 007A                            _buffer 0029                  ___awdiv@quotient 0046  
                          _minuto 0041                   ___awmod@divisor 0048                   ___awmod@counter 004D  
                       ??_isdigit 0072                            saved_w 007E                         ??_sprintf 004E  
                 Lcd_Set_Cursor@a 0077                   Lcd_Set_Cursor@b 0076           __end_of__initialization 0018  
               __end_of_Lcd_Clear 0F91               ___bmul@multiplicand 0072                    __pcstackCOMMON 0070  
                   __end_of_setup 07D4                 __end_of_Read_Date 075D                 __end_of_Read_Time 0728  
                  _Lcd_Set_Cursor 07D4                         ?_Lcd_Init 0070                         ?_Lcd_Port 0070  
                    sprintf@width 0056                           ??_setup 007B                        __pbssBANK0 0020  
                      __pmaintext 01F3                           ?___bmul 0072                           ?___wmul 0072  
                      _centesima1 0020                        __pintentry 0004            __end_of_Lcd_Set_Cursor 07F4  
                      ??_Lcd_Init 0076                        ??_Lcd_Port 0072                           _SSPCON2 0091  
                         _SSPSTAT 0094                        __stringtab 0500                    _Lcd_Write_Char 0FB8  
                         _Lcd_Cmd 0FE6                           ___awdiv 0371                           ___awmod 0442  
                         ___lldiv 03DA                           ___lwdiv 0547                           ___lwmod 064A  
                    ??_Bcd_to_Dec 0076                           _decima1 0022                   ?_Lcd_Set_Cursor 0076  
                         __ptext1 001C                           __ptext2 0F91                           __ptext3 064A  
                         __ptext4 0547                           __ptext5 07B0                           __ptext6 0686  
                         __ptext7 03DA                           __ptext8 06BE                           __ptext9 078B  
                         _dpowers 0510                           _isdigit 0F91                  ___awmod@dividend 004A  
                         _segundo 0042                           _unidad1 0024                           _sprintf 001C  
                         clrloop0 0F62            __end_of_Lcd_Write_Char 0FCE              end_of_initialization 0018  
      ??_I2C_Master_RepeatedStart 0072                __end_of_Bcd_to_Dec 0FE6                     Bcd_to_Dec@bcd 0079  
                   Bcd_to_Dec@dec 0078                   ___lldiv@divisor 0072                   ___lldiv@counter 0047  
                I2C_Master_Init@c 0048                  I2C_Master_Read@a 0072                         Lcd_Port@a 0072  
                       _PORTBbits 0006                         _PORTDbits 0008                         _TRISCbits 0087  
                 ?_Lcd_Write_Char 0070                 Lcd_Write_String@a 0075                 Lcd_Write_String@i 007A  
                       _Lcd_Clear 0F84                    __end_of___bmul 0FB8                    __end_of___wmul 07B0  
                _Lcd_Write_String 058B               start_initialization 000F                         _Read_Date 0728  
                     __end_of_map 06F3                       __end_of_isr 0F61                         _Read_Time 06F3  
               ??_I2C_Master_Init 004C                 ??_I2C_Master_Read 0074                 ??_I2C_Master_Wait 0072  
               ??_I2C_Master_Stop 0072                        ?_Lcd_Clear 0070                          ??___bmul 0073  
                        ??___wmul 0076                   Lcd_Write_Char@a 0074                         ___latbits 0002  
                   __pcstackBANK0 0043                        ?_Read_Date 0043                        ?_Read_Time 0043  
                        ?_Lcd_Cmd 0070                       sprintf@flag 0055                       sprintf@prec 0051  
                _I2C_Master_Start 0F72                  _I2C_Master_Write 07F4                  ___lwdiv@dividend 0074  
                ??_Lcd_Set_Cursor 0077                          ?___awdiv 0078                          ?___awmod 0048  
                        ?___lldiv 0072                          ?___lwdiv 0072                          ?___lwmod 0043  
                       __pstrings 0500                          ?_isdigit 0070                  ___lwdiv@quotient 0077  
                        ?_sprintf 0047                 interrupt_function 0004                    ___wmul@product 0076  
                       clear_ram0 0F61                          Lcd_Cmd@a 0075                       ??_Lcd_Clear 0076  
                     __stringbase 050F                 ___wmul@multiplier 0072                         map@outmax 004E  
                       map@outmin 004C                          Read@dato 007B                  ??_Lcd_Write_Char 0073  
                     ??_Read_Date 007C                          _Lcd_Init 049D                       ??_Read_Time 007C  
                        _Lcd_Port 060C               I2C_Master_Read@temp 0076          __end_of_Lcd_Write_String 05CD  
       ?_I2C_Master_RepeatedStart 0070                __end_of__stringtab 0510                       _isdigit$835 0072  
                      sprintf@val 0053                   _I2C_Master_Init 0686                   _I2C_Master_Read 075D  
                 _I2C_Master_Wait 04EF                   _I2C_Master_Stop 0F7B                   ___lwdiv@divisor 0072  
                 ___lwdiv@counter 0079                          __ptext10 0371                          __ptext11 0442  
                        __ptext20 04EF                          __ptext12 06F3                          __ptext21 0FCE  
                        __ptext13 0728                          __ptext30 0F5A                          __ptext22 0FA3  
                        __ptext14 05CD                          __ptext23 058B                          __ptext15 07F4  
                        __ptext24 0FB8                          __ptext16 0F7B                          __ptext25 07D4  
                        __ptext17 0F72                          __ptext26 049D                          __ptext18 0F69  
                        __ptext27 0F84                          __ptext19 075D                          __ptext28 0FE6  
                        __ptext29 060C                          map@value 0051                    Read_Date@month 0043  
                        _voltaje1 0028          __end_of_I2C_Master_Start 0F7B          __end_of_I2C_Master_Write 07FE  
                        isdigit@c 0073                          intlevel1 0000                         sprintf@ap 0052  
                       sprintf@sp 0058                  ___lwmod@dividend 0045                  ___lldiv@dividend 0076  
                       stringcode 050A                        _OSCCONbits 008F           __end_of_I2C_Master_Init 06BE  
         __end_of_I2C_Master_Read 078B           __end_of_I2C_Master_Wait 04FC           __end_of_I2C_Master_Stop 0F84  
              Lcd_Set_Cursor@temp 0078                          sprintf@c 0059                          sprintf@f 0047  
                ___lldiv@quotient 0043                 I2C_Master_Write@d 0072                   ___lwmod@divisor 0043  
                 ___lwmod@counter 007B                          stringdir 050A                          stringtab 0500  
                     _SSPCON2bits 0091  
