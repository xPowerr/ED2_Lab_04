

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Aug 08 17:34:14 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	text28,local,class=CODE,merge=1,delta=2
    40                           	psect	text29,local,class=CODE,merge=1,delta=2
    41                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text31,local,class=CODE,merge=1,delta=2
    43                           	psect	text32,local,class=CODE,merge=1,delta=2
    44                           	psect	text33,local,class=CODE,merge=1,delta=2
    45                           	psect	text34,local,class=CODE,merge=1,delta=2
    46                           	psect	text35,local,class=CODE,merge=1,delta=2
    47                           	psect	text36,local,class=CODE,merge=1,delta=2
    48                           	psect	text37,local,class=CODE,merge=1,delta=2
    49                           	psect	text38,local,class=CODE,merge=1,delta=2
    50                           	psect	intentry,global,class=CODE,delta=2
    51                           	psect	text39,local,class=CODE,merge=1,delta=2
    52                           	psect	text40,local,class=CODE,merge=1,delta=2
    53                           	psect	text41,local,class=CODE,merge=1,delta=2
    54                           	psect	text42,local,class=CODE,merge=1,delta=2
    55                           	psect	text43,local,class=CODE,merge=1,delta=2
    56                           	psect	text44,local,class=CODE,merge=1,delta=2
    57                           	psect	text45,local,class=CODE,merge=1,delta=2
    58                           	psect	text46,local,class=CODE,merge=1,delta=2
    59                           	psect	text47,local,class=CODE,merge=1,delta=2
    60                           	psect	text48,local,class=CODE,merge=1,delta=2
    61                           	psect	text49,local,class=CODE,merge=1,delta=2
    62                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    63                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    64                           	dabs	1,0x7E,2
    65     0000                     
    66                           ; Version 2.40
    67                           ; Generated 04/07/2022 GMT
    68                           ; 
    69                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    70                           ; All rights reserved.
    71                           ; 
    72                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    73                           ; 
    74                           ; Redistribution and use in source and binary forms, with or without modification, are
    75                           ; permitted provided that the following conditions are met:
    76                           ; 
    77                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    78                           ;        conditions and the following disclaimer.
    79                           ; 
    80                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    81                           ;        of conditions and the following disclaimer in the documentation and/or other
    82                           ;        materials provided with the distribution. Publication is not required when
    83                           ;        this file is used in an embedded application.
    84                           ; 
    85                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    86                           ;        software without specific prior written permission.
    87                           ; 
    88                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    89                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    90                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    91                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    92                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    93                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    94                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    95                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    96                           ; 
    97                           ; 
    98                           ; Code-generator required, PIC16F887 Definitions
    99                           ; 
   100                           ; SFR Addresses
   101     0000                     	;# 
   102     0001                     	;# 
   103     0002                     	;# 
   104     0003                     	;# 
   105     0004                     	;# 
   106     0005                     	;# 
   107     0006                     	;# 
   108     0007                     	;# 
   109     0008                     	;# 
   110     0009                     	;# 
   111     000A                     	;# 
   112     000B                     	;# 
   113     000C                     	;# 
   114     000D                     	;# 
   115     000E                     	;# 
   116     000E                     	;# 
   117     000F                     	;# 
   118     0010                     	;# 
   119     0011                     	;# 
   120     0012                     	;# 
   121     0013                     	;# 
   122     0014                     	;# 
   123     0015                     	;# 
   124     0015                     	;# 
   125     0016                     	;# 
   126     0017                     	;# 
   127     0018                     	;# 
   128     0019                     	;# 
   129     001A                     	;# 
   130     001B                     	;# 
   131     001B                     	;# 
   132     001C                     	;# 
   133     001D                     	;# 
   134     001E                     	;# 
   135     001F                     	;# 
   136     0081                     	;# 
   137     0085                     	;# 
   138     0086                     	;# 
   139     0087                     	;# 
   140     0088                     	;# 
   141     0089                     	;# 
   142     008C                     	;# 
   143     008D                     	;# 
   144     008E                     	;# 
   145     008F                     	;# 
   146     0090                     	;# 
   147     0091                     	;# 
   148     0092                     	;# 
   149     0093                     	;# 
   150     0093                     	;# 
   151     0093                     	;# 
   152     0094                     	;# 
   153     0095                     	;# 
   154     0096                     	;# 
   155     0097                     	;# 
   156     0098                     	;# 
   157     0099                     	;# 
   158     009A                     	;# 
   159     009B                     	;# 
   160     009C                     	;# 
   161     009D                     	;# 
   162     009E                     	;# 
   163     009F                     	;# 
   164     0105                     	;# 
   165     0107                     	;# 
   166     0108                     	;# 
   167     0109                     	;# 
   168     010C                     	;# 
   169     010C                     	;# 
   170     010D                     	;# 
   171     010E                     	;# 
   172     010F                     	;# 
   173     0185                     	;# 
   174     0187                     	;# 
   175     0188                     	;# 
   176     0189                     	;# 
   177     018C                     	;# 
   178     018D                     	;# 
   179     0000                     	;# 
   180     0001                     	;# 
   181     0002                     	;# 
   182     0003                     	;# 
   183     0004                     	;# 
   184     0005                     	;# 
   185     0006                     	;# 
   186     0007                     	;# 
   187     0008                     	;# 
   188     0009                     	;# 
   189     000A                     	;# 
   190     000B                     	;# 
   191     000C                     	;# 
   192     000D                     	;# 
   193     000E                     	;# 
   194     000E                     	;# 
   195     000F                     	;# 
   196     0010                     	;# 
   197     0011                     	;# 
   198     0012                     	;# 
   199     0013                     	;# 
   200     0014                     	;# 
   201     0015                     	;# 
   202     0015                     	;# 
   203     0016                     	;# 
   204     0017                     	;# 
   205     0018                     	;# 
   206     0019                     	;# 
   207     001A                     	;# 
   208     001B                     	;# 
   209     001B                     	;# 
   210     001C                     	;# 
   211     001D                     	;# 
   212     001E                     	;# 
   213     001F                     	;# 
   214     0081                     	;# 
   215     0085                     	;# 
   216     0086                     	;# 
   217     0087                     	;# 
   218     0088                     	;# 
   219     0089                     	;# 
   220     008C                     	;# 
   221     008D                     	;# 
   222     008E                     	;# 
   223     008F                     	;# 
   224     0090                     	;# 
   225     0091                     	;# 
   226     0092                     	;# 
   227     0093                     	;# 
   228     0093                     	;# 
   229     0093                     	;# 
   230     0094                     	;# 
   231     0095                     	;# 
   232     0096                     	;# 
   233     0097                     	;# 
   234     0098                     	;# 
   235     0099                     	;# 
   236     009A                     	;# 
   237     009B                     	;# 
   238     009C                     	;# 
   239     009D                     	;# 
   240     009E                     	;# 
   241     009F                     	;# 
   242     0105                     	;# 
   243     0107                     	;# 
   244     0108                     	;# 
   245     0109                     	;# 
   246     010C                     	;# 
   247     010C                     	;# 
   248     010D                     	;# 
   249     010E                     	;# 
   250     010F                     	;# 
   251     0185                     	;# 
   252     0187                     	;# 
   253     0188                     	;# 
   254     0189                     	;# 
   255     018C                     	;# 
   256     018D                     	;# 
   257     0000                     	;# 
   258     0001                     	;# 
   259     0002                     	;# 
   260     0003                     	;# 
   261     0004                     	;# 
   262     0005                     	;# 
   263     0006                     	;# 
   264     0007                     	;# 
   265     0008                     	;# 
   266     0009                     	;# 
   267     000A                     	;# 
   268     000B                     	;# 
   269     000C                     	;# 
   270     000D                     	;# 
   271     000E                     	;# 
   272     000E                     	;# 
   273     000F                     	;# 
   274     0010                     	;# 
   275     0011                     	;# 
   276     0012                     	;# 
   277     0013                     	;# 
   278     0014                     	;# 
   279     0015                     	;# 
   280     0015                     	;# 
   281     0016                     	;# 
   282     0017                     	;# 
   283     0018                     	;# 
   284     0019                     	;# 
   285     001A                     	;# 
   286     001B                     	;# 
   287     001B                     	;# 
   288     001C                     	;# 
   289     001D                     	;# 
   290     001E                     	;# 
   291     001F                     	;# 
   292     0081                     	;# 
   293     0085                     	;# 
   294     0086                     	;# 
   295     0087                     	;# 
   296     0088                     	;# 
   297     0089                     	;# 
   298     008C                     	;# 
   299     008D                     	;# 
   300     008E                     	;# 
   301     008F                     	;# 
   302     0090                     	;# 
   303     0091                     	;# 
   304     0092                     	;# 
   305     0093                     	;# 
   306     0093                     	;# 
   307     0093                     	;# 
   308     0094                     	;# 
   309     0095                     	;# 
   310     0096                     	;# 
   311     0097                     	;# 
   312     0098                     	;# 
   313     0099                     	;# 
   314     009A                     	;# 
   315     009B                     	;# 
   316     009C                     	;# 
   317     009D                     	;# 
   318     009E                     	;# 
   319     009F                     	;# 
   320     0105                     	;# 
   321     0107                     	;# 
   322     0108                     	;# 
   323     0109                     	;# 
   324     010C                     	;# 
   325     010C                     	;# 
   326     010D                     	;# 
   327     010E                     	;# 
   328     010F                     	;# 
   329     0185                     	;# 
   330     0187                     	;# 
   331     0188                     	;# 
   332     0189                     	;# 
   333     018C                     	;# 
   334     018D                     	;# 
   335     0000                     	;# 
   336     0001                     	;# 
   337     0002                     	;# 
   338     0003                     	;# 
   339     0004                     	;# 
   340     0005                     	;# 
   341     0006                     	;# 
   342     0007                     	;# 
   343     0008                     	;# 
   344     0009                     	;# 
   345     000A                     	;# 
   346     000B                     	;# 
   347     000C                     	;# 
   348     000D                     	;# 
   349     000E                     	;# 
   350     000E                     	;# 
   351     000F                     	;# 
   352     0010                     	;# 
   353     0011                     	;# 
   354     0012                     	;# 
   355     0013                     	;# 
   356     0014                     	;# 
   357     0015                     	;# 
   358     0015                     	;# 
   359     0016                     	;# 
   360     0017                     	;# 
   361     0018                     	;# 
   362     0019                     	;# 
   363     001A                     	;# 
   364     001B                     	;# 
   365     001B                     	;# 
   366     001C                     	;# 
   367     001D                     	;# 
   368     001E                     	;# 
   369     001F                     	;# 
   370     0081                     	;# 
   371     0085                     	;# 
   372     0086                     	;# 
   373     0087                     	;# 
   374     0088                     	;# 
   375     0089                     	;# 
   376     008C                     	;# 
   377     008D                     	;# 
   378     008E                     	;# 
   379     008F                     	;# 
   380     0090                     	;# 
   381     0091                     	;# 
   382     0092                     	;# 
   383     0093                     	;# 
   384     0093                     	;# 
   385     0093                     	;# 
   386     0094                     	;# 
   387     0095                     	;# 
   388     0096                     	;# 
   389     0097                     	;# 
   390     0098                     	;# 
   391     0099                     	;# 
   392     009A                     	;# 
   393     009B                     	;# 
   394     009C                     	;# 
   395     009D                     	;# 
   396     009E                     	;# 
   397     009F                     	;# 
   398     0105                     	;# 
   399     0107                     	;# 
   400     0108                     	;# 
   401     0109                     	;# 
   402     010C                     	;# 
   403     010C                     	;# 
   404     010D                     	;# 
   405     010E                     	;# 
   406     010F                     	;# 
   407     0185                     	;# 
   408     0187                     	;# 
   409     0188                     	;# 
   410     0189                     	;# 
   411     018C                     	;# 
   412     018D                     	;# 
   413     0000                     	;# 
   414     0001                     	;# 
   415     0002                     	;# 
   416     0003                     	;# 
   417     0004                     	;# 
   418     0005                     	;# 
   419     0006                     	;# 
   420     0007                     	;# 
   421     0008                     	;# 
   422     0009                     	;# 
   423     000A                     	;# 
   424     000B                     	;# 
   425     000C                     	;# 
   426     000D                     	;# 
   427     000E                     	;# 
   428     000E                     	;# 
   429     000F                     	;# 
   430     0010                     	;# 
   431     0011                     	;# 
   432     0012                     	;# 
   433     0013                     	;# 
   434     0014                     	;# 
   435     0015                     	;# 
   436     0015                     	;# 
   437     0016                     	;# 
   438     0017                     	;# 
   439     0018                     	;# 
   440     0019                     	;# 
   441     001A                     	;# 
   442     001B                     	;# 
   443     001B                     	;# 
   444     001C                     	;# 
   445     001D                     	;# 
   446     001E                     	;# 
   447     001F                     	;# 
   448     0081                     	;# 
   449     0085                     	;# 
   450     0086                     	;# 
   451     0087                     	;# 
   452     0088                     	;# 
   453     0089                     	;# 
   454     008C                     	;# 
   455     008D                     	;# 
   456     008E                     	;# 
   457     008F                     	;# 
   458     0090                     	;# 
   459     0091                     	;# 
   460     0092                     	;# 
   461     0093                     	;# 
   462     0093                     	;# 
   463     0093                     	;# 
   464     0094                     	;# 
   465     0095                     	;# 
   466     0096                     	;# 
   467     0097                     	;# 
   468     0098                     	;# 
   469     0099                     	;# 
   470     009A                     	;# 
   471     009B                     	;# 
   472     009C                     	;# 
   473     009D                     	;# 
   474     009E                     	;# 
   475     009F                     	;# 
   476     0105                     	;# 
   477     0107                     	;# 
   478     0108                     	;# 
   479     0109                     	;# 
   480     010C                     	;# 
   481     010C                     	;# 
   482     010D                     	;# 
   483     010E                     	;# 
   484     010F                     	;# 
   485     0185                     	;# 
   486     0187                     	;# 
   487     0188                     	;# 
   488     0189                     	;# 
   489     018C                     	;# 
   490     018D                     	;# 
   491                           
   492                           	psect	strings
   493     0700                     __pstrings:
   494     0700                     stringtab:
   495     0700                     __stringtab:
   496                           
   497                           ;	String table - string pointers are 1 byte each
   498     0700  1BFF               	btfsc	btemp+1,7
   499     0701  2F0A               	ljmp	stringcode
   500     0702  1383               	bcf	3,7
   501     0703  187F               	btfsc	btemp+1,0
   502     0704  1783               	bsf	3,7
   503     0705  0800               	movf	0,w
   504     0706  0A84               	incf	4,f
   505     0707  1903               	skipnz
   506     0708  0AFF               	incf	btemp+1,f
   507     0709  0008               	return
   508     070A                     stringcode:
   509     070A                     stringdir:
   510     070A  3007               	movlw	high stringdir
   511     070B  008A               	movwf	10
   512     070C  0804               	movf	4,w
   513     070D  0A84               	incf	4,f
   514     070E  0782               	addwf	2,f
   515     070F                     __stringbase:
   516     070F  3400               	retlw	0
   517     0710                     __end_of__stringtab:
   518     0710                     _dpowers:
   519     0710  3401               	retlw	1
   520     0711  3400               	retlw	0
   521     0712  340A               	retlw	10
   522     0713  3400               	retlw	0
   523     0714  3464               	retlw	100
   524     0715  3400               	retlw	0
   525     0716  34E8               	retlw	232
   526     0717  3403               	retlw	3
   527     0718  3410               	retlw	16
   528     0719  3427               	retlw	39
   529     071A                     __end_of_dpowers:
   530     0008                     _PORTDbits	set	8
   531     0013                     _SSPBUF	set	19
   532     0014                     _SSPCON	set	20
   533     0009                     _PORTE	set	9
   534     0008                     _PORTD	set	8
   535     0007                     _PORTC	set	7
   536     0006                     _PORTB	set	6
   537     0005                     _PORTA	set	5
   538     0006                     _PORTBbits	set	6
   539     000B                     _INTCONbits	set	11
   540     0063                     _SSPIF	set	99
   541     005E                     _PEIE	set	94
   542     005F                     _GIE	set	95
   543     0096                     _IOCBbits	set	150
   544     0095                     _WPUBbits	set	149
   545     0081                     _OPTION_REGbits	set	129
   546     0091                     _SSPCON2bits	set	145
   547     0087                     _TRISCbits	set	135
   548     0094                     _SSPSTAT	set	148
   549     0093                     _SSPADD	set	147
   550     0091                     _SSPCON2	set	145
   551     008F                     _OSCCONbits	set	143
   552     0088                     _TRISD	set	136
   553     0086                     _TRISBbits	set	134
   554     0463                     _SSPIE	set	1123
   555     043C                     _TRISC4	set	1084
   556     043B                     _TRISC3	set	1083
   557     0189                     _ANSELH	set	393
   558     0188                     _ANSEL	set	392
   559     071A                     STR_8:
   560     071A  3425               	retlw	37	;'%'
   561     071B  3430               	retlw	48	;'0'
   562     071C  3432               	retlw	50	;'2'
   563     071D  3475               	retlw	117	;'u'
   564     071E  342F               	retlw	47	;'/'
   565     071F  3425               	retlw	37	;'%'
   566     0720  3430               	retlw	48	;'0'
   567     0721  3432               	retlw	50	;'2'
   568     0722  3475               	retlw	117	;'u'
   569     0723  342F               	retlw	47	;'/'
   570     0724  3432               	retlw	50	;'2'
   571     0725  3430               	retlw	48	;'0'
   572     0726  3425               	retlw	37	;'%'
   573     0727  3430               	retlw	48	;'0'
   574     0728  3432               	retlw	50	;'2'
   575     0729  3475               	retlw	117	;'u'
   576     072A  3420               	retlw	32	;' '
   577     072B  3400               	retlw	0
   578     072C                     STR_4:
   579     072C  3425               	retlw	37	;'%'
   580     072D  3430               	retlw	48	;'0'
   581     072E  3432               	retlw	50	;'2'
   582     072F  3475               	retlw	117	;'u'
   583     0730  342F               	retlw	47	;'/'
   584     0731  3425               	retlw	37	;'%'
   585     0732  3430               	retlw	48	;'0'
   586     0733  3432               	retlw	50	;'2'
   587     0734  3475               	retlw	117	;'u'
   588     0735  342F               	retlw	47	;'/'
   589     0736  3432               	retlw	50	;'2'
   590     0737  3430               	retlw	48	;'0'
   591     0738  3425               	retlw	37	;'%'
   592     0739  3430               	retlw	48	;'0'
   593     073A  3432               	retlw	50	;'2'
   594     073B  3475               	retlw	117	;'u'
   595     073C  3400               	retlw	0
   596     073D                     STR_12:
   597     073D  3425               	retlw	37	;'%'
   598     073E  3430               	retlw	48	;'0'
   599     073F  3432               	retlw	50	;'2'
   600     0740  3475               	retlw	117	;'u'
   601     0741  343A               	retlw	58	;':'
   602     0742  3425               	retlw	37	;'%'
   603     0743  3430               	retlw	48	;'0'
   604     0744  3432               	retlw	50	;'2'
   605     0745  3475               	retlw	117	;'u'
   606     0746  343A               	retlw	58	;':'
   607     0747  3425               	retlw	37	;'%'
   608     0748  3430               	retlw	48	;'0'
   609     0749  3432               	retlw	50	;'2'
   610     074A  3475               	retlw	117	;'u'
   611     074B  3420               	retlw	32	;' '
   612     074C  3400               	retlw	0
   613     074D                     STR_3:
   614     074D  3425               	retlw	37	;'%'
   615     074E  3430               	retlw	48	;'0'
   616     074F  3432               	retlw	50	;'2'
   617     0750  3475               	retlw	117	;'u'
   618     0751  343A               	retlw	58	;':'
   619     0752  3425               	retlw	37	;'%'
   620     0753  3430               	retlw	48	;'0'
   621     0754  3432               	retlw	50	;'2'
   622     0755  3475               	retlw	117	;'u'
   623     0756  343A               	retlw	58	;':'
   624     0757  3425               	retlw	37	;'%'
   625     0758  3430               	retlw	48	;'0'
   626     0759  3432               	retlw	50	;'2'
   627     075A  3475               	retlw	117	;'u'
   628     075B  3400               	retlw	0
   629     075C                     STR_2:
   630     075C  3425               	retlw	37	;'%'
   631     075D  3464               	retlw	100	;'d'
   632     075E  342E               	retlw	46	;'.'
   633     075F  3425               	retlw	37	;'%'
   634     0760  3464               	retlw	100	;'d'
   635     0761  3425               	retlw	37	;'%'
   636     0762  3464               	retlw	100	;'d'
   637     0763  3456               	retlw	86	;'V'
   638     0764  3400               	retlw	0
   639     0765                     STR_1:
   640     0765  3453               	retlw	83	;'S'
   641     0766  3431               	retlw	49	;'1'
   642     0767  343A               	retlw	58	;':'
   643     0768  3400               	retlw	0
   644     0769                     STR_11:
   645     0769  3441               	retlw	65	;'A'
   646     076A  3420               	retlw	32	;' '
   647     076B  3400               	retlw	0
   648     076C                     STR_7:
   649     076C  3444               	retlw	68	;'D'
   650     076D  3420               	retlw	32	;' '
   651     076E  3400               	retlw	0
   652     076F                     STR_13:
   653     076F  3448               	retlw	72	;'H'
   654     0770  3420               	retlw	32	;' '
   655     0771  3400               	retlw	0
   656     0772                     STR_9:
   657     0772  344D               	retlw	77	;'M'
   658     0773  3420               	retlw	32	;' '
   659     0774  3400               	retlw	0
   660     0775                     STR_5:
   661     0775  344E               	retlw	78	;'N'
   662     0776  3420               	retlw	32	;' '
   663     0777  3400               	retlw	0
   664     0778                     STR_17:
   665     0778  3453               	retlw	83	;'S'
   666     0779  3420               	retlw	32	;' '
   667     077A  3400               	retlw	0
   668     077B                     STR_15:
   669     077B  346D               	retlw	109	;'m'
   670     077C  3420               	retlw	32	;' '
   671     077D  3400               	retlw	0
   672     071A                     
   673                           	psect	cinit
   674     000F                     start_initialization:	
   675                           ; #config settings
   676                           
   677     000F                     __initialization:
   678                           
   679                           ; Clear objects allocated to COMMON
   680     000F  01FB               	clrf	__pbssCOMMON& (0+127)
   681                           
   682                           ; Clear objects allocated to BANK0
   683     0010  1383               	bcf	3,7	;select IRP bank0
   684     0011  3047               	movlw	low __pbssBANK0
   685     0012  0084               	movwf	4
   686     0013  306B               	movlw	low (__pbssBANK0+36)
   687     0014  160A  118A  26D1  120A  118A  	fcall	clear_ram0
   688     0019                     end_of_initialization:	
   689                           ;End of C runtime variable initialization code
   690                           
   691     0019                     __end_of__initialization:
   692     0019  0183               	clrf	3
   693     001A  120A  118A  281D   	ljmp	_main	;jump to C main() function
   694                           
   695                           	psect	bssCOMMON
   696     007B                     __pbssCOMMON:
   697     007B                     _bandera:
   698     007B                     	ds	1
   699                           
   700                           	psect	bssBANK0
   701     0047                     __pbssBANK0:
   702     0047                     _centesima1:
   703     0047                     	ds	2
   704     0049                     _decima1:
   705     0049                     	ds	2
   706     004B                     _unidad1:
   707     004B                     	ds	2
   708     004D                     _vol1:
   709     004D                     	ds	2
   710     004F                     _voltaje1:
   711     004F                     	ds	1
   712     0050                     _selector:
   713     0050                     	ds	1
   714     0051                     _buffer:
   715     0051                     	ds	20
   716     0065                     _ano:
   717     0065                     	ds	1
   718     0066                     _mes:
   719     0066                     	ds	1
   720     0067                     _dia:
   721     0067                     	ds	1
   722     0068                     _hora:
   723     0068                     	ds	1
   724     0069                     _minuto:
   725     0069                     	ds	1
   726     006A                     _segundo:
   727     006A                     	ds	1
   728                           
   729                           	psect	clrtext
   730     16D1                     clear_ram0:	
   731                           ;	Called with FSR containing the base address, and
   732                           ;	W with the last address+1
   733                           
   734     16D1  0064               	clrwdt	;clear the watchdog before getting into this loop
   735     16D2                     clrloop0:
   736     16D2  0180               	clrf	0	;clear RAM location pointed to by FSR
   737     16D3  0A84               	incf	4,f	;increment pointer
   738     16D4  0604               	xorwf	4,w	;XOR with final address
   739     16D5  1903               	btfsc	3,2	;have we reached the end yet?
   740     16D6  3400               	retlw	0	;all done for this memory range, return
   741     16D7  0604               	xorwf	4,w	;XOR again to restore value
   742     16D8  2ED2               	goto	clrloop0	;do the next byte
   743                           
   744                           	psect	cstackCOMMON
   745     0070                     __pcstackCOMMON:
   746     0070                     ?_isdigit:
   747     0070                     ?_setup:	
   748                           ; 1 bit 
   749                           
   750     0070                     ?_Lcd_Init:	
   751                           ; 1 bytes @ 0x0
   752                           
   753     0070                     ?_Lcd_Clear:	
   754                           ; 1 bytes @ 0x0
   755                           
   756     0070                     ?_Set_sec:	
   757                           ; 1 bytes @ 0x0
   758                           
   759     0070                     ?_Set_min:	
   760                           ; 1 bytes @ 0x0
   761                           
   762     0070                     ?_Set_hour:	
   763                           ; 1 bytes @ 0x0
   764                           
   765     0070                     ?_Set_day:	
   766                           ; 1 bytes @ 0x0
   767                           
   768     0070                     ?_Set_month:	
   769                           ; 1 bytes @ 0x0
   770                           
   771     0070                     ?_Set_year:	
   772                           ; 1 bytes @ 0x0
   773                           
   774     0070                     ?_I2C_Master_Start:	
   775                           ; 1 bytes @ 0x0
   776                           
   777     0070                     ?_I2C_Master_Stop:	
   778                           ; 1 bytes @ 0x0
   779                           
   780     0070                     ?_ioc_init:	
   781                           ; 1 bytes @ 0x0
   782                           
   783     0070                     ?_I2C_Master_RepeatedStart:	
   784                           ; 1 bytes @ 0x0
   785                           
   786     0070                     ?_Bcd_to_Dec:	
   787                           ; 1 bytes @ 0x0
   788                           
   789     0070                     ?_Dec_to_Bcd:	
   790                           ; 1 bytes @ 0x0
   791                           
   792     0070                     ?_main:	
   793                           ; 1 bytes @ 0x0
   794                           
   795     0070                     ?_isr:	
   796                           ; 1 bytes @ 0x0
   797                           
   798     0070                     ?_Read:	
   799                           ; 1 bytes @ 0x0
   800                           
   801     0070                     ?_I2C_Master_Wait:	
   802                           ; 1 bytes @ 0x0
   803                           
   804     0070                     ?_Lcd_Port:	
   805                           ; 1 bytes @ 0x0
   806                           
   807     0070                     ?_Lcd_Cmd:	
   808                           ; 1 bytes @ 0x0
   809                           
   810     0070                     ?_Lcd_Write_Char:	
   811                           ; 1 bytes @ 0x0
   812                           
   813     0070                     ?i1_Set_sec:	
   814                           ; 1 bytes @ 0x0
   815                           
   816     0070                     ?i1_Set_min:	
   817                           ; 1 bytes @ 0x0
   818                           
   819     0070                     ?i1_Set_hour:	
   820                           ; 1 bytes @ 0x0
   821                           
   822     0070                     ?i1_Set_day:	
   823                           ; 1 bytes @ 0x0
   824                           
   825     0070                     ?i1_Set_month:	
   826                           ; 1 bytes @ 0x0
   827                           
   828     0070                     ?i1_Set_year:	
   829                           ; 1 bytes @ 0x0
   830                           
   831     0070                     ?i1_Dec_to_Bcd:	
   832                           ; 1 bytes @ 0x0
   833                           
   834     0070                     ??i1_Dec_to_Bcd:	
   835                           ; 1 bytes @ 0x0
   836                           
   837     0070                     ?i1_I2C_Master_Wait:	
   838                           ; 1 bytes @ 0x0
   839                           
   840     0070                     ??i1_I2C_Master_Wait:	
   841                           ; 1 bytes @ 0x0
   842                           
   843     0070                     ?i1_I2C_Master_Start:	
   844                           ; 1 bytes @ 0x0
   845                           
   846     0070                     ??i1_I2C_Master_Start:	
   847                           ; 1 bytes @ 0x0
   848                           
   849     0070                     ?i1_I2C_Master_Stop:	
   850                           ; 1 bytes @ 0x0
   851                           
   852     0070                     ??i1_I2C_Master_Stop:	
   853                           ; 1 bytes @ 0x0
   854                           
   855     0070                     i1Dec_to_Bcd@dec_number:	
   856                           ; 1 bytes @ 0x0
   857                           
   858                           
   859                           ; 1 bytes @ 0x0
   860     0070                     	ds	1
   861     0071                     i1Dec_to_Bcd@bcd_number:
   862                           
   863                           ; 1 bytes @ 0x1
   864     0071                     	ds	1
   865     0072                     ?i1_I2C_Master_Write:
   866     0072                     i1I2C_Master_Write@d:	
   867                           ; 1 bytes @ 0x2
   868                           
   869                           
   870                           ; 2 bytes @ 0x2
   871     0072                     	ds	2
   872     0074                     ??i1_Set_sec:
   873     0074                     ??i1_Set_min:	
   874                           ; 1 bytes @ 0x4
   875                           
   876     0074                     ??i1_Set_hour:	
   877                           ; 1 bytes @ 0x4
   878                           
   879     0074                     ??i1_Set_day:	
   880                           ; 1 bytes @ 0x4
   881                           
   882     0074                     ??i1_Set_month:	
   883                           ; 1 bytes @ 0x4
   884                           
   885     0074                     ??i1_Set_year:	
   886                           ; 1 bytes @ 0x4
   887                           
   888     0074                     ??i1_I2C_Master_Write:	
   889                           ; 1 bytes @ 0x4
   890                           
   891                           
   892                           ; 1 bytes @ 0x4
   893     0074                     	ds	2
   894     0076                     i1Set_sec@sec:
   895     0076                     i1Set_min@min:	
   896                           ; 1 bytes @ 0x6
   897                           
   898     0076                     i1Set_hour@hour:	
   899                           ; 1 bytes @ 0x6
   900                           
   901     0076                     i1Set_day@day:	
   902                           ; 1 bytes @ 0x6
   903                           
   904     0076                     i1Set_month@month:	
   905                           ; 1 bytes @ 0x6
   906                           
   907     0076                     i1Set_year@year:	
   908                           ; 1 bytes @ 0x6
   909                           
   910                           
   911                           ; 1 bytes @ 0x6
   912     0076                     	ds	1
   913     0077                     ??_isr:
   914                           
   915                           ; 1 bytes @ 0x7
   916     0077                     	ds	4
   917                           
   918                           	psect	cstackBANK0
   919     0020                     __pcstackBANK0:
   920     0020                     ??_I2C_Master_Start:
   921     0020                     ??_I2C_Master_Stop:	
   922                           ; 1 bytes @ 0x0
   923                           
   924     0020                     ??_ioc_init:	
   925                           ; 1 bytes @ 0x0
   926                           
   927     0020                     ??_I2C_Master_RepeatedStart:	
   928                           ; 1 bytes @ 0x0
   929                           
   930     0020                     ??_Dec_to_Bcd:	
   931                           ; 1 bytes @ 0x0
   932                           
   933     0020                     ??_isdigit:	
   934                           ; 1 bytes @ 0x0
   935                           
   936     0020                     ??_I2C_Master_Wait:	
   937                           ; 1 bytes @ 0x0
   938                           
   939     0020                     ??_Lcd_Port:	
   940                           ; 1 bytes @ 0x0
   941                           
   942     0020                     ?___bmul:	
   943                           ; 1 bytes @ 0x0
   944                           
   945     0020                     ?_I2C_Master_Read:	
   946                           ; 1 bytes @ 0x0
   947                           
   948     0020                     ?___wmul:	
   949                           ; 2 bytes @ 0x0
   950                           
   951     0020                     ?___lwdiv:	
   952                           ; 2 bytes @ 0x0
   953                           
   954     0020                     ?___lldiv:	
   955                           ; 2 bytes @ 0x0
   956                           
   957     0020                     Dec_to_Bcd@dec_number:	
   958                           ; 4 bytes @ 0x0
   959                           
   960     0020                     Lcd_Port@a:	
   961                           ; 1 bytes @ 0x0
   962                           
   963     0020                     ioc_init@pin:	
   964                           ; 1 bytes @ 0x0
   965                           
   966     0020                     ___bmul@multiplicand:	
   967                           ; 1 bytes @ 0x0
   968                           
   969     0020                     _isdigit$1080:	
   970                           ; 1 bytes @ 0x0
   971                           
   972     0020                     I2C_Master_Read@a:	
   973                           ; 1 bytes @ 0x0
   974                           
   975     0020                     ___wmul@multiplier:	
   976                           ; 2 bytes @ 0x0
   977                           
   978     0020                     ___lwdiv@divisor:	
   979                           ; 2 bytes @ 0x0
   980                           
   981     0020                     ___lldiv@divisor:	
   982                           ; 2 bytes @ 0x0
   983                           
   984                           
   985                           ; 4 bytes @ 0x0
   986     0020                     	ds	1
   987     0021                     ??_Lcd_Cmd:
   988     0021                     ??_Lcd_Write_Char:	
   989                           ; 1 bytes @ 0x1
   990                           
   991     0021                     ??___bmul:	
   992                           ; 1 bytes @ 0x1
   993                           
   994     0021                     Dec_to_Bcd@bcd_number:	
   995                           ; 1 bytes @ 0x1
   996                           
   997     0021                     isdigit@c:	
   998                           ; 1 bytes @ 0x1
   999                           
  1000                           
  1001                           ; 1 bytes @ 0x1
  1002     0021                     	ds	1
  1003     0022                     ?_I2C_Master_Write:
  1004     0022                     ??_I2C_Master_Read:	
  1005                           ; 1 bytes @ 0x2
  1006                           
  1007     0022                     Lcd_Write_Char@a:	
  1008                           ; 1 bytes @ 0x2
  1009                           
  1010     0022                     ___bmul@product:	
  1011                           ; 1 bytes @ 0x2
  1012                           
  1013     0022                     I2C_Master_Write@d:	
  1014                           ; 1 bytes @ 0x2
  1015                           
  1016     0022                     ___wmul@multiplicand:	
  1017                           ; 2 bytes @ 0x2
  1018                           
  1019     0022                     ___lwdiv@dividend:	
  1020                           ; 2 bytes @ 0x2
  1021                           
  1022                           
  1023                           ; 2 bytes @ 0x2
  1024     0022                     	ds	1
  1025     0023                     ?_Lcd_Write_String:
  1026     0023                     Lcd_Cmd@a:	
  1027                           ; 1 bytes @ 0x3
  1028                           
  1029     0023                     ___bmul@multiplier:	
  1030                           ; 1 bytes @ 0x3
  1031                           
  1032     0023                     Lcd_Write_String@a:	
  1033                           ; 1 bytes @ 0x3
  1034                           
  1035                           
  1036                           ; 2 bytes @ 0x3
  1037     0023                     	ds	1
  1038     0024                     ??_Lcd_Init:
  1039     0024                     ??_Lcd_Clear:	
  1040                           ; 1 bytes @ 0x4
  1041                           
  1042     0024                     ?_Lcd_Set_Cursor:	
  1043                           ; 1 bytes @ 0x4
  1044                           
  1045     0024                     ??_Set_sec:	
  1046                           ; 1 bytes @ 0x4
  1047                           
  1048     0024                     ??_Set_min:	
  1049                           ; 1 bytes @ 0x4
  1050                           
  1051     0024                     ??_Set_hour:	
  1052                           ; 1 bytes @ 0x4
  1053                           
  1054     0024                     ??_Set_day:	
  1055                           ; 1 bytes @ 0x4
  1056                           
  1057     0024                     ??_Set_month:	
  1058                           ; 1 bytes @ 0x4
  1059                           
  1060     0024                     ??_Set_year:	
  1061                           ; 1 bytes @ 0x4
  1062                           
  1063     0024                     ??_I2C_Master_Write:	
  1064                           ; 1 bytes @ 0x4
  1065                           
  1066     0024                     ??_Bcd_to_Dec:	
  1067                           ; 1 bytes @ 0x4
  1068                           
  1069     0024                     ??___wmul:	
  1070                           ; 1 bytes @ 0x4
  1071                           
  1072     0024                     ??___lwdiv:	
  1073                           ; 1 bytes @ 0x4
  1074                           
  1075     0024                     Lcd_Set_Cursor@b:	
  1076                           ; 1 bytes @ 0x4
  1077                           
  1078     0024                     I2C_Master_Read@temp:	
  1079                           ; 1 bytes @ 0x4
  1080                           
  1081     0024                     ___wmul@product:	
  1082                           ; 2 bytes @ 0x4
  1083                           
  1084     0024                     ___lldiv@dividend:	
  1085                           ; 2 bytes @ 0x4
  1086                           
  1087                           
  1088                           ; 4 bytes @ 0x4
  1089     0024                     	ds	1
  1090     0025                     ??_Lcd_Set_Cursor:
  1091     0025                     ??_Lcd_Write_String:	
  1092                           ; 1 bytes @ 0x5
  1093                           
  1094     0025                     Lcd_Set_Cursor@a:	
  1095                           ; 1 bytes @ 0x5
  1096                           
  1097     0025                     ___lwdiv@quotient:	
  1098                           ; 1 bytes @ 0x5
  1099                           
  1100                           
  1101                           ; 2 bytes @ 0x5
  1102     0025                     	ds	1
  1103     0026                     ??_Read:
  1104     0026                     ?___awdiv:	
  1105                           ; 1 bytes @ 0x6
  1106                           
  1107     0026                     Set_sec@sec:	
  1108                           ; 2 bytes @ 0x6
  1109                           
  1110     0026                     Set_min@min:	
  1111                           ; 1 bytes @ 0x6
  1112                           
  1113     0026                     Set_hour@hour:	
  1114                           ; 1 bytes @ 0x6
  1115                           
  1116     0026                     Set_day@day:	
  1117                           ; 1 bytes @ 0x6
  1118                           
  1119     0026                     Set_month@month:	
  1120                           ; 1 bytes @ 0x6
  1121                           
  1122     0026                     Set_year@year:	
  1123                           ; 1 bytes @ 0x6
  1124                           
  1125     0026                     Bcd_to_Dec@dec:	
  1126                           ; 1 bytes @ 0x6
  1127                           
  1128     0026                     Lcd_Set_Cursor@temp:	
  1129                           ; 1 bytes @ 0x6
  1130                           
  1131     0026                     ___awdiv@divisor:	
  1132                           ; 1 bytes @ 0x6
  1133                           
  1134                           
  1135                           ; 2 bytes @ 0x6
  1136     0026                     	ds	1
  1137     0027                     Bcd_to_Dec@bcd:
  1138     0027                     ___lwdiv@counter:	
  1139                           ; 1 bytes @ 0x7
  1140                           
  1141                           
  1142                           ; 1 bytes @ 0x7
  1143     0027                     	ds	1
  1144     0028                     ??___lldiv:
  1145     0028                     ?___lwmod:	
  1146                           ; 1 bytes @ 0x8
  1147                           
  1148     0028                     Read@address:	
  1149                           ; 2 bytes @ 0x8
  1150                           
  1151     0028                     Lcd_Write_String@i:	
  1152                           ; 1 bytes @ 0x8
  1153                           
  1154     0028                     ___awdiv@dividend:	
  1155                           ; 2 bytes @ 0x8
  1156                           
  1157     0028                     ___lwmod@divisor:	
  1158                           ; 2 bytes @ 0x8
  1159                           
  1160                           
  1161                           ; 2 bytes @ 0x8
  1162     0028                     	ds	1
  1163     0029                     Read@dato:
  1164     0029                     ___lldiv@quotient:	
  1165                           ; 1 bytes @ 0x9
  1166                           
  1167                           
  1168                           ; 4 bytes @ 0x9
  1169     0029                     	ds	1
  1170     002A                     ?_Read_Time:
  1171     002A                     ?_Read_Date:	
  1172                           ; 1 bytes @ 0xA
  1173                           
  1174     002A                     ??___awdiv:	
  1175                           ; 1 bytes @ 0xA
  1176                           
  1177     002A                     Read_Time@m:	
  1178                           ; 1 bytes @ 0xA
  1179                           
  1180     002A                     Read_Date@month:	
  1181                           ; 1 bytes @ 0xA
  1182                           
  1183     002A                     ___lwmod@dividend:	
  1184                           ; 1 bytes @ 0xA
  1185                           
  1186                           
  1187                           ; 2 bytes @ 0xA
  1188     002A                     	ds	1
  1189     002B                     Read_Time@h:
  1190     002B                     Read_Date@y:	
  1191                           ; 1 bytes @ 0xB
  1192                           
  1193     002B                     ___awdiv@counter:	
  1194                           ; 1 bytes @ 0xB
  1195                           
  1196                           
  1197                           ; 1 bytes @ 0xB
  1198     002B                     	ds	1
  1199     002C                     ??_Read_Time:
  1200     002C                     ??_Read_Date:	
  1201                           ; 1 bytes @ 0xC
  1202                           
  1203     002C                     ??___lwmod:	
  1204                           ; 1 bytes @ 0xC
  1205                           
  1206     002C                     Read_Time@s:	
  1207                           ; 1 bytes @ 0xC
  1208                           
  1209     002C                     Read_Date@d:	
  1210                           ; 1 bytes @ 0xC
  1211                           
  1212     002C                     ___awdiv@sign:	
  1213                           ; 1 bytes @ 0xC
  1214                           
  1215                           
  1216                           ; 1 bytes @ 0xC
  1217     002C                     	ds	1
  1218     002D                     ___lldiv@counter:
  1219     002D                     ___lwmod@counter:	
  1220                           ; 1 bytes @ 0xD
  1221                           
  1222     002D                     ___awdiv@quotient:	
  1223                           ; 1 bytes @ 0xD
  1224                           
  1225                           
  1226                           ; 2 bytes @ 0xD
  1227     002D                     	ds	1
  1228     002E                     ?_I2C_Master_Init:
  1229     002E                     ?_sprintf:	
  1230                           ; 1 bytes @ 0xE
  1231                           
  1232     002E                     sprintf@f:	
  1233                           ; 2 bytes @ 0xE
  1234                           
  1235     002E                     I2C_Master_Init@c:	
  1236                           ; 1 bytes @ 0xE
  1237                           
  1238                           
  1239                           ; 4 bytes @ 0xE
  1240     002E                     	ds	1
  1241     002F                     ?_map:
  1242     002F                     ?___awmod:	
  1243                           ; 2 bytes @ 0xF
  1244                           
  1245     002F                     map@inputmin:	
  1246                           ; 2 bytes @ 0xF
  1247                           
  1248     002F                     ___awmod@divisor:	
  1249                           ; 2 bytes @ 0xF
  1250                           
  1251                           
  1252                           ; 2 bytes @ 0xF
  1253     002F                     	ds	2
  1254     0031                     map@inputmax:
  1255     0031                     ___awmod@dividend:	
  1256                           ; 2 bytes @ 0x11
  1257                           
  1258                           
  1259                           ; 2 bytes @ 0x11
  1260     0031                     	ds	1
  1261     0032                     ??_I2C_Master_Init:
  1262                           
  1263                           ; 1 bytes @ 0x12
  1264     0032                     	ds	1
  1265     0033                     ??___awmod:
  1266     0033                     map@outmin:	
  1267                           ; 1 bytes @ 0x13
  1268                           
  1269                           
  1270                           ; 2 bytes @ 0x13
  1271     0033                     	ds	1
  1272     0034                     ___awmod@counter:
  1273                           
  1274                           ; 1 bytes @ 0x14
  1275     0034                     	ds	1
  1276     0035                     ??_sprintf:
  1277     0035                     ___awmod@sign:	
  1278                           ; 1 bytes @ 0x15
  1279                           
  1280     0035                     map@outmax:	
  1281                           ; 1 bytes @ 0x15
  1282                           
  1283                           
  1284                           ; 2 bytes @ 0x15
  1285     0035                     	ds	1
  1286     0036                     ??_setup:
  1287                           
  1288                           ; 1 bytes @ 0x16
  1289     0036                     	ds	1
  1290     0037                     ??_map:
  1291                           
  1292                           ; 1 bytes @ 0x17
  1293     0037                     	ds	1
  1294     0038                     map@value:
  1295     0038                     sprintf@prec:	
  1296                           ; 1 bytes @ 0x18
  1297                           
  1298                           
  1299                           ; 1 bytes @ 0x18
  1300     0038                     	ds	1
  1301     0039                     sprintf@ap:
  1302                           
  1303                           ; 1 bytes @ 0x19
  1304     0039                     	ds	1
  1305     003A                     sprintf@val:
  1306                           
  1307                           ; 2 bytes @ 0x1A
  1308     003A                     	ds	2
  1309     003C                     sprintf@flag:
  1310                           
  1311                           ; 1 bytes @ 0x1C
  1312     003C                     	ds	1
  1313     003D                     sprintf@width:
  1314                           
  1315                           ; 2 bytes @ 0x1D
  1316     003D                     	ds	2
  1317     003F                     sprintf@c:
  1318                           
  1319                           ; 1 bytes @ 0x1F
  1320     003F                     	ds	1
  1321     0040                     sprintf@sp:
  1322                           
  1323                           ; 1 bytes @ 0x20
  1324     0040                     	ds	1
  1325     0041                     ??_main:
  1326                           
  1327                           ; 1 bytes @ 0x21
  1328     0041                     	ds	6
  1329                           
  1330                           	psect	maintext
  1331     001D                     __pmaintext:	
  1332 ;;
  1333 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
  1334 ;;
  1335 ;; *************** function _main *****************
  1336 ;; Defined at:
  1337 ;;		line 72 in file "main.c"
  1338 ;; Parameters:    Size  Location     Type
  1339 ;;		None
  1340 ;; Auto vars:     Size  Location     Type
  1341 ;;		None
  1342 ;; Return value:  Size  Location     Type
  1343 ;;                  1    wreg      void 
  1344 ;; Registers used:
  1345 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1346 ;; Tracked objects:
  1347 ;;		On entry : B00/0
  1348 ;;		On exit  : 0/0
  1349 ;;		Unchanged: 0/0
  1350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1351 ;;      Params:         0       0       0       0       0
  1352 ;;      Locals:         0       0       0       0       0
  1353 ;;      Temps:          0       6       0       0       0
  1354 ;;      Totals:         0       6       0       0       0
  1355 ;;Total ram usage:        6 bytes
  1356 ;; Hardware stack levels required when called: 8
  1357 ;; This function calls:
  1358 ;;		_I2C_Master_Read
  1359 ;;		_I2C_Master_Start
  1360 ;;		_I2C_Master_Stop
  1361 ;;		_I2C_Master_Write
  1362 ;;		_Lcd_Clear
  1363 ;;		_Lcd_Init
  1364 ;;		_Lcd_Set_Cursor
  1365 ;;		_Lcd_Write_String
  1366 ;;		_Read_Date
  1367 ;;		_Read_Time
  1368 ;;		_Set_day
  1369 ;;		_Set_hour
  1370 ;;		_Set_min
  1371 ;;		_Set_month
  1372 ;;		_Set_sec
  1373 ;;		_Set_year
  1374 ;;		___awdiv
  1375 ;;		___awmod
  1376 ;;		___wmul
  1377 ;;		_map
  1378 ;;		_setup
  1379 ;;		_sprintf
  1380 ;; This function is called by:
  1381 ;;		Startup code after reset
  1382 ;; This function uses a non-reentrant model
  1383 ;;
  1384                           
  1385     001D                     _main:	
  1386                           ;psect for function _main
  1387                           
  1388     001D                     l2709:	
  1389                           ;incstack = 0
  1390                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1391                           
  1392                           
  1393                           ;main.c: 73:     setup();
  1394     001D  120A  158A  23FD  120A  118A  	fcall	_setup
  1395                           
  1396                           ;main.c: 76:     Lcd_Init();
  1397     0022  120A  158A  2515  120A  118A  	fcall	_Lcd_Init
  1398                           
  1399                           ;main.c: 77:     Lcd_Clear();
  1400     0027  160A  118A  271D  120A  118A  	fcall	_Lcd_Clear
  1401                           
  1402                           ;main.c: 79:     Lcd_Set_Cursor(1,1);
  1403     002C  1283               	bcf	3,5	;RP0=0, select bank0
  1404     002D  1303               	bcf	3,6	;RP1=0, select bank0
  1405     002E  01A4               	clrf	Lcd_Set_Cursor@b
  1406     002F  0AA4               	incf	Lcd_Set_Cursor@b,f
  1407     0030  3001               	movlw	1
  1408     0031  160A  118A  27B7  120A  118A  	fcall	_Lcd_Set_Cursor
  1409     0036                     l2711:
  1410                           
  1411                           ;main.c: 80:     Lcd_Write_String("S1:");
  1412     0036  3056               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1413     0037  1283               	bcf	3,5	;RP0=0, select bank0
  1414     0038  1303               	bcf	3,6	;RP1=0, select bank0
  1415     0039  00A3               	movwf	Lcd_Write_String@a
  1416     003A  3080               	movlw	128
  1417     003B  00A4               	movwf	Lcd_Write_String@a+1
  1418     003C  120A  158A  243A  120A  118A  	fcall	_Lcd_Write_String
  1419     0041                     l2713:
  1420                           
  1421                           ;main.c: 82:     Set_sec(0);
  1422     0041  3000               	movlw	0
  1423     0042  120A  158A  21F6  120A  118A  	fcall	_Set_sec
  1424     0047                     l2715:
  1425                           
  1426                           ;main.c: 83:     Set_min(0);
  1427     0047  3000               	movlw	0
  1428     0048  120A  158A  22A0  120A  118A  	fcall	_Set_min
  1429     004D                     l2717:
  1430                           
  1431                           ;main.c: 84:     Set_hour(12);
  1432     004D  300C               	movlw	12
  1433     004E  120A  158A  2267  120A  118A  	fcall	_Set_hour
  1434     0053                     l2719:
  1435                           
  1436                           ;main.c: 85:     Set_day(8);
  1437     0053  3008               	movlw	8
  1438     0054  120A  158A  222E  120A  118A  	fcall	_Set_day
  1439     0059                     l2721:
  1440                           
  1441                           ;main.c: 86:     Set_month(8);
  1442     0059  3008               	movlw	8
  1443     005A  120A  158A  22D9  120A  118A  	fcall	_Set_month
  1444     005F                     l2723:
  1445                           
  1446                           ;main.c: 87:     Set_year(23);
  1447     005F  3017               	movlw	23
  1448     0060  120A  158A  2312  120A  118A  	fcall	_Set_year
  1449     0065                     l2725:
  1450                           
  1451                           ;main.c: 95:         if (selector == 0){
  1452     0065  1283               	bcf	3,5	;RP0=0, select bank0
  1453     0066  1303               	bcf	3,6	;RP1=0, select bank0
  1454     0067  0850               	movf	_selector,w
  1455     0068  1D03               	btfss	3,2
  1456     0069  286B               	goto	u2621
  1457     006A  286C               	goto	u2620
  1458     006B                     u2621:
  1459     006B  29EE               	goto	l2765
  1460     006C                     u2620:
  1461     006C                     l2727:
  1462                           
  1463                           ;main.c: 96:             I2C_Master_Start();
  1464     006C  160A  118A  26F4  120A  118A  	fcall	_I2C_Master_Start
  1465                           
  1466                           ;main.c: 97:             I2C_Master_Write(0x51);
  1467     0071  3051               	movlw	81
  1468     0072  1283               	bcf	3,5	;RP0=0, select bank0
  1469     0073  1303               	bcf	3,6	;RP1=0, select bank0
  1470     0074  00A2               	movwf	I2C_Master_Write@d
  1471     0075  3000               	movlw	0
  1472     0076  00A3               	movwf	I2C_Master_Write@d+1
  1473     0077  120A  158A  2000  120A  118A  	fcall	_I2C_Master_Write
  1474                           
  1475                           ;main.c: 98:             voltaje1 = I2C_Master_Read(0);
  1476     007C  3000               	movlw	0
  1477     007D  1283               	bcf	3,5	;RP0=0, select bank0
  1478     007E  1303               	bcf	3,6	;RP1=0, select bank0
  1479     007F  00A0               	movwf	I2C_Master_Read@a
  1480     0080  00A1               	movwf	I2C_Master_Read@a+1
  1481     0081  120A  158A  2123  120A  118A  	fcall	_I2C_Master_Read
  1482     0086  1283               	bcf	3,5	;RP0=0, select bank0
  1483     0087  1303               	bcf	3,6	;RP1=0, select bank0
  1484     0088  0820               	movf	?_I2C_Master_Read,w
  1485     0089  00CF               	movwf	_voltaje1
  1486                           
  1487                           ;main.c: 99:             I2C_Master_Stop();
  1488     008A  160A  118A  26FD  120A  118A  	fcall	_I2C_Master_Stop
  1489     008F                     l2729:
  1490                           
  1491                           ;main.c: 100:             _delay((unsigned long)((200)*(8000000/4000.0)));
  1492     008F  3003               	movlw	3
  1493     0090  1283               	bcf	3,5	;RP0=0, select bank0
  1494     0091  1303               	bcf	3,6	;RP1=0, select bank0
  1495     0092  00C3               	movwf	??_main+2
  1496     0093  3008               	movlw	8
  1497     0094  00C2               	movwf	??_main+1
  1498     0095  3076               	movlw	118
  1499     0096  00C1               	movwf	??_main
  1500     0097                     u3317:
  1501     0097  0BC1               	decfsz	??_main,f
  1502     0098  2897               	goto	u3317
  1503     0099  0BC2               	decfsz	??_main+1,f
  1504     009A  2897               	goto	u3317
  1505     009B  0BC3               	decfsz	??_main+2,f
  1506     009C  2897               	goto	u3317
  1507     009D  0000               	nop
  1508     009E                     l2731:
  1509                           
  1510                           ;main.c: 102:             vol1 = map(voltaje1, 0, 255, 0, 100);
  1511     009E  3000               	movlw	0
  1512     009F  1283               	bcf	3,5	;RP0=0, select bank0
  1513     00A0  1303               	bcf	3,6	;RP1=0, select bank0
  1514     00A1  00AF               	movwf	map@inputmin
  1515     00A2  00B0               	movwf	map@inputmin+1
  1516     00A3  30FF               	movlw	255
  1517     00A4  00B1               	movwf	map@inputmax
  1518     00A5  3000               	movlw	0
  1519     00A6  00B2               	movwf	map@inputmax+1
  1520     00A7  3000               	movlw	0
  1521     00A8  00B3               	movwf	map@outmin
  1522     00A9  00B4               	movwf	map@outmin+1
  1523     00AA  3064               	movlw	100
  1524     00AB  00B5               	movwf	map@outmax
  1525     00AC  3000               	movlw	0
  1526     00AD  00B6               	movwf	map@outmax+1
  1527     00AE  084F               	movf	_voltaje1,w
  1528     00AF  120A  158A  21BF  120A  118A  	fcall	_map
  1529     00B4  1283               	bcf	3,5	;RP0=0, select bank0
  1530     00B5  1303               	bcf	3,6	;RP1=0, select bank0
  1531     00B6  0830               	movf	?_map+1,w
  1532     00B7  00CE               	movwf	_vol1+1
  1533     00B8  082F               	movf	?_map,w
  1534     00B9  00CD               	movwf	_vol1
  1535     00BA                     l2733:
  1536                           
  1537                           ;main.c: 103:             unidad1 = (vol1*5)/100;
  1538     00BA  3064               	movlw	100
  1539     00BB  00A6               	movwf	___awdiv@divisor
  1540     00BC  3000               	movlw	0
  1541     00BD  00A7               	movwf	___awdiv@divisor+1
  1542     00BE  084E               	movf	_vol1+1,w
  1543     00BF  00A1               	movwf	___wmul@multiplier+1
  1544     00C0  084D               	movf	_vol1,w
  1545     00C1  00A0               	movwf	___wmul@multiplier
  1546     00C2  3005               	movlw	5
  1547     00C3  00A2               	movwf	___wmul@multiplicand
  1548     00C4  3000               	movlw	0
  1549     00C5  00A3               	movwf	___wmul@multiplicand+1
  1550     00C6  160A  118A  27D9  120A  118A  	fcall	___wmul
  1551     00CB  1283               	bcf	3,5	;RP0=0, select bank0
  1552     00CC  1303               	bcf	3,6	;RP1=0, select bank0
  1553     00CD  0821               	movf	?___wmul+1,w
  1554     00CE  00A9               	movwf	___awdiv@dividend+1
  1555     00CF  0820               	movf	?___wmul,w
  1556     00D0  00A8               	movwf	___awdiv@dividend
  1557     00D1  120A  118A  277E  120A  118A  	fcall	___awdiv
  1558     00D6  1283               	bcf	3,5	;RP0=0, select bank0
  1559     00D7  1303               	bcf	3,6	;RP1=0, select bank0
  1560     00D8  0827               	movf	?___awdiv+1,w
  1561     00D9  00CC               	movwf	_unidad1+1
  1562     00DA  0826               	movf	?___awdiv,w
  1563     00DB  00CB               	movwf	_unidad1
  1564     00DC                     l2735:
  1565                           
  1566                           ;main.c: 104:             decima1 = ((vol1*5)/10)%10;
  1567     00DC  300A               	movlw	10
  1568     00DD  00AF               	movwf	___awmod@divisor
  1569     00DE  3000               	movlw	0
  1570     00DF  00B0               	movwf	___awmod@divisor+1
  1571     00E0  300A               	movlw	10
  1572     00E1  00A6               	movwf	___awdiv@divisor
  1573     00E2  3000               	movlw	0
  1574     00E3  00A7               	movwf	___awdiv@divisor+1
  1575     00E4  084E               	movf	_vol1+1,w
  1576     00E5  00A1               	movwf	___wmul@multiplier+1
  1577     00E6  084D               	movf	_vol1,w
  1578     00E7  00A0               	movwf	___wmul@multiplier
  1579     00E8  3005               	movlw	5
  1580     00E9  00A2               	movwf	___wmul@multiplicand
  1581     00EA  3000               	movlw	0
  1582     00EB  00A3               	movwf	___wmul@multiplicand+1
  1583     00EC  160A  118A  27D9  120A  118A  	fcall	___wmul
  1584     00F1  1283               	bcf	3,5	;RP0=0, select bank0
  1585     00F2  1303               	bcf	3,6	;RP1=0, select bank0
  1586     00F3  0821               	movf	?___wmul+1,w
  1587     00F4  00A9               	movwf	___awdiv@dividend+1
  1588     00F5  0820               	movf	?___wmul,w
  1589     00F6  00A8               	movwf	___awdiv@dividend
  1590     00F7  120A  118A  277E  120A  118A  	fcall	___awdiv
  1591     00FC  1283               	bcf	3,5	;RP0=0, select bank0
  1592     00FD  1303               	bcf	3,6	;RP1=0, select bank0
  1593     00FE  0827               	movf	?___awdiv+1,w
  1594     00FF  00B2               	movwf	___awmod@dividend+1
  1595     0100  0826               	movf	?___awdiv,w
  1596     0101  00B1               	movwf	___awmod@dividend
  1597     0102  120A  158A  256E  120A  118A  	fcall	___awmod
  1598     0107  1283               	bcf	3,5	;RP0=0, select bank0
  1599     0108  1303               	bcf	3,6	;RP1=0, select bank0
  1600     0109  0830               	movf	?___awmod+1,w
  1601     010A  00CA               	movwf	_decima1+1
  1602     010B  082F               	movf	?___awmod,w
  1603     010C  00C9               	movwf	_decima1
  1604     010D                     l2737:
  1605                           
  1606                           ;main.c: 105:             centesima1 = (vol1*5)%10;
  1607     010D  300A               	movlw	10
  1608     010E  00AF               	movwf	___awmod@divisor
  1609     010F  3000               	movlw	0
  1610     0110  00B0               	movwf	___awmod@divisor+1
  1611     0111  084E               	movf	_vol1+1,w
  1612     0112  00A1               	movwf	___wmul@multiplier+1
  1613     0113  084D               	movf	_vol1,w
  1614     0114  00A0               	movwf	___wmul@multiplier
  1615     0115  3005               	movlw	5
  1616     0116  00A2               	movwf	___wmul@multiplicand
  1617     0117  3000               	movlw	0
  1618     0118  00A3               	movwf	___wmul@multiplicand+1
  1619     0119  160A  118A  27D9  120A  118A  	fcall	___wmul
  1620     011E  1283               	bcf	3,5	;RP0=0, select bank0
  1621     011F  1303               	bcf	3,6	;RP1=0, select bank0
  1622     0120  0821               	movf	?___wmul+1,w
  1623     0121  00B2               	movwf	___awmod@dividend+1
  1624     0122  0820               	movf	?___wmul,w
  1625     0123  00B1               	movwf	___awmod@dividend
  1626     0124  120A  158A  256E  120A  118A  	fcall	___awmod
  1627     0129  1283               	bcf	3,5	;RP0=0, select bank0
  1628     012A  1303               	bcf	3,6	;RP1=0, select bank0
  1629     012B  0830               	movf	?___awmod+1,w
  1630     012C  00C8               	movwf	_centesima1+1
  1631     012D  082F               	movf	?___awmod,w
  1632     012E  00C7               	movwf	_centesima1
  1633     012F                     l2739:
  1634                           
  1635                           ;main.c: 106:             Lcd_Set_Cursor(2,1);
  1636     012F  01A4               	clrf	Lcd_Set_Cursor@b
  1637     0130  0AA4               	incf	Lcd_Set_Cursor@b,f
  1638     0131  3002               	movlw	2
  1639     0132  160A  118A  27B7  120A  118A  	fcall	_Lcd_Set_Cursor
  1640     0137                     l2741:
  1641                           
  1642                           ;main.c: 107:             sprintf(buffer, "%d.%d%dV" , unidad1 , decima1 , centesima1 );
  1643     0137  304D               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1644     0138  1283               	bcf	3,5	;RP0=0, select bank0
  1645     0139  1303               	bcf	3,6	;RP1=0, select bank0
  1646     013A  00AE               	movwf	sprintf@f
  1647     013B  084C               	movf	_unidad1+1,w
  1648     013C  00B0               	movwf	?_sprintf+2
  1649     013D  084B               	movf	_unidad1,w
  1650     013E  00AF               	movwf	?_sprintf+1
  1651     013F  084A               	movf	_decima1+1,w
  1652     0140  00B2               	movwf	?_sprintf+4
  1653     0141  0849               	movf	_decima1,w
  1654     0142  00B1               	movwf	?_sprintf+3
  1655     0143  0848               	movf	_centesima1+1,w
  1656     0144  00B4               	movwf	?_sprintf+6
  1657     0145  0847               	movf	_centesima1,w
  1658     0146  00B3               	movwf	?_sprintf+5
  1659     0147  3051               	movlw	(low (_buffer| 0))& (0+255)
  1660     0148  120A  158A  2629  120A  118A  	fcall	_sprintf
  1661     014D                     l2743:
  1662                           
  1663                           ;main.c: 108:             Lcd_Write_String(buffer);
  1664     014D  3051               	movlw	(low (_buffer| 0))& (0+255)
  1665     014E  1283               	bcf	3,5	;RP0=0, select bank0
  1666     014F  1303               	bcf	3,6	;RP1=0, select bank0
  1667     0150  00A3               	movwf	Lcd_Write_String@a
  1668     0151  3000               	movlw	0
  1669     0152  00A4               	movwf	Lcd_Write_String@a+1
  1670     0153  120A  158A  243A  120A  118A  	fcall	_Lcd_Write_String
  1671     0158                     l2745:
  1672                           
  1673                           ;main.c: 110:             Read_Time(&segundo, &minuto, &hora);
  1674     0158  3069               	movlw	(low (_minuto| 0))& (0+255)
  1675     0159  1283               	bcf	3,5	;RP0=0, select bank0
  1676     015A  1303               	bcf	3,6	;RP1=0, select bank0
  1677     015B  00AA               	movwf	Read_Time@m
  1678     015C  3068               	movlw	(low (_hora| 0))& (0+255)
  1679     015D  00AB               	movwf	Read_Time@h
  1680     015E  306A               	movlw	(low (_segundo| 0))& (0+255)
  1681     015F  120A  158A  218A  120A  118A  	fcall	_Read_Time
  1682     0164                     l2747:
  1683                           
  1684                           ;main.c: 111:             Lcd_Set_Cursor(1,8);
  1685     0164  3008               	movlw	8
  1686     0165  1283               	bcf	3,5	;RP0=0, select bank0
  1687     0166  1303               	bcf	3,6	;RP1=0, select bank0
  1688     0167  00A4               	movwf	Lcd_Set_Cursor@b
  1689     0168  3001               	movlw	1
  1690     0169  160A  118A  27B7  120A  118A  	fcall	_Lcd_Set_Cursor
  1691     016E                     l2749:
  1692                           
  1693                           ;main.c: 112:             sprintf(buffer, "%02u:%02u:%02u" , hora, minuto, segundo);
  1694     016E  303E               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1695     016F  1283               	bcf	3,5	;RP0=0, select bank0
  1696     0170  1303               	bcf	3,6	;RP1=0, select bank0
  1697     0171  00AE               	movwf	sprintf@f
  1698     0172  0868               	movf	_hora,w
  1699     0173  00C1               	movwf	??_main
  1700     0174  01C2               	clrf	??_main+1
  1701     0175  0841               	movf	??_main,w
  1702     0176  00AF               	movwf	?_sprintf+1
  1703     0177  0842               	movf	??_main+1,w
  1704     0178  00B0               	movwf	?_sprintf+2
  1705     0179  0869               	movf	_minuto,w
  1706     017A  00C3               	movwf	??_main+2
  1707     017B  01C4               	clrf	??_main+3
  1708     017C  0843               	movf	??_main+2,w
  1709     017D  00B1               	movwf	?_sprintf+3
  1710     017E  0844               	movf	??_main+3,w
  1711     017F  00B2               	movwf	?_sprintf+4
  1712     0180  086A               	movf	_segundo,w
  1713     0181  00C5               	movwf	??_main+4
  1714     0182  01C6               	clrf	??_main+5
  1715     0183  0845               	movf	??_main+4,w
  1716     0184  00B3               	movwf	?_sprintf+5
  1717     0185  0846               	movf	??_main+5,w
  1718     0186  00B4               	movwf	?_sprintf+6
  1719     0187  3051               	movlw	(low (_buffer| 0))& (0+255)
  1720     0188  120A  158A  2629  120A  118A  	fcall	_sprintf
  1721     018D                     l2751:
  1722                           
  1723                           ;main.c: 113:             Lcd_Write_String(buffer);
  1724     018D  3051               	movlw	(low (_buffer| 0))& (0+255)
  1725     018E  1283               	bcf	3,5	;RP0=0, select bank0
  1726     018F  1303               	bcf	3,6	;RP1=0, select bank0
  1727     0190  00A3               	movwf	Lcd_Write_String@a
  1728     0191  3000               	movlw	0
  1729     0192  00A4               	movwf	Lcd_Write_String@a+1
  1730     0193  120A  158A  243A  120A  118A  	fcall	_Lcd_Write_String
  1731     0198                     l2753:
  1732                           
  1733                           ;main.c: 115:             Read_Date(&dia, &mes, &ano);
  1734     0198  3066               	movlw	(low (_mes| 0))& (0+255)
  1735     0199  1283               	bcf	3,5	;RP0=0, select bank0
  1736     019A  1303               	bcf	3,6	;RP1=0, select bank0
  1737     019B  00AA               	movwf	Read_Date@month
  1738     019C  3065               	movlw	(low (_ano| 0))& (0+255)
  1739     019D  00AB               	movwf	Read_Date@y
  1740     019E  3067               	movlw	(low (_dia| 0))& (0+255)
  1741     019F  120A  158A  2155  120A  118A  	fcall	_Read_Date
  1742     01A4                     l2755:
  1743                           
  1744                           ;main.c: 116:             Lcd_Set_Cursor(2,7);
  1745     01A4  3007               	movlw	7
  1746     01A5  1283               	bcf	3,5	;RP0=0, select bank0
  1747     01A6  1303               	bcf	3,6	;RP1=0, select bank0
  1748     01A7  00A4               	movwf	Lcd_Set_Cursor@b
  1749     01A8  3002               	movlw	2
  1750     01A9  160A  118A  27B7  120A  118A  	fcall	_Lcd_Set_Cursor
  1751     01AE                     l2757:
  1752                           
  1753                           ;main.c: 117:             sprintf(buffer, "%02u/%02u/20%02u" , dia, mes, ano);
  1754     01AE  301D               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1755     01AF  1283               	bcf	3,5	;RP0=0, select bank0
  1756     01B0  1303               	bcf	3,6	;RP1=0, select bank0
  1757     01B1  00AE               	movwf	sprintf@f
  1758     01B2  0867               	movf	_dia,w
  1759     01B3  00C1               	movwf	??_main
  1760     01B4  01C2               	clrf	??_main+1
  1761     01B5  0841               	movf	??_main,w
  1762     01B6  00AF               	movwf	?_sprintf+1
  1763     01B7  0842               	movf	??_main+1,w
  1764     01B8  00B0               	movwf	?_sprintf+2
  1765     01B9  0866               	movf	_mes,w
  1766     01BA  00C3               	movwf	??_main+2
  1767     01BB  01C4               	clrf	??_main+3
  1768     01BC  0843               	movf	??_main+2,w
  1769     01BD  00B1               	movwf	?_sprintf+3
  1770     01BE  0844               	movf	??_main+3,w
  1771     01BF  00B2               	movwf	?_sprintf+4
  1772     01C0  0865               	movf	_ano,w
  1773     01C1  00C5               	movwf	??_main+4
  1774     01C2  01C6               	clrf	??_main+5
  1775     01C3  0845               	movf	??_main+4,w
  1776     01C4  00B3               	movwf	?_sprintf+5
  1777     01C5  0846               	movf	??_main+5,w
  1778     01C6  00B4               	movwf	?_sprintf+6
  1779     01C7  3051               	movlw	(low (_buffer| 0))& (0+255)
  1780     01C8  120A  158A  2629  120A  118A  	fcall	_sprintf
  1781     01CD                     l2759:
  1782                           
  1783                           ;main.c: 118:             Lcd_Write_String(buffer);
  1784     01CD  3051               	movlw	(low (_buffer| 0))& (0+255)
  1785     01CE  1283               	bcf	3,5	;RP0=0, select bank0
  1786     01CF  1303               	bcf	3,6	;RP1=0, select bank0
  1787     01D0  00A3               	movwf	Lcd_Write_String@a
  1788     01D1  3000               	movlw	0
  1789     01D2  00A4               	movwf	Lcd_Write_String@a+1
  1790     01D3  120A  158A  243A  120A  118A  	fcall	_Lcd_Write_String
  1791     01D8                     l2761:
  1792                           
  1793                           ;main.c: 120:             Lcd_Set_Cursor(1,5);
  1794     01D8  3005               	movlw	5
  1795     01D9  1283               	bcf	3,5	;RP0=0, select bank0
  1796     01DA  1303               	bcf	3,6	;RP1=0, select bank0
  1797     01DB  00A4               	movwf	Lcd_Set_Cursor@b
  1798     01DC  3001               	movlw	1
  1799     01DD  160A  118A  27B7  120A  118A  	fcall	_Lcd_Set_Cursor
  1800     01E2                     l2763:
  1801                           
  1802                           ;main.c: 121:             Lcd_Write_String("N ");
  1803     01E2  3066               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1804     01E3  1283               	bcf	3,5	;RP0=0, select bank0
  1805     01E4  1303               	bcf	3,6	;RP1=0, select bank0
  1806     01E5  00A3               	movwf	Lcd_Write_String@a
  1807     01E6  3080               	movlw	128
  1808     01E7  00A4               	movwf	Lcd_Write_String@a+1
  1809     01E8  120A  158A  243A  120A  118A  	fcall	_Lcd_Write_String
  1810                           
  1811                           ;main.c: 122:         }
  1812     01ED  2865               	goto	l2725
  1813     01EE                     l2765:
  1814     01EE  0350               	decf	_selector,w
  1815     01EF  1D03               	btfss	3,2
  1816     01F0  29F2               	goto	u2631
  1817     01F1  29F3               	goto	u2630
  1818     01F2                     u2631:
  1819     01F2  2A3B               	goto	l2775
  1820     01F3                     u2630:
  1821     01F3                     l2767:
  1822                           
  1823                           ;main.c: 124:             Lcd_Set_Cursor(2,7);
  1824     01F3  3007               	movlw	7
  1825     01F4  00A4               	movwf	Lcd_Set_Cursor@b
  1826     01F5  3002               	movlw	2
  1827     01F6  160A  118A  27B7  120A  118A  	fcall	_Lcd_Set_Cursor
  1828     01FB                     l2769:
  1829                           
  1830                           ;main.c: 125:             sprintf(buffer, "%02u/%02u/20%02u", dia, mes, ano);
  1831     01FB  301D               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1832     01FC  1283               	bcf	3,5	;RP0=0, select bank0
  1833     01FD  1303               	bcf	3,6	;RP1=0, select bank0
  1834     01FE  00AE               	movwf	sprintf@f
  1835     01FF  0867               	movf	_dia,w
  1836     0200  00C1               	movwf	??_main
  1837     0201  01C2               	clrf	??_main+1
  1838     0202  0841               	movf	??_main,w
  1839     0203  00AF               	movwf	?_sprintf+1
  1840     0204  0842               	movf	??_main+1,w
  1841     0205  00B0               	movwf	?_sprintf+2
  1842     0206  0866               	movf	_mes,w
  1843     0207  00C3               	movwf	??_main+2
  1844     0208  01C4               	clrf	??_main+3
  1845     0209  0843               	movf	??_main+2,w
  1846     020A  00B1               	movwf	?_sprintf+3
  1847     020B  0844               	movf	??_main+3,w
  1848     020C  00B2               	movwf	?_sprintf+4
  1849     020D  0865               	movf	_ano,w
  1850     020E  00C5               	movwf	??_main+4
  1851     020F  01C6               	clrf	??_main+5
  1852     0210  0845               	movf	??_main+4,w
  1853     0211  00B3               	movwf	?_sprintf+5
  1854     0212  0846               	movf	??_main+5,w
  1855     0213  00B4               	movwf	?_sprintf+6
  1856     0214  3051               	movlw	(low (_buffer| 0))& (0+255)
  1857     0215  120A  158A  2629  120A  118A  	fcall	_sprintf
  1858     021A                     l2771:
  1859                           
  1860                           ;main.c: 126:             Lcd_Write_String(buffer);
  1861     021A  3051               	movlw	(low (_buffer| 0))& (0+255)
  1862     021B  1283               	bcf	3,5	;RP0=0, select bank0
  1863     021C  1303               	bcf	3,6	;RP1=0, select bank0
  1864     021D  00A3               	movwf	Lcd_Write_String@a
  1865     021E  3000               	movlw	0
  1866     021F  00A4               	movwf	Lcd_Write_String@a+1
  1867     0220  120A  158A  243A  120A  118A  	fcall	_Lcd_Write_String
  1868                           
  1869                           ;main.c: 127:             Lcd_Set_Cursor(1,5);
  1870     0225  3005               	movlw	5
  1871     0226  1283               	bcf	3,5	;RP0=0, select bank0
  1872     0227  1303               	bcf	3,6	;RP1=0, select bank0
  1873     0228  00A4               	movwf	Lcd_Set_Cursor@b
  1874     0229  3001               	movlw	1
  1875     022A  160A  118A  27B7  120A  118A  	fcall	_Lcd_Set_Cursor
  1876     022F                     l2773:
  1877                           
  1878                           ;main.c: 128:             Lcd_Write_String("D ");
  1879     022F  305D               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1880     0230  1283               	bcf	3,5	;RP0=0, select bank0
  1881     0231  1303               	bcf	3,6	;RP1=0, select bank0
  1882     0232  00A3               	movwf	Lcd_Write_String@a
  1883     0233  3080               	movlw	128
  1884     0234  00A4               	movwf	Lcd_Write_String@a+1
  1885     0235  120A  158A  243A  120A  118A  	fcall	_Lcd_Write_String
  1886                           
  1887                           ;main.c: 129:         }
  1888     023A  2865               	goto	l2725
  1889     023B                     l2775:
  1890     023B  3002               	movlw	2
  1891     023C  0650               	xorwf	_selector,w
  1892     023D  1D03               	btfss	3,2
  1893     023E  2A40               	goto	u2641
  1894     023F  2A41               	goto	u2640
  1895     0240                     u2641:
  1896     0240  2A89               	goto	l2785
  1897     0241                     u2640:
  1898     0241                     l2777:
  1899                           
  1900                           ;main.c: 131:             Lcd_Set_Cursor(2,7);
  1901     0241  3007               	movlw	7
  1902     0242  00A4               	movwf	Lcd_Set_Cursor@b
  1903     0243  3002               	movlw	2
  1904     0244  160A  118A  27B7  120A  118A  	fcall	_Lcd_Set_Cursor
  1905     0249                     l2779:
  1906                           
  1907                           ;main.c: 132:             sprintf(buffer, "%02u/%02u/20%02u ", dia, mes, ano);
  1908     0249  300B               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1909     024A  1283               	bcf	3,5	;RP0=0, select bank0
  1910     024B  1303               	bcf	3,6	;RP1=0, select bank0
  1911     024C  00AE               	movwf	sprintf@f
  1912     024D  0867               	movf	_dia,w
  1913     024E  00C1               	movwf	??_main
  1914     024F  01C2               	clrf	??_main+1
  1915     0250  0841               	movf	??_main,w
  1916     0251  00AF               	movwf	?_sprintf+1
  1917     0252  0842               	movf	??_main+1,w
  1918     0253  00B0               	movwf	?_sprintf+2
  1919     0254  0866               	movf	_mes,w
  1920     0255  00C3               	movwf	??_main+2
  1921     0256  01C4               	clrf	??_main+3
  1922     0257  0843               	movf	??_main+2,w
  1923     0258  00B1               	movwf	?_sprintf+3
  1924     0259  0844               	movf	??_main+3,w
  1925     025A  00B2               	movwf	?_sprintf+4
  1926     025B  0865               	movf	_ano,w
  1927     025C  00C5               	movwf	??_main+4
  1928     025D  01C6               	clrf	??_main+5
  1929     025E  0845               	movf	??_main+4,w
  1930     025F  00B3               	movwf	?_sprintf+5
  1931     0260  0846               	movf	??_main+5,w
  1932     0261  00B4               	movwf	?_sprintf+6
  1933     0262  3051               	movlw	(low (_buffer| 0))& (0+255)
  1934     0263  120A  158A  2629  120A  118A  	fcall	_sprintf
  1935     0268                     l2781:
  1936                           
  1937                           ;main.c: 133:             Lcd_Write_String(buffer);
  1938     0268  3051               	movlw	(low (_buffer| 0))& (0+255)
  1939     0269  1283               	bcf	3,5	;RP0=0, select bank0
  1940     026A  1303               	bcf	3,6	;RP1=0, select bank0
  1941     026B  00A3               	movwf	Lcd_Write_String@a
  1942     026C  3000               	movlw	0
  1943     026D  00A4               	movwf	Lcd_Write_String@a+1
  1944     026E  120A  158A  243A  120A  118A  	fcall	_Lcd_Write_String
  1945                           
  1946                           ;main.c: 134:             Lcd_Set_Cursor(1,5);
  1947     0273  3005               	movlw	5
  1948     0274  1283               	bcf	3,5	;RP0=0, select bank0
  1949     0275  1303               	bcf	3,6	;RP1=0, select bank0
  1950     0276  00A4               	movwf	Lcd_Set_Cursor@b
  1951     0277  3001               	movlw	1
  1952     0278  160A  118A  27B7  120A  118A  	fcall	_Lcd_Set_Cursor
  1953     027D                     l2783:
  1954                           
  1955                           ;main.c: 135:             Lcd_Write_String("M ");
  1956     027D  3063               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1957     027E  1283               	bcf	3,5	;RP0=0, select bank0
  1958     027F  1303               	bcf	3,6	;RP1=0, select bank0
  1959     0280  00A3               	movwf	Lcd_Write_String@a
  1960     0281  3080               	movlw	128
  1961     0282  00A4               	movwf	Lcd_Write_String@a+1
  1962     0283  120A  158A  243A  120A  118A  	fcall	_Lcd_Write_String
  1963                           
  1964                           ;main.c: 136:         }
  1965     0288  2865               	goto	l2725
  1966     0289                     l2785:
  1967     0289  3003               	movlw	3
  1968     028A  0650               	xorwf	_selector,w
  1969     028B  1D03               	btfss	3,2
  1970     028C  2A8E               	goto	u2651
  1971     028D  2A8F               	goto	u2650
  1972     028E                     u2651:
  1973     028E  2AD7               	goto	l2795
  1974     028F                     u2650:
  1975     028F                     l2787:
  1976                           
  1977                           ;main.c: 138:             Lcd_Set_Cursor(2,7);
  1978     028F  3007               	movlw	7
  1979     0290  00A4               	movwf	Lcd_Set_Cursor@b
  1980     0291  3002               	movlw	2
  1981     0292  160A  118A  27B7  120A  118A  	fcall	_Lcd_Set_Cursor
  1982     0297                     l2789:
  1983                           
  1984                           ;main.c: 139:             sprintf(buffer, "%02u/%02u/20%02u ", dia, mes, ano);
  1985     0297  300B               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1986     0298  1283               	bcf	3,5	;RP0=0, select bank0
  1987     0299  1303               	bcf	3,6	;RP1=0, select bank0
  1988     029A  00AE               	movwf	sprintf@f
  1989     029B  0867               	movf	_dia,w
  1990     029C  00C1               	movwf	??_main
  1991     029D  01C2               	clrf	??_main+1
  1992     029E  0841               	movf	??_main,w
  1993     029F  00AF               	movwf	?_sprintf+1
  1994     02A0  0842               	movf	??_main+1,w
  1995     02A1  00B0               	movwf	?_sprintf+2
  1996     02A2  0866               	movf	_mes,w
  1997     02A3  00C3               	movwf	??_main+2
  1998     02A4  01C4               	clrf	??_main+3
  1999     02A5  0843               	movf	??_main+2,w
  2000     02A6  00B1               	movwf	?_sprintf+3
  2001     02A7  0844               	movf	??_main+3,w
  2002     02A8  00B2               	movwf	?_sprintf+4
  2003     02A9  0865               	movf	_ano,w
  2004     02AA  00C5               	movwf	??_main+4
  2005     02AB  01C6               	clrf	??_main+5
  2006     02AC  0845               	movf	??_main+4,w
  2007     02AD  00B3               	movwf	?_sprintf+5
  2008     02AE  0846               	movf	??_main+5,w
  2009     02AF  00B4               	movwf	?_sprintf+6
  2010     02B0  3051               	movlw	(low (_buffer| 0))& (0+255)
  2011     02B1  120A  158A  2629  120A  118A  	fcall	_sprintf
  2012     02B6                     l2791:
  2013                           
  2014                           ;main.c: 140:             Lcd_Write_String(buffer);
  2015     02B6  3051               	movlw	(low (_buffer| 0))& (0+255)
  2016     02B7  1283               	bcf	3,5	;RP0=0, select bank0
  2017     02B8  1303               	bcf	3,6	;RP1=0, select bank0
  2018     02B9  00A3               	movwf	Lcd_Write_String@a
  2019     02BA  3000               	movlw	0
  2020     02BB  00A4               	movwf	Lcd_Write_String@a+1
  2021     02BC  120A  158A  243A  120A  118A  	fcall	_Lcd_Write_String
  2022                           
  2023                           ;main.c: 141:             Lcd_Set_Cursor(1,5);
  2024     02C1  3005               	movlw	5
  2025     02C2  1283               	bcf	3,5	;RP0=0, select bank0
  2026     02C3  1303               	bcf	3,6	;RP1=0, select bank0
  2027     02C4  00A4               	movwf	Lcd_Set_Cursor@b
  2028     02C5  3001               	movlw	1
  2029     02C6  160A  118A  27B7  120A  118A  	fcall	_Lcd_Set_Cursor
  2030     02CB                     l2793:
  2031                           
  2032                           ;main.c: 142:             Lcd_Write_String("A ");
  2033     02CB  305A               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  2034     02CC  1283               	bcf	3,5	;RP0=0, select bank0
  2035     02CD  1303               	bcf	3,6	;RP1=0, select bank0
  2036     02CE  00A3               	movwf	Lcd_Write_String@a
  2037     02CF  3080               	movlw	128
  2038     02D0  00A4               	movwf	Lcd_Write_String@a+1
  2039     02D1  120A  158A  243A  120A  118A  	fcall	_Lcd_Write_String
  2040                           
  2041                           ;main.c: 143:         }
  2042     02D6  2865               	goto	l2725
  2043     02D7                     l2795:
  2044     02D7  3004               	movlw	4
  2045     02D8  0650               	xorwf	_selector,w
  2046     02D9  1D03               	btfss	3,2
  2047     02DA  2ADC               	goto	u2661
  2048     02DB  2ADD               	goto	u2660
  2049     02DC                     u2661:
  2050     02DC  2B25               	goto	l2805
  2051     02DD                     u2660:
  2052     02DD                     l2797:
  2053                           
  2054                           ;main.c: 145:             Lcd_Set_Cursor(1,8);
  2055     02DD  3008               	movlw	8
  2056     02DE  00A4               	movwf	Lcd_Set_Cursor@b
  2057     02DF  3001               	movlw	1
  2058     02E0  160A  118A  27B7  120A  118A  	fcall	_Lcd_Set_Cursor
  2059     02E5                     l2799:
  2060                           
  2061                           ;main.c: 146:             sprintf(buffer, "%02u:%02u:%02u ", hora, minuto, segundo);
  2062     02E5  302E               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  2063     02E6  1283               	bcf	3,5	;RP0=0, select bank0
  2064     02E7  1303               	bcf	3,6	;RP1=0, select bank0
  2065     02E8  00AE               	movwf	sprintf@f
  2066     02E9  0868               	movf	_hora,w
  2067     02EA  00C1               	movwf	??_main
  2068     02EB  01C2               	clrf	??_main+1
  2069     02EC  0841               	movf	??_main,w
  2070     02ED  00AF               	movwf	?_sprintf+1
  2071     02EE  0842               	movf	??_main+1,w
  2072     02EF  00B0               	movwf	?_sprintf+2
  2073     02F0  0869               	movf	_minuto,w
  2074     02F1  00C3               	movwf	??_main+2
  2075     02F2  01C4               	clrf	??_main+3
  2076     02F3  0843               	movf	??_main+2,w
  2077     02F4  00B1               	movwf	?_sprintf+3
  2078     02F5  0844               	movf	??_main+3,w
  2079     02F6  00B2               	movwf	?_sprintf+4
  2080     02F7  086A               	movf	_segundo,w
  2081     02F8  00C5               	movwf	??_main+4
  2082     02F9  01C6               	clrf	??_main+5
  2083     02FA  0845               	movf	??_main+4,w
  2084     02FB  00B3               	movwf	?_sprintf+5
  2085     02FC  0846               	movf	??_main+5,w
  2086     02FD  00B4               	movwf	?_sprintf+6
  2087     02FE  3051               	movlw	(low (_buffer| 0))& (0+255)
  2088     02FF  120A  158A  2629  120A  118A  	fcall	_sprintf
  2089     0304                     l2801:
  2090                           
  2091                           ;main.c: 147:             Lcd_Write_String(buffer);
  2092     0304  3051               	movlw	(low (_buffer| 0))& (0+255)
  2093     0305  1283               	bcf	3,5	;RP0=0, select bank0
  2094     0306  1303               	bcf	3,6	;RP1=0, select bank0
  2095     0307  00A3               	movwf	Lcd_Write_String@a
  2096     0308  3000               	movlw	0
  2097     0309  00A4               	movwf	Lcd_Write_String@a+1
  2098     030A  120A  158A  243A  120A  118A  	fcall	_Lcd_Write_String
  2099                           
  2100                           ;main.c: 148:             Lcd_Set_Cursor(1,5);
  2101     030F  3005               	movlw	5
  2102     0310  1283               	bcf	3,5	;RP0=0, select bank0
  2103     0311  1303               	bcf	3,6	;RP1=0, select bank0
  2104     0312  00A4               	movwf	Lcd_Set_Cursor@b
  2105     0313  3001               	movlw	1
  2106     0314  160A  118A  27B7  120A  118A  	fcall	_Lcd_Set_Cursor
  2107     0319                     l2803:
  2108                           
  2109                           ;main.c: 149:             Lcd_Write_String("H ");
  2110     0319  3060               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  2111     031A  1283               	bcf	3,5	;RP0=0, select bank0
  2112     031B  1303               	bcf	3,6	;RP1=0, select bank0
  2113     031C  00A3               	movwf	Lcd_Write_String@a
  2114     031D  3080               	movlw	128
  2115     031E  00A4               	movwf	Lcd_Write_String@a+1
  2116     031F  120A  158A  243A  120A  118A  	fcall	_Lcd_Write_String
  2117                           
  2118                           ;main.c: 150:         }
  2119     0324  2865               	goto	l2725
  2120     0325                     l2805:
  2121     0325  3005               	movlw	5
  2122     0326  0650               	xorwf	_selector,w
  2123     0327  1D03               	btfss	3,2
  2124     0328  2B2A               	goto	u2671
  2125     0329  2B2B               	goto	u2670
  2126     032A                     u2671:
  2127     032A  2B73               	goto	l2815
  2128     032B                     u2670:
  2129     032B                     l2807:
  2130                           
  2131                           ;main.c: 152:             Lcd_Set_Cursor(1,8);
  2132     032B  3008               	movlw	8
  2133     032C  00A4               	movwf	Lcd_Set_Cursor@b
  2134     032D  3001               	movlw	1
  2135     032E  160A  118A  27B7  120A  118A  	fcall	_Lcd_Set_Cursor
  2136     0333                     l2809:
  2137                           
  2138                           ;main.c: 153:             sprintf(buffer, "%02u:%02u:%02u ", hora, minuto, segundo);
  2139     0333  302E               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  2140     0334  1283               	bcf	3,5	;RP0=0, select bank0
  2141     0335  1303               	bcf	3,6	;RP1=0, select bank0
  2142     0336  00AE               	movwf	sprintf@f
  2143     0337  0868               	movf	_hora,w
  2144     0338  00C1               	movwf	??_main
  2145     0339  01C2               	clrf	??_main+1
  2146     033A  0841               	movf	??_main,w
  2147     033B  00AF               	movwf	?_sprintf+1
  2148     033C  0842               	movf	??_main+1,w
  2149     033D  00B0               	movwf	?_sprintf+2
  2150     033E  0869               	movf	_minuto,w
  2151     033F  00C3               	movwf	??_main+2
  2152     0340  01C4               	clrf	??_main+3
  2153     0341  0843               	movf	??_main+2,w
  2154     0342  00B1               	movwf	?_sprintf+3
  2155     0343  0844               	movf	??_main+3,w
  2156     0344  00B2               	movwf	?_sprintf+4
  2157     0345  086A               	movf	_segundo,w
  2158     0346  00C5               	movwf	??_main+4
  2159     0347  01C6               	clrf	??_main+5
  2160     0348  0845               	movf	??_main+4,w
  2161     0349  00B3               	movwf	?_sprintf+5
  2162     034A  0846               	movf	??_main+5,w
  2163     034B  00B4               	movwf	?_sprintf+6
  2164     034C  3051               	movlw	(low (_buffer| 0))& (0+255)
  2165     034D  120A  158A  2629  120A  118A  	fcall	_sprintf
  2166     0352                     l2811:
  2167                           
  2168                           ;main.c: 154:             Lcd_Write_String(buffer);
  2169     0352  3051               	movlw	(low (_buffer| 0))& (0+255)
  2170     0353  1283               	bcf	3,5	;RP0=0, select bank0
  2171     0354  1303               	bcf	3,6	;RP1=0, select bank0
  2172     0355  00A3               	movwf	Lcd_Write_String@a
  2173     0356  3000               	movlw	0
  2174     0357  00A4               	movwf	Lcd_Write_String@a+1
  2175     0358  120A  158A  243A  120A  118A  	fcall	_Lcd_Write_String
  2176                           
  2177                           ;main.c: 155:             Lcd_Set_Cursor(1,5);
  2178     035D  3005               	movlw	5
  2179     035E  1283               	bcf	3,5	;RP0=0, select bank0
  2180     035F  1303               	bcf	3,6	;RP1=0, select bank0
  2181     0360  00A4               	movwf	Lcd_Set_Cursor@b
  2182     0361  3001               	movlw	1
  2183     0362  160A  118A  27B7  120A  118A  	fcall	_Lcd_Set_Cursor
  2184     0367                     l2813:
  2185                           
  2186                           ;main.c: 156:             Lcd_Write_String("m ");
  2187     0367  306C               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  2188     0368  1283               	bcf	3,5	;RP0=0, select bank0
  2189     0369  1303               	bcf	3,6	;RP1=0, select bank0
  2190     036A  00A3               	movwf	Lcd_Write_String@a
  2191     036B  3080               	movlw	128
  2192     036C  00A4               	movwf	Lcd_Write_String@a+1
  2193     036D  120A  158A  243A  120A  118A  	fcall	_Lcd_Write_String
  2194                           
  2195                           ;main.c: 157:         }
  2196     0372  2865               	goto	l2725
  2197     0373                     l2815:
  2198     0373  3006               	movlw	6
  2199     0374  0650               	xorwf	_selector,w
  2200     0375  1D03               	btfss	3,2
  2201     0376  2B78               	goto	u2681
  2202     0377  2B79               	goto	u2680
  2203     0378                     u2681:
  2204     0378  2BC1               	goto	l116
  2205     0379                     u2680:
  2206     0379                     l2817:
  2207                           
  2208                           ;main.c: 159:             Lcd_Set_Cursor(1,8);
  2209     0379  3008               	movlw	8
  2210     037A  00A4               	movwf	Lcd_Set_Cursor@b
  2211     037B  3001               	movlw	1
  2212     037C  160A  118A  27B7  120A  118A  	fcall	_Lcd_Set_Cursor
  2213     0381                     l2819:
  2214                           
  2215                           ;main.c: 160:             sprintf(buffer, "%02u:%02u:%02u ", hora, minuto, segundo);
  2216     0381  302E               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  2217     0382  1283               	bcf	3,5	;RP0=0, select bank0
  2218     0383  1303               	bcf	3,6	;RP1=0, select bank0
  2219     0384  00AE               	movwf	sprintf@f
  2220     0385  0868               	movf	_hora,w
  2221     0386  00C1               	movwf	??_main
  2222     0387  01C2               	clrf	??_main+1
  2223     0388  0841               	movf	??_main,w
  2224     0389  00AF               	movwf	?_sprintf+1
  2225     038A  0842               	movf	??_main+1,w
  2226     038B  00B0               	movwf	?_sprintf+2
  2227     038C  0869               	movf	_minuto,w
  2228     038D  00C3               	movwf	??_main+2
  2229     038E  01C4               	clrf	??_main+3
  2230     038F  0843               	movf	??_main+2,w
  2231     0390  00B1               	movwf	?_sprintf+3
  2232     0391  0844               	movf	??_main+3,w
  2233     0392  00B2               	movwf	?_sprintf+4
  2234     0393  086A               	movf	_segundo,w
  2235     0394  00C5               	movwf	??_main+4
  2236     0395  01C6               	clrf	??_main+5
  2237     0396  0845               	movf	??_main+4,w
  2238     0397  00B3               	movwf	?_sprintf+5
  2239     0398  0846               	movf	??_main+5,w
  2240     0399  00B4               	movwf	?_sprintf+6
  2241     039A  3051               	movlw	(low (_buffer| 0))& (0+255)
  2242     039B  120A  158A  2629  120A  118A  	fcall	_sprintf
  2243     03A0                     l2821:
  2244                           
  2245                           ;main.c: 161:             Lcd_Write_String(buffer);
  2246     03A0  3051               	movlw	(low (_buffer| 0))& (0+255)
  2247     03A1  1283               	bcf	3,5	;RP0=0, select bank0
  2248     03A2  1303               	bcf	3,6	;RP1=0, select bank0
  2249     03A3  00A3               	movwf	Lcd_Write_String@a
  2250     03A4  3000               	movlw	0
  2251     03A5  00A4               	movwf	Lcd_Write_String@a+1
  2252     03A6  120A  158A  243A  120A  118A  	fcall	_Lcd_Write_String
  2253                           
  2254                           ;main.c: 162:             Lcd_Set_Cursor(1,5);
  2255     03AB  3005               	movlw	5
  2256     03AC  1283               	bcf	3,5	;RP0=0, select bank0
  2257     03AD  1303               	bcf	3,6	;RP1=0, select bank0
  2258     03AE  00A4               	movwf	Lcd_Set_Cursor@b
  2259     03AF  3001               	movlw	1
  2260     03B0  160A  118A  27B7  120A  118A  	fcall	_Lcd_Set_Cursor
  2261     03B5                     l2823:
  2262                           
  2263                           ;main.c: 163:             Lcd_Write_String("S ");
  2264     03B5  3069               	movlw	(low ((STR_17-__stringbase)| (0+32768)))& (0+255)
  2265     03B6  1283               	bcf	3,5	;RP0=0, select bank0
  2266     03B7  1303               	bcf	3,6	;RP1=0, select bank0
  2267     03B8  00A3               	movwf	Lcd_Write_String@a
  2268     03B9  3080               	movlw	128
  2269     03BA  00A4               	movwf	Lcd_Write_String@a+1
  2270     03BB  120A  158A  243A  120A  118A  	fcall	_Lcd_Write_String
  2271     03C0  2865               	goto	l2725
  2272     03C1                     l116:
  2273     03C1  2865               	goto	l2725
  2274     03C2  120A  118A  280C   	ljmp	start
  2275     03C5                     __end_of_main:
  2276                           
  2277                           	psect	text1
  2278     0E29                     __ptext1:	
  2279 ;; *************** function _sprintf *****************
  2280 ;; Defined at:
  2281 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  2282 ;; Parameters:    Size  Location     Type
  2283 ;;  sp              1    wreg     PTR unsigned char 
  2284 ;;		 -> buffer(20), 
  2285 ;;  f               1   14[BANK0 ] PTR const unsigned char 
  2286 ;;		 -> STR_16(16), STR_14(16), STR_12(16), STR_10(18), 
  2287 ;;		 -> STR_8(18), STR_6(17), STR_4(17), STR_3(15), 
  2288 ;;		 -> STR_2(9), 
  2289 ;; Auto vars:     Size  Location     Type
  2290 ;;  sp              1   32[BANK0 ] PTR unsigned char 
  2291 ;;		 -> buffer(20), 
  2292 ;;  tmpval          4    0        struct .
  2293 ;;  width           2   29[BANK0 ] int 
  2294 ;;  val             2   26[BANK0 ] unsigned int 
  2295 ;;  cp              2    0        PTR const unsigned char 
  2296 ;;  len             2    0        unsigned int 
  2297 ;;  c               1   31[BANK0 ] unsigned char 
  2298 ;;  flag            1   28[BANK0 ] unsigned char 
  2299 ;;  ap              1   25[BANK0 ] PTR void [1]
  2300 ;;		 -> ?_sprintf(2), 
  2301 ;;  prec            1   24[BANK0 ] char 
  2302 ;; Return value:  Size  Location     Type
  2303 ;;                  2   14[BANK0 ] int 
  2304 ;; Registers used:
  2305 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2306 ;; Tracked objects:
  2307 ;;		On entry : 0/0
  2308 ;;		On exit  : 0/0
  2309 ;;		Unchanged: 0/0
  2310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2311 ;;      Params:         0       7       0       0       0
  2312 ;;      Locals:         0       9       0       0       0
  2313 ;;      Temps:          0       3       0       0       0
  2314 ;;      Totals:         0      19       0       0       0
  2315 ;;Total ram usage:       19 bytes
  2316 ;; Hardware stack levels used: 1
  2317 ;; Hardware stack levels required when called: 5
  2318 ;; This function calls:
  2319 ;;		___lwdiv
  2320 ;;		___lwmod
  2321 ;;		___wmul
  2322 ;;		_isdigit
  2323 ;; This function is called by:
  2324 ;;		_main
  2325 ;; This function uses a non-reentrant model
  2326 ;;
  2327                           
  2328     0E29                     _sprintf:	
  2329                           ;psect for function _sprintf
  2330                           
  2331                           
  2332                           ;incstack = 0
  2333                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2334                           ;sprintf@sp stored from wreg
  2335     0E29  1283               	bcf	3,5	;RP0=0, select bank0
  2336     0E2A  1303               	bcf	3,6	;RP1=0, select bank0
  2337     0E2B  00C0               	movwf	sprintf@sp
  2338     0E2C                     l2533:
  2339                           
  2340                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521:  
      +                          signed char prec;
  2341     0E2C  302F               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2342     0E2D  00B9               	movwf	sprintf@ap
  2343                           
  2344                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2345     0E2E  2FEB               	goto	l2641
  2346     0E2F                     l2535:
  2347                           
  2348                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2349     0E2F  3025               	movlw	37
  2350     0E30  063F               	xorwf	sprintf@c,w
  2351     0E31  1903               	btfsc	3,2
  2352     0E32  2E34               	goto	u2341
  2353     0E33  2E35               	goto	u2340
  2354     0E34                     u2341:
  2355     0E34  2E3F               	goto	l2541
  2356     0E35                     u2340:
  2357     0E35                     l2537:
  2358                           
  2359                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2360     0E35  0840               	movf	sprintf@sp,w
  2361     0E36  0084               	movwf	4
  2362     0E37  083F               	movf	sprintf@c,w
  2363     0E38  1383               	bcf	3,7	;select IRP bank0
  2364     0E39  0080               	movwf	0
  2365     0E3A                     l2539:
  2366     0E3A  3001               	movlw	1
  2367     0E3B  00B5               	movwf	??_sprintf
  2368     0E3C  0835               	movf	??_sprintf,w
  2369     0E3D  07C0               	addwf	sprintf@sp,f
  2370                           
  2371                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  2372     0E3E  2FEB               	goto	l2641
  2373     0E3F                     l2541:
  2374                           
  2375                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  2376     0E3F  01BD               	clrf	sprintf@width
  2377     0E40  01BE               	clrf	sprintf@width+1
  2378                           
  2379                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2380     0E41  01BC               	clrf	sprintf@flag
  2381     0E42  2E48               	goto	l2547
  2382     0E43                     l482:	
  2383                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 596:    case '0':
  2384                           
  2385                           
  2386                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 597:     flag |= 
      +                          0x04;
  2387     0E43  153C               	bsf	sprintf@flag,2
  2388     0E44                     l2543:
  2389                           
  2390                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 598:     f++;
  2391     0E44  3001               	movlw	1
  2392     0E45  00B5               	movwf	??_sprintf
  2393     0E46  0835               	movf	??_sprintf,w
  2394     0E47  07AE               	addwf	sprintf@f,f
  2395     0E48                     l2547:	
  2396                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 599:     continue
      +                          ;
  2397                           
  2398     0E48  082E               	movf	sprintf@f,w
  2399     0E49  0084               	movwf	4
  2400     0E4A  120A  118A  270A  120A  158A  	fcall	stringdir
  2401     0E4F  00B5               	movwf	??_sprintf
  2402     0E50  01B6               	clrf	??_sprintf+1
  2403                           
  2404                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2405                           ; Switch size 1, requested type "simple"
  2406                           ; Number of cases is 1, Range of values is 0 to 0
  2407                           ; switch strategies available:
  2408                           ; Name         Instructions Cycles
  2409                           ; simple_byte            4     3 (average)
  2410                           ; direct_byte           11     8 (fixed)
  2411                           ; jumptable            260     6 (fixed)
  2412                           ;	Chosen strategy is simple_byte
  2413     0E51  0836               	movf	??_sprintf+1,w
  2414     0E52  3A00               	xorlw	0	; case 0
  2415     0E53  1903               	skipnz
  2416     0E54  2E56               	goto	l3169
  2417     0E55  2E5B               	goto	l2549
  2418     0E56                     l3169:
  2419                           
  2420                           ; Switch size 1, requested type "simple"
  2421                           ; Number of cases is 1, Range of values is 48 to 48
  2422                           ; switch strategies available:
  2423                           ; Name         Instructions Cycles
  2424                           ; simple_byte            4     3 (average)
  2425                           ; direct_byte           14    11 (fixed)
  2426                           ; jumptable            263     9 (fixed)
  2427                           ;	Chosen strategy is simple_byte
  2428     0E56  0835               	movf	??_sprintf,w
  2429     0E57  3A30               	xorlw	48	; case 48
  2430     0E58  1903               	skipnz
  2431     0E59  2E43               	goto	l482
  2432     0E5A  2E5B               	goto	l2549
  2433     0E5B                     l2549:
  2434                           
  2435                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  2436     0E5B  082E               	movf	sprintf@f,w
  2437     0E5C  0084               	movwf	4
  2438     0E5D  120A  118A  270A  120A  158A  	fcall	stringdir
  2439     0E62  160A  118A  273E  120A  158A  	fcall	_isdigit
  2440     0E67  1C03               	btfss	3,0
  2441     0E68  2E6A               	goto	u2351
  2442     0E69  2E6B               	goto	u2350
  2443     0E6A                     u2351:
  2444     0E6A  2EAE               	goto	l2563
  2445     0E6B                     u2350:
  2446     0E6B                     l2551:
  2447                           
  2448                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  2449     0E6B  1283               	bcf	3,5	;RP0=0, select bank0
  2450     0E6C  1303               	bcf	3,6	;RP1=0, select bank0
  2451     0E6D  01BD               	clrf	sprintf@width
  2452     0E6E  01BE               	clrf	sprintf@width+1
  2453     0E6F                     l2553:
  2454                           
  2455                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  2456     0E6F  300A               	movlw	10
  2457     0E70  1283               	bcf	3,5	;RP0=0, select bank0
  2458     0E71  1303               	bcf	3,6	;RP1=0, select bank0
  2459     0E72  00A0               	movwf	___wmul@multiplier
  2460     0E73  3000               	movlw	0
  2461     0E74  00A1               	movwf	___wmul@multiplier+1
  2462     0E75  083E               	movf	sprintf@width+1,w
  2463     0E76  00A3               	movwf	___wmul@multiplicand+1
  2464     0E77  083D               	movf	sprintf@width,w
  2465     0E78  00A2               	movwf	___wmul@multiplicand
  2466     0E79  160A  118A  27D9  120A  158A  	fcall	___wmul
  2467     0E7E  1283               	bcf	3,5	;RP0=0, select bank0
  2468     0E7F  1303               	bcf	3,6	;RP1=0, select bank0
  2469     0E80  0821               	movf	?___wmul+1,w
  2470     0E81  00BE               	movwf	sprintf@width+1
  2471     0E82  0820               	movf	?___wmul,w
  2472     0E83  00BD               	movwf	sprintf@width
  2473     0E84                     l2555:
  2474                           
  2475                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  2476     0E84  082E               	movf	sprintf@f,w
  2477     0E85  0084               	movwf	4
  2478     0E86  120A  118A  270A  120A  158A  	fcall	stringdir
  2479     0E8B  3ED0               	addlw	208
  2480     0E8C  00B5               	movwf	??_sprintf
  2481     0E8D  30FF               	movlw	255
  2482     0E8E  1803               	skipnc
  2483     0E8F  3000               	movlw	0
  2484     0E90  00B6               	movwf	??_sprintf+1
  2485     0E91  0835               	movf	??_sprintf,w
  2486     0E92  07BD               	addwf	sprintf@width,f
  2487     0E93  1803               	skipnc
  2488     0E94  0ABE               	incf	sprintf@width+1,f
  2489     0E95  0836               	movf	??_sprintf+1,w
  2490     0E96  07BE               	addwf	sprintf@width+1,f
  2491     0E97                     l2557:
  2492     0E97  3001               	movlw	1
  2493     0E98  00B5               	movwf	??_sprintf
  2494     0E99  0835               	movf	??_sprintf,w
  2495     0E9A  07AE               	addwf	sprintf@f,f
  2496     0E9B                     l2559:
  2497                           
  2498                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  2499     0E9B  082E               	movf	sprintf@f,w
  2500     0E9C  0084               	movwf	4
  2501     0E9D  120A  118A  270A  120A  158A  	fcall	stringdir
  2502     0EA2  160A  118A  273E  120A  158A  	fcall	_isdigit
  2503     0EA7  1803               	btfsc	3,0
  2504     0EA8  2EAA               	goto	u2361
  2505     0EA9  2EAB               	goto	u2360
  2506     0EAA                     u2361:
  2507     0EAA  2E6F               	goto	l2553
  2508     0EAB                     u2360:
  2509     0EAB  2EAE               	goto	l2563
  2510     0EAC                     l496:	
  2511                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 843:   case 'u':
  2512                           
  2513                           
  2514                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          x40;
  2515     0EAC  173C               	bsf	sprintf@flag,6
  2516                           
  2517                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 845:    break;
  2518     0EAD  2ED0               	goto	l494
  2519     0EAE                     l2563:
  2520     0EAE  3001               	movlw	1
  2521     0EAF  1283               	bcf	3,5	;RP0=0, select bank0
  2522     0EB0  1303               	bcf	3,6	;RP1=0, select bank0
  2523     0EB1  07AE               	addwf	sprintf@f,f
  2524     0EB2  30FF               	movlw	-1
  2525     0EB3  072E               	addwf	sprintf@f,w
  2526     0EB4  0084               	movwf	4
  2527     0EB5  120A  118A  270A  120A  158A  	fcall	stringdir
  2528     0EBA  00BF               	movwf	sprintf@c
  2529     0EBB  00B5               	movwf	??_sprintf
  2530     0EBC  01B6               	clrf	??_sprintf+1
  2531                           
  2532                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2533                           ; Switch size 1, requested type "simple"
  2534                           ; Number of cases is 1, Range of values is 0 to 0
  2535                           ; switch strategies available:
  2536                           ; Name         Instructions Cycles
  2537                           ; simple_byte            4     3 (average)
  2538                           ; direct_byte           11     8 (fixed)
  2539                           ; jumptable            260     6 (fixed)
  2540                           ;	Chosen strategy is simple_byte
  2541     0EBD  0836               	movf	??_sprintf+1,w
  2542     0EBE  3A00               	xorlw	0	; case 0
  2543     0EBF  1903               	skipnz
  2544     0EC0  2EC2               	goto	l3171
  2545     0EC1  2FEB               	goto	l2641
  2546     0EC2                     l3171:
  2547                           
  2548                           ; Switch size 1, requested type "simple"
  2549                           ; Number of cases is 4, Range of values is 0 to 117
  2550                           ; switch strategies available:
  2551                           ; Name         Instructions Cycles
  2552                           ; simple_byte           13     7 (average)
  2553                           ; jumptable            260     6 (fixed)
  2554                           ;	Chosen strategy is simple_byte
  2555     0EC2  0835               	movf	??_sprintf,w
  2556     0EC3  3A00               	xorlw	0	; case 0
  2557     0EC4  1903               	skipnz
  2558     0EC5  2FFB               	goto	l2643
  2559     0EC6  3A64               	xorlw	100	; case 100
  2560     0EC7  1903               	skipnz
  2561     0EC8  2ED0               	goto	l494
  2562     0EC9  3A0D               	xorlw	13	; case 105
  2563     0ECA  1903               	skipnz
  2564     0ECB  2ED0               	goto	l494
  2565     0ECC  3A1C               	xorlw	28	; case 117
  2566     0ECD  1903               	skipnz
  2567     0ECE  2EAC               	goto	l496
  2568     0ECF  2FEB               	goto	l2641
  2569     0ED0                     l494:
  2570                           
  2571                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1277:   if((flag 
      +                          & 0x40) == 0x00)
  2572     0ED0  1B3C               	btfsc	sprintf@flag,6
  2573     0ED1  2ED3               	goto	u2371
  2574     0ED2  2ED4               	goto	u2370
  2575     0ED3                     u2371:
  2576     0ED3  2EEE               	goto	l2575
  2577     0ED4                     u2370:
  2578     0ED4                     l2565:
  2579                           
  2580                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2581     0ED4  0839               	movf	sprintf@ap,w
  2582     0ED5  0084               	movwf	4
  2583     0ED6  1383               	bcf	3,7	;select IRP bank0
  2584     0ED7  0800               	movf	0,w
  2585     0ED8  00BA               	movwf	sprintf@val
  2586     0ED9  0A84               	incf	4,f
  2587     0EDA  0800               	movf	0,w
  2588     0EDB  00BB               	movwf	sprintf@val+1
  2589     0EDC                     l2567:
  2590     0EDC  3002               	movlw	2
  2591     0EDD  00B5               	movwf	??_sprintf
  2592     0EDE  0835               	movf	??_sprintf,w
  2593     0EDF  07B9               	addwf	sprintf@ap,f
  2594     0EE0                     l2569:
  2595                           
  2596                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  2597     0EE0  1FBB               	btfss	sprintf@val+1,7
  2598     0EE1  2EE3               	goto	u2381
  2599     0EE2  2EE4               	goto	u2380
  2600     0EE3                     u2381:
  2601     0EE3  2EFA               	goto	l2579
  2602     0EE4                     u2380:
  2603     0EE4                     l2571:
  2604                           
  2605                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  2606     0EE4  3003               	movlw	3
  2607     0EE5  00B5               	movwf	??_sprintf
  2608     0EE6  0835               	movf	??_sprintf,w
  2609     0EE7  04BC               	iorwf	sprintf@flag,f
  2610     0EE8                     l2573:
  2611                           
  2612                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  2613     0EE8  09BA               	comf	sprintf@val,f
  2614     0EE9  09BB               	comf	sprintf@val+1,f
  2615     0EEA  0ABA               	incf	sprintf@val,f
  2616     0EEB  1903               	skipnz
  2617     0EEC  0ABB               	incf	sprintf@val+1,f
  2618     0EED  2EFA               	goto	l2579
  2619     0EEE                     l2575:
  2620                           
  2621                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  2622     0EEE  0839               	movf	sprintf@ap,w
  2623     0EEF  0084               	movwf	4
  2624     0EF0  1383               	bcf	3,7	;select IRP bank0
  2625     0EF1  0800               	movf	0,w
  2626     0EF2  00BA               	movwf	sprintf@val
  2627     0EF3  0A84               	incf	4,f
  2628     0EF4  0800               	movf	0,w
  2629     0EF5  00BB               	movwf	sprintf@val+1
  2630     0EF6                     l2577:
  2631     0EF6  3002               	movlw	2
  2632     0EF7  00B5               	movwf	??_sprintf
  2633     0EF8  0835               	movf	??_sprintf,w
  2634     0EF9  07B9               	addwf	sprintf@ap,f
  2635     0EFA                     l2579:
  2636                           
  2637                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2638     0EFA  01BF               	clrf	sprintf@c
  2639     0EFB  0ABF               	incf	sprintf@c,f
  2640     0EFC                     l2585:
  2641                           
  2642                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2643     0EFC  083F               	movf	sprintf@c,w
  2644     0EFD  00B5               	movwf	??_sprintf
  2645     0EFE  0735               	addwf	??_sprintf,w
  2646     0EFF  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2647     0F00  0084               	movwf	4
  2648     0F01  120A  118A  270A  120A  158A  	fcall	stringdir
  2649     0F06  00B6               	movwf	??_sprintf+1
  2650     0F07  120A  118A  270A  120A  158A  	fcall	stringdir
  2651     0F0C  00B7               	movwf	??_sprintf+2
  2652     0F0D  0837               	movf	??_sprintf+2,w
  2653     0F0E  023B               	subwf	sprintf@val+1,w
  2654     0F0F  1D03               	skipz
  2655     0F10  2F13               	goto	u2395
  2656     0F11  0836               	movf	??_sprintf+1,w
  2657     0F12  023A               	subwf	sprintf@val,w
  2658     0F13                     u2395:
  2659     0F13  1803               	skipnc
  2660     0F14  2F16               	goto	u2391
  2661     0F15  2F17               	goto	u2390
  2662     0F16                     u2391:
  2663     0F16  2F18               	goto	l2589
  2664     0F17                     u2390:
  2665     0F17  2F22               	goto	l2591
  2666     0F18                     l2589:
  2667     0F18  3001               	movlw	1
  2668     0F19  00B5               	movwf	??_sprintf
  2669     0F1A  0835               	movf	??_sprintf,w
  2670     0F1B  07BF               	addwf	sprintf@c,f
  2671     0F1C  3005               	movlw	5
  2672     0F1D  063F               	xorwf	sprintf@c,w
  2673     0F1E  1D03               	btfss	3,2
  2674     0F1F  2F21               	goto	u2401
  2675     0F20  2F22               	goto	u2400
  2676     0F21                     u2401:
  2677     0F21  2EFC               	goto	l2585
  2678     0F22                     u2400:
  2679     0F22                     l2591:
  2680                           
  2681                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  2682     0F22  083D               	movf	sprintf@width,w
  2683     0F23  043E               	iorwf	sprintf@width+1,w
  2684     0F24  1903               	btfsc	3,2
  2685     0F25  2F27               	goto	u2411
  2686     0F26  2F28               	goto	u2410
  2687     0F27                     u2411:
  2688     0F27  2F34               	goto	l503
  2689     0F28                     u2410:
  2690     0F28                     l2593:
  2691     0F28  083C               	movf	sprintf@flag,w
  2692     0F29  3903               	andlw	3
  2693     0F2A  1903               	btfsc	3,2
  2694     0F2B  2F2D               	goto	u2421
  2695     0F2C  2F2E               	goto	u2420
  2696     0F2D                     u2421:
  2697     0F2D  2F34               	goto	l503
  2698     0F2E                     u2420:
  2699     0F2E                     l2595:
  2700                           
  2701                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1372:    width--;
  2702     0F2E  30FF               	movlw	255
  2703     0F2F  07BD               	addwf	sprintf@width,f
  2704     0F30  1803               	skipnc
  2705     0F31  0ABE               	incf	sprintf@width+1,f
  2706     0F32  30FF               	movlw	255
  2707     0F33  07BE               	addwf	sprintf@width+1,f
  2708     0F34                     l503:
  2709                           
  2710                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  2711     0F34  083E               	movf	sprintf@width+1,w
  2712     0F35  3A80               	xorlw	128
  2713     0F36  3C80               	sublw	128
  2714     0F37  1D03               	skipz
  2715     0F38  2F3B               	goto	u2435
  2716     0F39  083D               	movf	sprintf@width,w
  2717     0F3A  023F               	subwf	sprintf@c,w
  2718     0F3B                     u2435:
  2719     0F3B  1803               	skipnc
  2720     0F3C  2F3E               	goto	u2431
  2721     0F3D  2F3F               	goto	u2430
  2722     0F3E                     u2431:
  2723     0F3E  2F4B               	goto	l2599
  2724     0F3F                     u2430:
  2725     0F3F                     l2597:
  2726                           
  2727                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  2728     0F3F  1283               	bcf	3,5	;RP0=0, select bank0
  2729     0F40  1303               	bcf	3,6	;RP1=0, select bank0
  2730     0F41  083F               	movf	sprintf@c,w
  2731     0F42  00B5               	movwf	??_sprintf
  2732     0F43  01B6               	clrf	??_sprintf+1
  2733     0F44  0835               	movf	??_sprintf,w
  2734     0F45  02BD               	subwf	sprintf@width,f
  2735     0F46  0836               	movf	??_sprintf+1,w
  2736     0F47  1C03               	skipc
  2737     0F48  03BE               	decf	sprintf@width+1,f
  2738     0F49  02BE               	subwf	sprintf@width+1,f
  2739     0F4A  2F4F               	goto	l2601
  2740     0F4B                     l2599:
  2741                           
  2742                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  2743     0F4B  1283               	bcf	3,5	;RP0=0, select bank0
  2744     0F4C  1303               	bcf	3,6	;RP1=0, select bank0
  2745     0F4D  01BD               	clrf	sprintf@width
  2746     0F4E  01BE               	clrf	sprintf@width+1
  2747     0F4F                     l2601:
  2748                           
  2749                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1413:   if(flag &
      +                           0x04) {
  2750     0F4F  1D3C               	btfss	sprintf@flag,2
  2751     0F50  2F52               	goto	u2441
  2752     0F51  2F53               	goto	u2440
  2753     0F52                     u2441:
  2754     0F52  2F7E               	goto	l2617
  2755     0F53                     u2440:
  2756     0F53                     l2603:
  2757                           
  2758                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1418:    if(flag 
      +                          & 0x03)
  2759     0F53  083C               	movf	sprintf@flag,w
  2760     0F54  3903               	andlw	3
  2761     0F55  1903               	btfsc	3,2
  2762     0F56  2F58               	goto	u2451
  2763     0F57  2F59               	goto	u2450
  2764     0F58                     u2451:
  2765     0F58  2F62               	goto	l2609
  2766     0F59                     u2450:
  2767     0F59                     l2605:
  2768                           
  2769                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1419:     ((*sp++
      +                           = ('-')));
  2770     0F59  0840               	movf	sprintf@sp,w
  2771     0F5A  0084               	movwf	4
  2772     0F5B  302D               	movlw	45
  2773     0F5C  1383               	bcf	3,7	;select IRP bank0
  2774     0F5D  0080               	movwf	0
  2775     0F5E                     l2607:
  2776     0F5E  3001               	movlw	1
  2777     0F5F  00B5               	movwf	??_sprintf
  2778     0F60  0835               	movf	??_sprintf,w
  2779     0F61  07C0               	addwf	sprintf@sp,f
  2780     0F62                     l2609:
  2781                           
  2782                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1441:    if(width
      +                          )
  2783     0F62  083D               	movf	sprintf@width,w
  2784     0F63  043E               	iorwf	sprintf@width+1,w
  2785     0F64  1903               	btfsc	3,2
  2786     0F65  2F67               	goto	u2461
  2787     0F66  2F68               	goto	u2460
  2788     0F67                     u2461:
  2789     0F67  2FA8               	goto	l2631
  2790     0F68                     u2460:
  2791     0F68                     l2611:
  2792                           
  2793                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1443:      ((*sp+
      +                          + = ('0')));
  2794     0F68  0840               	movf	sprintf@sp,w
  2795     0F69  0084               	movwf	4
  2796     0F6A  3030               	movlw	48
  2797     0F6B  1383               	bcf	3,7	;select IRP bank0
  2798     0F6C  0080               	movwf	0
  2799     0F6D                     l2613:
  2800     0F6D  3001               	movlw	1
  2801     0F6E  00B5               	movwf	??_sprintf
  2802     0F6F  0835               	movf	??_sprintf,w
  2803     0F70  07C0               	addwf	sprintf@sp,f
  2804     0F71                     l2615:
  2805     0F71  30FF               	movlw	255
  2806     0F72  07BD               	addwf	sprintf@width,f
  2807     0F73  1803               	skipnc
  2808     0F74  0ABE               	incf	sprintf@width+1,f
  2809     0F75  30FF               	movlw	255
  2810     0F76  07BE               	addwf	sprintf@width+1,f
  2811     0F77  083D               	movf	sprintf@width,w
  2812     0F78  043E               	iorwf	sprintf@width+1,w
  2813     0F79  1D03               	btfss	3,2
  2814     0F7A  2F7C               	goto	u2471
  2815     0F7B  2F7D               	goto	u2470
  2816     0F7C                     u2471:
  2817     0F7C  2F68               	goto	l2611
  2818     0F7D                     u2470:
  2819     0F7D  2FA8               	goto	l2631
  2820     0F7E                     l2617:
  2821                           
  2822                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1450:    if(width
  2823     0F7E  083D               	movf	sprintf@width,w
  2824     0F7F  043E               	iorwf	sprintf@width+1,w
  2825     0F80  1903               	btfsc	3,2
  2826     0F81  2F83               	goto	u2481
  2827     0F82  2F84               	goto	u2480
  2828     0F83                     u2481:
  2829     0F83  2F99               	goto	l2625
  2830     0F84                     u2480:
  2831     0F84                     l2619:
  2832                           
  2833                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  2834     0F84  0840               	movf	sprintf@sp,w
  2835     0F85  0084               	movwf	4
  2836     0F86  3020               	movlw	32
  2837     0F87  1383               	bcf	3,7	;select IRP bank0
  2838     0F88  0080               	movwf	0
  2839     0F89                     l2621:
  2840     0F89  3001               	movlw	1
  2841     0F8A  00B5               	movwf	??_sprintf
  2842     0F8B  0835               	movf	??_sprintf,w
  2843     0F8C  07C0               	addwf	sprintf@sp,f
  2844     0F8D                     l2623:
  2845     0F8D  30FF               	movlw	255
  2846     0F8E  07BD               	addwf	sprintf@width,f
  2847     0F8F  1803               	skipnc
  2848     0F90  0ABE               	incf	sprintf@width+1,f
  2849     0F91  30FF               	movlw	255
  2850     0F92  07BE               	addwf	sprintf@width+1,f
  2851     0F93  083D               	movf	sprintf@width,w
  2852     0F94  043E               	iorwf	sprintf@width+1,w
  2853     0F95  1D03               	btfss	3,2
  2854     0F96  2F98               	goto	u2491
  2855     0F97  2F99               	goto	u2490
  2856     0F98                     u2491:
  2857     0F98  2F84               	goto	l2619
  2858     0F99                     u2490:
  2859     0F99                     l2625:
  2860                           
  2861                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
  2862     0F99  083C               	movf	sprintf@flag,w
  2863     0F9A  3903               	andlw	3
  2864     0F9B  1903               	btfsc	3,2
  2865     0F9C  2F9E               	goto	u2501
  2866     0F9D  2F9F               	goto	u2500
  2867     0F9E                     u2501:
  2868     0F9E  2FA8               	goto	l2631
  2869     0F9F                     u2500:
  2870     0F9F                     l2627:
  2871                           
  2872                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  2873     0F9F  0840               	movf	sprintf@sp,w
  2874     0FA0  0084               	movwf	4
  2875     0FA1  302D               	movlw	45
  2876     0FA2  1383               	bcf	3,7	;select IRP bank0
  2877     0FA3  0080               	movwf	0
  2878     0FA4                     l2629:
  2879     0FA4  3001               	movlw	1
  2880     0FA5  00B5               	movwf	??_sprintf
  2881     0FA6  0835               	movf	??_sprintf,w
  2882     0FA7  07C0               	addwf	sprintf@sp,f
  2883     0FA8                     l2631:
  2884                           
  2885                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2886     0FA8  083F               	movf	sprintf@c,w
  2887     0FA9  00B8               	movwf	sprintf@prec
  2888                           
  2889                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2890     0FAA  2FE2               	goto	l2639
  2891     0FAB                     l2633:
  2892                           
  2893                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2894     0FAB  300A               	movlw	10
  2895     0FAC  00A8               	movwf	___lwmod@divisor
  2896     0FAD  3000               	movlw	0
  2897     0FAE  00A9               	movwf	___lwmod@divisor+1
  2898     0FAF  0838               	movf	sprintf@prec,w
  2899     0FB0  00B5               	movwf	??_sprintf
  2900     0FB1  0735               	addwf	??_sprintf,w
  2901     0FB2  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2902     0FB3  0084               	movwf	4
  2903     0FB4  120A  118A  270A  120A  158A  	fcall	stringdir
  2904     0FB9  00A0               	movwf	___lwdiv@divisor
  2905     0FBA  120A  118A  270A  120A  158A  	fcall	stringdir
  2906     0FBF  00A1               	movwf	___lwdiv@divisor+1
  2907     0FC0  083B               	movf	sprintf@val+1,w
  2908     0FC1  00A3               	movwf	___lwdiv@dividend+1
  2909     0FC2  083A               	movf	sprintf@val,w
  2910     0FC3  00A2               	movwf	___lwdiv@dividend
  2911     0FC4  120A  158A  2480  120A  158A  	fcall	___lwdiv
  2912     0FC9  1283               	bcf	3,5	;RP0=0, select bank0
  2913     0FCA  1303               	bcf	3,6	;RP1=0, select bank0
  2914     0FCB  0821               	movf	?___lwdiv+1,w
  2915     0FCC  00AB               	movwf	___lwmod@dividend+1
  2916     0FCD  0820               	movf	?___lwdiv,w
  2917     0FCE  00AA               	movwf	___lwmod@dividend
  2918     0FCF  120A  158A  23C1  120A  158A  	fcall	___lwmod
  2919     0FD4  1283               	bcf	3,5	;RP0=0, select bank0
  2920     0FD5  1303               	bcf	3,6	;RP1=0, select bank0
  2921     0FD6  0828               	movf	?___lwmod,w
  2922     0FD7  3E30               	addlw	48
  2923     0FD8  00BF               	movwf	sprintf@c
  2924     0FD9                     l2635:
  2925                           
  2926                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2927     0FD9  0840               	movf	sprintf@sp,w
  2928     0FDA  0084               	movwf	4
  2929     0FDB  083F               	movf	sprintf@c,w
  2930     0FDC  1383               	bcf	3,7	;select IRP bank0
  2931     0FDD  0080               	movwf	0
  2932     0FDE                     l2637:
  2933     0FDE  3001               	movlw	1
  2934     0FDF  00B5               	movwf	??_sprintf
  2935     0FE0  0835               	movf	??_sprintf,w
  2936     0FE1  07C0               	addwf	sprintf@sp,f
  2937     0FE2                     l2639:
  2938                           
  2939                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2940     0FE2  30FF               	movlw	255
  2941     0FE3  00B5               	movwf	??_sprintf
  2942     0FE4  0835               	movf	??_sprintf,w
  2943     0FE5  07B8               	addwf	sprintf@prec,f
  2944     0FE6  0A38               	incf	sprintf@prec,w
  2945     0FE7  1D03               	btfss	3,2
  2946     0FE8  2FEA               	goto	u2511
  2947     0FE9  2FEB               	goto	u2510
  2948     0FEA                     u2511:
  2949     0FEA  2FAB               	goto	l2633
  2950     0FEB                     u2510:
  2951     0FEB                     l2641:
  2952                           
  2953                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2954     0FEB  3001               	movlw	1
  2955     0FEC  07AE               	addwf	sprintf@f,f
  2956     0FED  30FF               	movlw	-1
  2957     0FEE  072E               	addwf	sprintf@f,w
  2958     0FEF  0084               	movwf	4
  2959     0FF0  120A  118A  270A  120A  158A  	fcall	stringdir
  2960     0FF5  00BF               	movwf	sprintf@c
  2961     0FF6  083F               	movf	sprintf@c,w
  2962     0FF7  1D03               	btfss	3,2
  2963     0FF8  2FFA               	goto	u2521
  2964     0FF9  2FFB               	goto	u2520
  2965     0FFA                     u2521:
  2966     0FFA  2E2F               	goto	l2535
  2967     0FFB                     u2520:
  2968     0FFB                     l2643:
  2969                           
  2970                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2971     0FFB  0840               	movf	sprintf@sp,w
  2972     0FFC  0084               	movwf	4
  2973     0FFD  1383               	bcf	3,7	;select IRP bank0
  2974     0FFE  0180               	clrf	0
  2975     0FFF                     l520:
  2976     0FFF  0008               	return
  2977     1000                     __end_of_sprintf:
  2978                           
  2979                           	psect	text2
  2980     173E                     __ptext2:	
  2981 ;; *************** function _isdigit *****************
  2982 ;; Defined at:
  2983 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\isdigit.c"
  2984 ;; Parameters:    Size  Location     Type
  2985 ;;  c               1    wreg     unsigned char 
  2986 ;; Auto vars:     Size  Location     Type
  2987 ;;  c               1    1[BANK0 ] unsigned char 
  2988 ;; Return value:  Size  Location     Type
  2989 ;;		None               void
  2990 ;; Registers used:
  2991 ;;		wreg, status,2, status,0
  2992 ;; Tracked objects:
  2993 ;;		On entry : 0/0
  2994 ;;		On exit  : 0/0
  2995 ;;		Unchanged: 0/0
  2996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2997 ;;      Params:         0       0       0       0       0
  2998 ;;      Locals:         0       2       0       0       0
  2999 ;;      Temps:          0       0       0       0       0
  3000 ;;      Totals:         0       2       0       0       0
  3001 ;;Total ram usage:        2 bytes
  3002 ;; Hardware stack levels used: 1
  3003 ;; Hardware stack levels required when called: 4
  3004 ;; This function calls:
  3005 ;;		Nothing
  3006 ;; This function is called by:
  3007 ;;		_sprintf
  3008 ;; This function uses a non-reentrant model
  3009 ;;
  3010                           
  3011     173E                     _isdigit:	
  3012                           ;psect for function _isdigit
  3013                           
  3014                           
  3015                           ;incstack = 0
  3016                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3017                           ;isdigit@c stored from wreg
  3018     173E  1283               	bcf	3,5	;RP0=0, select bank0
  3019     173F  1303               	bcf	3,6	;RP1=0, select bank0
  3020     1740  00A1               	movwf	isdigit@c
  3021     1741                     l2311:
  3022     1741  01A0               	clrf	_isdigit$1080
  3023     1742                     l2313:
  3024     1742  303A               	movlw	58
  3025     1743  0221               	subwf	isdigit@c,w
  3026     1744  1803               	skipnc
  3027     1745  2F47               	goto	u1991
  3028     1746  2F48               	goto	u1990
  3029     1747                     u1991:
  3030     1747  2F50               	goto	l2319
  3031     1748                     u1990:
  3032     1748                     l2315:
  3033     1748  3030               	movlw	48
  3034     1749  0221               	subwf	isdigit@c,w
  3035     174A  1C03               	skipc
  3036     174B  2F4D               	goto	u2001
  3037     174C  2F4E               	goto	u2000
  3038     174D                     u2001:
  3039     174D  2F50               	goto	l2319
  3040     174E                     u2000:
  3041     174E                     l2317:
  3042     174E  01A0               	clrf	_isdigit$1080
  3043     174F  0AA0               	incf	_isdigit$1080,f
  3044     1750                     l2319:
  3045     1750  0C20               	rrf	_isdigit$1080,w
  3046     1751                     l977:
  3047     1751  0008               	return
  3048     1752                     __end_of_isdigit:
  3049                           
  3050                           	psect	text3
  3051     0BC1                     __ptext3:	
  3052 ;; *************** function ___lwmod *****************
  3053 ;; Defined at:
  3054 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  3055 ;; Parameters:    Size  Location     Type
  3056 ;;  divisor         2    8[BANK0 ] unsigned int 
  3057 ;;  dividend        2   10[BANK0 ] unsigned int 
  3058 ;; Auto vars:     Size  Location     Type
  3059 ;;  counter         1   13[BANK0 ] unsigned char 
  3060 ;; Return value:  Size  Location     Type
  3061 ;;                  2    8[BANK0 ] unsigned int 
  3062 ;; Registers used:
  3063 ;;		wreg, status,2, status,0
  3064 ;; Tracked objects:
  3065 ;;		On entry : 0/0
  3066 ;;		On exit  : 0/0
  3067 ;;		Unchanged: 0/0
  3068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3069 ;;      Params:         0       4       0       0       0
  3070 ;;      Locals:         0       1       0       0       0
  3071 ;;      Temps:          0       1       0       0       0
  3072 ;;      Totals:         0       6       0       0       0
  3073 ;;Total ram usage:        6 bytes
  3074 ;; Hardware stack levels used: 1
  3075 ;; Hardware stack levels required when called: 4
  3076 ;; This function calls:
  3077 ;;		Nothing
  3078 ;; This function is called by:
  3079 ;;		_sprintf
  3080 ;; This function uses a non-reentrant model
  3081 ;;
  3082                           
  3083     0BC1                     ___lwmod:	
  3084                           ;psect for function ___lwmod
  3085                           
  3086     0BC1                     l2407:	
  3087                           ;incstack = 0
  3088                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3089                           
  3090     0BC1  1283               	bcf	3,5	;RP0=0, select bank0
  3091     0BC2  1303               	bcf	3,6	;RP1=0, select bank0
  3092     0BC3  0828               	movf	___lwmod@divisor,w
  3093     0BC4  0429               	iorwf	___lwmod@divisor+1,w
  3094     0BC5  1903               	btfsc	3,2
  3095     0BC6  2BC8               	goto	u2221
  3096     0BC7  2BC9               	goto	u2220
  3097     0BC8                     u2221:
  3098     0BC8  2BF8               	goto	l2425
  3099     0BC9                     u2220:
  3100     0BC9                     l2409:
  3101     0BC9  01AD               	clrf	___lwmod@counter
  3102     0BCA  0AAD               	incf	___lwmod@counter,f
  3103     0BCB  2BD7               	goto	l2415
  3104     0BCC                     l2411:
  3105     0BCC  3001               	movlw	1
  3106     0BCD                     u2235:
  3107     0BCD  1003               	clrc
  3108     0BCE  0DA8               	rlf	___lwmod@divisor,f
  3109     0BCF  0DA9               	rlf	___lwmod@divisor+1,f
  3110     0BD0  3EFF               	addlw	-1
  3111     0BD1  1D03               	skipz
  3112     0BD2  2BCD               	goto	u2235
  3113     0BD3                     l2413:
  3114     0BD3  3001               	movlw	1
  3115     0BD4  00AC               	movwf	??___lwmod
  3116     0BD5  082C               	movf	??___lwmod,w
  3117     0BD6  07AD               	addwf	___lwmod@counter,f
  3118     0BD7                     l2415:
  3119     0BD7  1FA9               	btfss	___lwmod@divisor+1,7
  3120     0BD8  2BDA               	goto	u2241
  3121     0BD9  2BDB               	goto	u2240
  3122     0BDA                     u2241:
  3123     0BDA  2BCC               	goto	l2411
  3124     0BDB                     u2240:
  3125     0BDB                     l2417:
  3126     0BDB  0829               	movf	___lwmod@divisor+1,w
  3127     0BDC  022B               	subwf	___lwmod@dividend+1,w
  3128     0BDD  1D03               	skipz
  3129     0BDE  2BE1               	goto	u2255
  3130     0BDF  0828               	movf	___lwmod@divisor,w
  3131     0BE0  022A               	subwf	___lwmod@dividend,w
  3132     0BE1                     u2255:
  3133     0BE1  1C03               	skipc
  3134     0BE2  2BE4               	goto	u2251
  3135     0BE3  2BE5               	goto	u2250
  3136     0BE4                     u2251:
  3137     0BE4  2BEB               	goto	l2421
  3138     0BE5                     u2250:
  3139     0BE5                     l2419:
  3140     0BE5  0828               	movf	___lwmod@divisor,w
  3141     0BE6  02AA               	subwf	___lwmod@dividend,f
  3142     0BE7  0829               	movf	___lwmod@divisor+1,w
  3143     0BE8  1C03               	skipc
  3144     0BE9  03AB               	decf	___lwmod@dividend+1,f
  3145     0BEA  02AB               	subwf	___lwmod@dividend+1,f
  3146     0BEB                     l2421:
  3147     0BEB  3001               	movlw	1
  3148     0BEC                     u2265:
  3149     0BEC  1003               	clrc
  3150     0BED  0CA9               	rrf	___lwmod@divisor+1,f
  3151     0BEE  0CA8               	rrf	___lwmod@divisor,f
  3152     0BEF  3EFF               	addlw	-1
  3153     0BF0  1D03               	skipz
  3154     0BF1  2BEC               	goto	u2265
  3155     0BF2                     l2423:
  3156     0BF2  3001               	movlw	1
  3157     0BF3  02AD               	subwf	___lwmod@counter,f
  3158     0BF4  1D03               	btfss	3,2
  3159     0BF5  2BF7               	goto	u2271
  3160     0BF6  2BF8               	goto	u2270
  3161     0BF7                     u2271:
  3162     0BF7  2BDB               	goto	l2417
  3163     0BF8                     u2270:
  3164     0BF8                     l2425:
  3165     0BF8  082B               	movf	___lwmod@dividend+1,w
  3166     0BF9  00A9               	movwf	?___lwmod+1
  3167     0BFA  082A               	movf	___lwmod@dividend,w
  3168     0BFB  00A8               	movwf	?___lwmod
  3169     0BFC                     l806:
  3170     0BFC  0008               	return
  3171     0BFD                     __end_of___lwmod:
  3172                           
  3173                           	psect	text4
  3174     0C80                     __ptext4:	
  3175 ;; *************** function ___lwdiv *****************
  3176 ;; Defined at:
  3177 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  3178 ;; Parameters:    Size  Location     Type
  3179 ;;  divisor         2    0[BANK0 ] unsigned int 
  3180 ;;  dividend        2    2[BANK0 ] unsigned int 
  3181 ;; Auto vars:     Size  Location     Type
  3182 ;;  quotient        2    5[BANK0 ] unsigned int 
  3183 ;;  counter         1    7[BANK0 ] unsigned char 
  3184 ;; Return value:  Size  Location     Type
  3185 ;;                  2    0[BANK0 ] unsigned int 
  3186 ;; Registers used:
  3187 ;;		wreg, status,2, status,0
  3188 ;; Tracked objects:
  3189 ;;		On entry : 0/0
  3190 ;;		On exit  : 0/0
  3191 ;;		Unchanged: 0/0
  3192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3193 ;;      Params:         0       4       0       0       0
  3194 ;;      Locals:         0       3       0       0       0
  3195 ;;      Temps:          0       1       0       0       0
  3196 ;;      Totals:         0       8       0       0       0
  3197 ;;Total ram usage:        8 bytes
  3198 ;; Hardware stack levels used: 1
  3199 ;; Hardware stack levels required when called: 4
  3200 ;; This function calls:
  3201 ;;		Nothing
  3202 ;; This function is called by:
  3203 ;;		_sprintf
  3204 ;; This function uses a non-reentrant model
  3205 ;;
  3206                           
  3207     0C80                     ___lwdiv:	
  3208                           ;psect for function ___lwdiv
  3209                           
  3210     0C80                     l2381:	
  3211                           ;incstack = 0
  3212                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3213                           
  3214     0C80  1283               	bcf	3,5	;RP0=0, select bank0
  3215     0C81  1303               	bcf	3,6	;RP1=0, select bank0
  3216     0C82  01A5               	clrf	___lwdiv@quotient
  3217     0C83  01A6               	clrf	___lwdiv@quotient+1
  3218     0C84                     l2383:
  3219     0C84  0820               	movf	___lwdiv@divisor,w
  3220     0C85  0421               	iorwf	___lwdiv@divisor+1,w
  3221     0C86  1903               	btfsc	3,2
  3222     0C87  2C89               	goto	u2151
  3223     0C88  2C8A               	goto	u2150
  3224     0C89                     u2151:
  3225     0C89  2CC1               	goto	l2403
  3226     0C8A                     u2150:
  3227     0C8A                     l2385:
  3228     0C8A  01A7               	clrf	___lwdiv@counter
  3229     0C8B  0AA7               	incf	___lwdiv@counter,f
  3230     0C8C  2C98               	goto	l2391
  3231     0C8D                     l2387:
  3232     0C8D  3001               	movlw	1
  3233     0C8E                     u2165:
  3234     0C8E  1003               	clrc
  3235     0C8F  0DA0               	rlf	___lwdiv@divisor,f
  3236     0C90  0DA1               	rlf	___lwdiv@divisor+1,f
  3237     0C91  3EFF               	addlw	-1
  3238     0C92  1D03               	skipz
  3239     0C93  2C8E               	goto	u2165
  3240     0C94                     l2389:
  3241     0C94  3001               	movlw	1
  3242     0C95  00A4               	movwf	??___lwdiv
  3243     0C96  0824               	movf	??___lwdiv,w
  3244     0C97  07A7               	addwf	___lwdiv@counter,f
  3245     0C98                     l2391:
  3246     0C98  1FA1               	btfss	___lwdiv@divisor+1,7
  3247     0C99  2C9B               	goto	u2171
  3248     0C9A  2C9C               	goto	u2170
  3249     0C9B                     u2171:
  3250     0C9B  2C8D               	goto	l2387
  3251     0C9C                     u2170:
  3252     0C9C                     l2393:
  3253     0C9C  3001               	movlw	1
  3254     0C9D                     u2185:
  3255     0C9D  1003               	clrc
  3256     0C9E  0DA5               	rlf	___lwdiv@quotient,f
  3257     0C9F  0DA6               	rlf	___lwdiv@quotient+1,f
  3258     0CA0  3EFF               	addlw	-1
  3259     0CA1  1D03               	skipz
  3260     0CA2  2C9D               	goto	u2185
  3261     0CA3  0821               	movf	___lwdiv@divisor+1,w
  3262     0CA4  0223               	subwf	___lwdiv@dividend+1,w
  3263     0CA5  1D03               	skipz
  3264     0CA6  2CA9               	goto	u2195
  3265     0CA7  0820               	movf	___lwdiv@divisor,w
  3266     0CA8  0222               	subwf	___lwdiv@dividend,w
  3267     0CA9                     u2195:
  3268     0CA9  1C03               	skipc
  3269     0CAA  2CAC               	goto	u2191
  3270     0CAB  2CAD               	goto	u2190
  3271     0CAC                     u2191:
  3272     0CAC  2CB4               	goto	l2399
  3273     0CAD                     u2190:
  3274     0CAD                     l2395:
  3275     0CAD  0820               	movf	___lwdiv@divisor,w
  3276     0CAE  02A2               	subwf	___lwdiv@dividend,f
  3277     0CAF  0821               	movf	___lwdiv@divisor+1,w
  3278     0CB0  1C03               	skipc
  3279     0CB1  03A3               	decf	___lwdiv@dividend+1,f
  3280     0CB2  02A3               	subwf	___lwdiv@dividend+1,f
  3281     0CB3                     l2397:
  3282     0CB3  1425               	bsf	___lwdiv@quotient,0
  3283     0CB4                     l2399:
  3284     0CB4  3001               	movlw	1
  3285     0CB5                     u2205:
  3286     0CB5  1003               	clrc
  3287     0CB6  0CA1               	rrf	___lwdiv@divisor+1,f
  3288     0CB7  0CA0               	rrf	___lwdiv@divisor,f
  3289     0CB8  3EFF               	addlw	-1
  3290     0CB9  1D03               	skipz
  3291     0CBA  2CB5               	goto	u2205
  3292     0CBB                     l2401:
  3293     0CBB  3001               	movlw	1
  3294     0CBC  02A7               	subwf	___lwdiv@counter,f
  3295     0CBD  1D03               	btfss	3,2
  3296     0CBE  2CC0               	goto	u2211
  3297     0CBF  2CC1               	goto	u2210
  3298     0CC0                     u2211:
  3299     0CC0  2C9C               	goto	l2393
  3300     0CC1                     u2210:
  3301     0CC1                     l2403:
  3302     0CC1  0826               	movf	___lwdiv@quotient+1,w
  3303     0CC2  00A1               	movwf	?___lwdiv+1
  3304     0CC3  0825               	movf	___lwdiv@quotient,w
  3305     0CC4  00A0               	movwf	?___lwdiv
  3306     0CC5                     l796:
  3307     0CC5  0008               	return
  3308     0CC6                     __end_of___lwdiv:
  3309                           
  3310                           	psect	text5
  3311     0BFD                     __ptext5:	
  3312 ;; *************** function _setup *****************
  3313 ;; Defined at:
  3314 ;;		line 386 in file "main.c"
  3315 ;; Parameters:    Size  Location     Type
  3316 ;;		None
  3317 ;; Auto vars:     Size  Location     Type
  3318 ;;		None
  3319 ;; Return value:  Size  Location     Type
  3320 ;;                  1    wreg      void 
  3321 ;; Registers used:
  3322 ;;		wreg, status,2, status,0, pclath, cstack
  3323 ;; Tracked objects:
  3324 ;;		On entry : 0/0
  3325 ;;		On exit  : 0/0
  3326 ;;		Unchanged: 0/0
  3327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3328 ;;      Params:         0       0       0       0       0
  3329 ;;      Locals:         0       0       0       0       0
  3330 ;;      Temps:          0       0       0       0       0
  3331 ;;      Totals:         0       0       0       0       0
  3332 ;;Total ram usage:        0 bytes
  3333 ;; Hardware stack levels used: 1
  3334 ;; Hardware stack levels required when called: 6
  3335 ;; This function calls:
  3336 ;;		_I2C_Master_Init
  3337 ;;		_ioc_init
  3338 ;; This function is called by:
  3339 ;;		_main
  3340 ;; This function uses a non-reentrant model
  3341 ;;
  3342                           
  3343     0BFD                     _setup:	
  3344                           ;psect for function _setup
  3345                           
  3346     0BFD                     l2457:	
  3347                           ;incstack = 0
  3348                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  3349                           
  3350                           
  3351                           ;main.c: 389:     ANSEL = 0;
  3352     0BFD  1683               	bsf	3,5	;RP0=1, select bank3
  3353     0BFE  1703               	bsf	3,6	;RP1=1, select bank3
  3354     0BFF  0188               	clrf	8	;volatile
  3355                           
  3356                           ;main.c: 390:     ANSELH = 0;
  3357     0C00  0189               	clrf	9	;volatile
  3358     0C01                     l2459:
  3359                           
  3360                           ;main.c: 394:     TRISBbits.TRISB0 = 0;
  3361     0C01  1683               	bsf	3,5	;RP0=1, select bank1
  3362     0C02  1303               	bcf	3,6	;RP1=0, select bank1
  3363     0C03  1006               	bcf	6,0	;volatile
  3364     0C04                     l2461:
  3365                           
  3366                           ;main.c: 395:     TRISBbits.TRISB1 = 0;
  3367     0C04  1086               	bcf	6,1	;volatile
  3368     0C05                     l2463:
  3369                           
  3370                           ;main.c: 396:     TRISBbits.TRISB5 = 1;
  3371     0C05  1686               	bsf	6,5	;volatile
  3372     0C06                     l2465:
  3373                           
  3374                           ;main.c: 397:     TRISBbits.TRISB6 = 1;
  3375     0C06  1706               	bsf	6,6	;volatile
  3376     0C07                     l2467:
  3377                           
  3378                           ;main.c: 398:     TRISBbits.TRISB7 = 1;
  3379     0C07  1786               	bsf	6,7	;volatile
  3380                           
  3381                           ;main.c: 399:     TRISD = 0;
  3382     0C08  0188               	clrf	8	;volatile
  3383                           
  3384                           ;main.c: 404:     PORTA = 0;
  3385     0C09  1283               	bcf	3,5	;RP0=0, select bank0
  3386     0C0A  1303               	bcf	3,6	;RP1=0, select bank0
  3387     0C0B  0185               	clrf	5	;volatile
  3388                           
  3389                           ;main.c: 405:     PORTB = 0;
  3390     0C0C  0186               	clrf	6	;volatile
  3391                           
  3392                           ;main.c: 406:     PORTC = 0;
  3393     0C0D  0187               	clrf	7	;volatile
  3394                           
  3395                           ;main.c: 407:     PORTD = 0;
  3396     0C0E  0188               	clrf	8	;volatile
  3397                           
  3398                           ;main.c: 408:     PORTE = 0;
  3399     0C0F  0189               	clrf	9	;volatile
  3400     0C10                     l2469:
  3401                           
  3402                           ;main.c: 416:     INTCONbits.GIE = 1;
  3403     0C10  178B               	bsf	11,7	;volatile
  3404     0C11                     l2471:
  3405                           
  3406                           ;main.c: 417:     INTCONbits.PEIE = 1;
  3407     0C11  170B               	bsf	11,6	;volatile
  3408     0C12                     l2473:
  3409                           
  3410                           ;main.c: 418:     INTCONbits.RBIE = 1;
  3411     0C12  158B               	bsf	11,3	;volatile
  3412     0C13                     l2475:
  3413                           
  3414                           ;main.c: 425:     ioc_init(7);
  3415     0C13  3007               	movlw	7
  3416     0C14  120A  158A  25C9  120A  158A  	fcall	_ioc_init
  3417     0C19                     l2477:
  3418                           
  3419                           ;main.c: 426:     ioc_init(6);
  3420     0C19  3006               	movlw	6
  3421     0C1A  120A  158A  25C9  120A  158A  	fcall	_ioc_init
  3422     0C1F                     l2479:
  3423                           
  3424                           ;main.c: 427:     ioc_init(5);
  3425     0C1F  3005               	movlw	5
  3426     0C20  120A  158A  25C9  120A  158A  	fcall	_ioc_init
  3427     0C25                     l2481:
  3428                           
  3429                           ;main.c: 432:     OSCCONbits.IRCF = 0b111 ;
  3430     0C25  3070               	movlw	112
  3431     0C26  1683               	bsf	3,5	;RP0=1, select bank1
  3432     0C27  1303               	bcf	3,6	;RP1=0, select bank1
  3433     0C28  048F               	iorwf	15,f	;volatile
  3434     0C29                     l2483:
  3435                           
  3436                           ;main.c: 433:     OSCCONbits.SCS = 1;
  3437     0C29  140F               	bsf	15,0	;volatile
  3438     0C2A                     l2485:
  3439                           
  3440                           ;main.c: 436:     I2C_Master_Init(100000);
  3441     0C2A  3000               	movlw	0
  3442     0C2B  1283               	bcf	3,5	;RP0=0, select bank0
  3443     0C2C  1303               	bcf	3,6	;RP1=0, select bank0
  3444     0C2D  00B1               	movwf	I2C_Master_Init@c+3
  3445     0C2E  3001               	movlw	1
  3446     0C2F  00B0               	movwf	I2C_Master_Init@c+2
  3447     0C30  3086               	movlw	134
  3448     0C31  00AF               	movwf	I2C_Master_Init@c+1
  3449     0C32  30A0               	movlw	160
  3450     0C33  00AE               	movwf	I2C_Master_Init@c
  3451     0C34  120A  158A  234B  120A  158A  	fcall	_I2C_Master_Init
  3452     0C39                     l217:
  3453     0C39  0008               	return
  3454     0C3A                     __end_of_setup:
  3455                           
  3456                           	psect	text6
  3457     0DC9                     __ptext6:	
  3458 ;; *************** function _ioc_init *****************
  3459 ;; Defined at:
  3460 ;;		line 11 in file "IOCB.c"
  3461 ;; Parameters:    Size  Location     Type
  3462 ;;  pin             1    wreg     unsigned char 
  3463 ;; Auto vars:     Size  Location     Type
  3464 ;;  pin             1    0[BANK0 ] unsigned char 
  3465 ;; Return value:  Size  Location     Type
  3466 ;;                  1    wreg      void 
  3467 ;; Registers used:
  3468 ;;		wreg, status,2, status,0
  3469 ;; Tracked objects:
  3470 ;;		On entry : 0/0
  3471 ;;		On exit  : 0/0
  3472 ;;		Unchanged: 0/0
  3473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3474 ;;      Params:         0       0       0       0       0
  3475 ;;      Locals:         0       1       0       0       0
  3476 ;;      Temps:          0       0       0       0       0
  3477 ;;      Totals:         0       1       0       0       0
  3478 ;;Total ram usage:        1 bytes
  3479 ;; Hardware stack levels used: 1
  3480 ;; Hardware stack levels required when called: 4
  3481 ;; This function calls:
  3482 ;;		Nothing
  3483 ;; This function is called by:
  3484 ;;		_setup
  3485 ;; This function uses a non-reentrant model
  3486 ;;
  3487                           
  3488     0DC9                     _ioc_init:	
  3489                           ;psect for function _ioc_init
  3490                           
  3491                           
  3492                           ;incstack = 0
  3493                           ; Regs used in _ioc_init: [wreg+status,2+status,0]
  3494                           ;ioc_init@pin stored from wreg
  3495     0DC9  1283               	bcf	3,5	;RP0=0, select bank0
  3496     0DCA  1303               	bcf	3,6	;RP1=0, select bank0
  3497     0DCB  00A0               	movwf	ioc_init@pin
  3498     0DCC                     l2205:
  3499                           
  3500                           ;IOCB.c: 12:     INTCONbits.RBIE = 1;
  3501     0DCC  158B               	bsf	11,3	;volatile
  3502                           
  3503                           ;IOCB.c: 13:     OPTION_REGbits.nRBPU = 0;
  3504     0DCD  1683               	bsf	3,5	;RP0=1, select bank1
  3505     0DCE  1303               	bcf	3,6	;RP1=0, select bank1
  3506     0DCF  1381               	bcf	1,7	;volatile
  3507     0DD0                     l2207:
  3508                           
  3509                           ;IOCB.c: 15:     if(pin == 7){
  3510     0DD0  3007               	movlw	7
  3511     0DD1  1283               	bcf	3,5	;RP0=0, select bank0
  3512     0DD2  1303               	bcf	3,6	;RP1=0, select bank0
  3513     0DD3  0620               	xorwf	ioc_init@pin,w
  3514     0DD4  1D03               	btfss	3,2
  3515     0DD5  2DD7               	goto	u1881
  3516     0DD6  2DD8               	goto	u1880
  3517     0DD7                     u1881:
  3518     0DD7  2DDC               	goto	l2211
  3519     0DD8                     u1880:
  3520     0DD8                     l2209:
  3521                           
  3522                           ;IOCB.c: 16:         WPUBbits.WPUB7 = 1;
  3523     0DD8  1683               	bsf	3,5	;RP0=1, select bank1
  3524     0DD9  1303               	bcf	3,6	;RP1=0, select bank1
  3525     0DDA  1795               	bsf	21,7	;volatile
  3526                           
  3527                           ;IOCB.c: 17:         IOCBbits.IOCB7 = 1;
  3528     0DDB  1796               	bsf	22,7	;volatile
  3529     0DDC                     l2211:
  3530                           
  3531                           ;IOCB.c: 19:     if(pin == 6){
  3532     0DDC  3006               	movlw	6
  3533     0DDD  1283               	bcf	3,5	;RP0=0, select bank0
  3534     0DDE  0620               	xorwf	ioc_init@pin,w
  3535     0DDF  1D03               	btfss	3,2
  3536     0DE0  2DE2               	goto	u1891
  3537     0DE1  2DE3               	goto	u1890
  3538     0DE2                     u1891:
  3539     0DE2  2DE7               	goto	l2215
  3540     0DE3                     u1890:
  3541     0DE3                     l2213:
  3542                           
  3543                           ;IOCB.c: 20:         WPUBbits.WPUB6 = 1;
  3544     0DE3  1683               	bsf	3,5	;RP0=1, select bank1
  3545     0DE4  1303               	bcf	3,6	;RP1=0, select bank1
  3546     0DE5  1715               	bsf	21,6	;volatile
  3547                           
  3548                           ;IOCB.c: 21:         IOCBbits.IOCB6 = 1;
  3549     0DE6  1716               	bsf	22,6	;volatile
  3550     0DE7                     l2215:
  3551                           
  3552                           ;IOCB.c: 23:     if(pin == 5){
  3553     0DE7  3005               	movlw	5
  3554     0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  3555     0DE9  0620               	xorwf	ioc_init@pin,w
  3556     0DEA  1D03               	btfss	3,2
  3557     0DEB  2DED               	goto	u1901
  3558     0DEC  2DEE               	goto	u1900
  3559     0DED                     u1901:
  3560     0DED  2DF2               	goto	l2219
  3561     0DEE                     u1900:
  3562     0DEE                     l2217:
  3563                           
  3564                           ;IOCB.c: 24:         WPUBbits.WPUB5 = 1;
  3565     0DEE  1683               	bsf	3,5	;RP0=1, select bank1
  3566     0DEF  1303               	bcf	3,6	;RP1=0, select bank1
  3567     0DF0  1695               	bsf	21,5	;volatile
  3568                           
  3569                           ;IOCB.c: 25:         IOCBbits.IOCB5 = 1;
  3570     0DF1  1696               	bsf	22,5	;volatile
  3571     0DF2                     l2219:
  3572                           
  3573                           ;IOCB.c: 27:     if(pin == 4){
  3574     0DF2  3004               	movlw	4
  3575     0DF3  1283               	bcf	3,5	;RP0=0, select bank0
  3576     0DF4  0620               	xorwf	ioc_init@pin,w
  3577     0DF5  1D03               	btfss	3,2
  3578     0DF6  2DF8               	goto	u1911
  3579     0DF7  2DF9               	goto	u1910
  3580     0DF8                     u1911:
  3581     0DF8  2DFD               	goto	l2223
  3582     0DF9                     u1910:
  3583     0DF9                     l2221:
  3584                           
  3585                           ;IOCB.c: 28:         WPUBbits.WPUB4 = 1;
  3586     0DF9  1683               	bsf	3,5	;RP0=1, select bank1
  3587     0DFA  1303               	bcf	3,6	;RP1=0, select bank1
  3588     0DFB  1615               	bsf	21,4	;volatile
  3589                           
  3590                           ;IOCB.c: 29:         IOCBbits.IOCB4 = 1;
  3591     0DFC  1616               	bsf	22,4	;volatile
  3592     0DFD                     l2223:
  3593                           
  3594                           ;IOCB.c: 31:     if(pin == 3){
  3595     0DFD  3003               	movlw	3
  3596     0DFE  1283               	bcf	3,5	;RP0=0, select bank0
  3597     0DFF  0620               	xorwf	ioc_init@pin,w
  3598     0E00  1D03               	btfss	3,2
  3599     0E01  2E03               	goto	u1921
  3600     0E02  2E04               	goto	u1920
  3601     0E03                     u1921:
  3602     0E03  2E08               	goto	l2227
  3603     0E04                     u1920:
  3604     0E04                     l2225:
  3605                           
  3606                           ;IOCB.c: 32:         WPUBbits.WPUB3 = 1;
  3607     0E04  1683               	bsf	3,5	;RP0=1, select bank1
  3608     0E05  1303               	bcf	3,6	;RP1=0, select bank1
  3609     0E06  1595               	bsf	21,3	;volatile
  3610                           
  3611                           ;IOCB.c: 33:         IOCBbits.IOCB3 = 1;
  3612     0E07  1596               	bsf	22,3	;volatile
  3613     0E08                     l2227:
  3614                           
  3615                           ;IOCB.c: 35:     if(pin == 2){
  3616     0E08  3002               	movlw	2
  3617     0E09  1283               	bcf	3,5	;RP0=0, select bank0
  3618     0E0A  0620               	xorwf	ioc_init@pin,w
  3619     0E0B  1D03               	btfss	3,2
  3620     0E0C  2E0E               	goto	u1931
  3621     0E0D  2E0F               	goto	u1930
  3622     0E0E                     u1931:
  3623     0E0E  2E13               	goto	l2231
  3624     0E0F                     u1930:
  3625     0E0F                     l2229:
  3626                           
  3627                           ;IOCB.c: 36:         WPUBbits.WPUB2 = 1;
  3628     0E0F  1683               	bsf	3,5	;RP0=1, select bank1
  3629     0E10  1303               	bcf	3,6	;RP1=0, select bank1
  3630     0E11  1515               	bsf	21,2	;volatile
  3631                           
  3632                           ;IOCB.c: 37:         IOCBbits.IOCB2 = 1;
  3633     0E12  1516               	bsf	22,2	;volatile
  3634     0E13                     l2231:
  3635                           
  3636                           ;IOCB.c: 39:     if(pin == 1){
  3637     0E13  1283               	bcf	3,5	;RP0=0, select bank0
  3638     0E14  0320               	decf	ioc_init@pin,w
  3639     0E15  1D03               	btfss	3,2
  3640     0E16  2E18               	goto	u1941
  3641     0E17  2E19               	goto	u1940
  3642     0E18                     u1941:
  3643     0E18  2E1D               	goto	l2235
  3644     0E19                     u1940:
  3645     0E19                     l2233:
  3646                           
  3647                           ;IOCB.c: 40:         WPUBbits.WPUB1 = 1;
  3648     0E19  1683               	bsf	3,5	;RP0=1, select bank1
  3649     0E1A  1303               	bcf	3,6	;RP1=0, select bank1
  3650     0E1B  1495               	bsf	21,1	;volatile
  3651                           
  3652                           ;IOCB.c: 41:         IOCBbits.IOCB1 = 1;
  3653     0E1C  1496               	bsf	22,1	;volatile
  3654     0E1D                     l2235:
  3655                           
  3656                           ;IOCB.c: 43:     if(pin == 0){
  3657     0E1D  1283               	bcf	3,5	;RP0=0, select bank0
  3658     0E1E  0820               	movf	ioc_init@pin,w
  3659     0E1F  1D03               	btfss	3,2
  3660     0E20  2E22               	goto	u1951
  3661     0E21  2E23               	goto	u1950
  3662     0E22                     u1951:
  3663     0E22  2E27               	goto	l383
  3664     0E23                     u1950:
  3665     0E23                     l2237:
  3666                           
  3667                           ;IOCB.c: 44:         WPUBbits.WPUB0 = 1;
  3668     0E23  1683               	bsf	3,5	;RP0=1, select bank1
  3669     0E24  1303               	bcf	3,6	;RP1=0, select bank1
  3670     0E25  1415               	bsf	21,0	;volatile
  3671                           
  3672                           ;IOCB.c: 45:         IOCBbits.IOCB0 = 1;
  3673     0E26  1416               	bsf	22,0	;volatile
  3674     0E27                     l383:	
  3675                           ;IOCB.c: 46:     }
  3676                           
  3677                           
  3678                           ;IOCB.c: 47:     INTCONbits.RBIF = 0;
  3679     0E27  100B               	bcf	11,0	;volatile
  3680     0E28                     l384:
  3681     0E28  0008               	return
  3682     0E29                     __end_of_ioc_init:
  3683                           
  3684                           	psect	text7
  3685     0B4B                     __ptext7:	
  3686 ;; *************** function _I2C_Master_Init *****************
  3687 ;; Defined at:
  3688 ;;		line 16 in file "I2C.c"
  3689 ;; Parameters:    Size  Location     Type
  3690 ;;  c               4   14[BANK0 ] const unsigned long 
  3691 ;; Auto vars:     Size  Location     Type
  3692 ;;		None
  3693 ;; Return value:  Size  Location     Type
  3694 ;;                  1    wreg      void 
  3695 ;; Registers used:
  3696 ;;		wreg, status,2, status,0, pclath, cstack
  3697 ;; Tracked objects:
  3698 ;;		On entry : 0/0
  3699 ;;		On exit  : 0/0
  3700 ;;		Unchanged: 0/0
  3701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3702 ;;      Params:         0       4       0       0       0
  3703 ;;      Locals:         0       0       0       0       0
  3704 ;;      Temps:          0       4       0       0       0
  3705 ;;      Totals:         0       8       0       0       0
  3706 ;;Total ram usage:        8 bytes
  3707 ;; Hardware stack levels used: 1
  3708 ;; Hardware stack levels required when called: 5
  3709 ;; This function calls:
  3710 ;;		___lldiv
  3711 ;; This function is called by:
  3712 ;;		_setup
  3713 ;; This function uses a non-reentrant model
  3714 ;;
  3715                           
  3716     0B4B                     _I2C_Master_Init:	
  3717                           ;psect for function _I2C_Master_Init
  3718                           
  3719     0B4B                     l2239:	
  3720                           ;incstack = 0
  3721                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  3722                           
  3723                           
  3724                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  3725     0B4B  3028               	movlw	40
  3726     0B4C  1283               	bcf	3,5	;RP0=0, select bank0
  3727     0B4D  1303               	bcf	3,6	;RP1=0, select bank0
  3728     0B4E  0094               	movwf	20	;volatile
  3729     0B4F                     l2241:
  3730                           
  3731                           ;I2C.c: 19:     SSPCON2 = 0;
  3732     0B4F  1683               	bsf	3,5	;RP0=1, select bank1
  3733     0B50  1303               	bcf	3,6	;RP1=0, select bank1
  3734     0B51  0191               	clrf	17	;volatile
  3735     0B52                     l2243:
  3736                           
  3737                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  3738     0B52  1283               	bcf	3,5	;RP0=0, select bank0
  3739     0B53  1303               	bcf	3,6	;RP1=0, select bank0
  3740     0B54  082E               	movf	I2C_Master_Init@c,w
  3741     0B55  00B2               	movwf	??_I2C_Master_Init
  3742     0B56  082F               	movf	I2C_Master_Init@c+1,w
  3743     0B57  00B3               	movwf	??_I2C_Master_Init+1
  3744     0B58  0830               	movf	I2C_Master_Init@c+2,w
  3745     0B59  00B4               	movwf	??_I2C_Master_Init+2
  3746     0B5A  0831               	movf	I2C_Master_Init@c+3,w
  3747     0B5B  00B5               	movwf	??_I2C_Master_Init+3
  3748     0B5C  3002               	movlw	2
  3749     0B5D                     u1965:
  3750     0B5D  1003               	clrc
  3751     0B5E  0DB2               	rlf	??_I2C_Master_Init,f
  3752     0B5F  0DB3               	rlf	??_I2C_Master_Init+1,f
  3753     0B60  0DB4               	rlf	??_I2C_Master_Init+2,f
  3754     0B61  0DB5               	rlf	??_I2C_Master_Init+3,f
  3755     0B62                     u1960:
  3756     0B62  3EFF               	addlw	-1
  3757     0B63  1D03               	skipz
  3758     0B64  2B5D               	goto	u1965
  3759     0B65  0835               	movf	??_I2C_Master_Init+3,w
  3760     0B66  00A3               	movwf	___lldiv@divisor+3
  3761     0B67  0834               	movf	??_I2C_Master_Init+2,w
  3762     0B68  00A2               	movwf	___lldiv@divisor+2
  3763     0B69  0833               	movf	??_I2C_Master_Init+1,w
  3764     0B6A  00A1               	movwf	___lldiv@divisor+1
  3765     0B6B  0832               	movf	??_I2C_Master_Init,w
  3766     0B6C  00A0               	movwf	___lldiv@divisor
  3767     0B6D  3000               	movlw	0
  3768     0B6E  00A7               	movwf	___lldiv@dividend+3
  3769     0B6F  307A               	movlw	122
  3770     0B70  00A6               	movwf	___lldiv@dividend+2
  3771     0B71  3012               	movlw	18
  3772     0B72  00A5               	movwf	___lldiv@dividend+1
  3773     0B73  3000               	movlw	0
  3774     0B74  00A4               	movwf	___lldiv@dividend
  3775     0B75  120A  118A  2686  120A  158A  	fcall	___lldiv
  3776     0B7A  1283               	bcf	3,5	;RP0=0, select bank0
  3777     0B7B  1303               	bcf	3,6	;RP1=0, select bank0
  3778     0B7C  0820               	movf	?___lldiv,w
  3779     0B7D  3EFF               	addlw	255
  3780     0B7E  1683               	bsf	3,5	;RP0=1, select bank1
  3781     0B7F  1303               	bcf	3,6	;RP1=0, select bank1
  3782     0B80  0093               	movwf	19	;volatile
  3783     0B81                     l2245:
  3784                           
  3785                           ;I2C.c: 21:     SSPSTAT = 0;
  3786     0B81  0194               	clrf	20	;volatile
  3787     0B82                     l2247:
  3788                           
  3789                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  3790     0B82  1587               	bsf	7,3	;volatile
  3791     0B83                     l2249:
  3792                           
  3793                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  3794     0B83  1607               	bsf	7,4	;volatile
  3795     0B84                     l284:
  3796     0B84  0008               	return
  3797     0B85                     __end_of_I2C_Master_Init:
  3798                           
  3799                           	psect	text8
  3800     0686                     __ptext8:	
  3801 ;; *************** function ___lldiv *****************
  3802 ;; Defined at:
  3803 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  3804 ;; Parameters:    Size  Location     Type
  3805 ;;  divisor         4    0[BANK0 ] unsigned long 
  3806 ;;  dividend        4    4[BANK0 ] unsigned long 
  3807 ;; Auto vars:     Size  Location     Type
  3808 ;;  quotient        4    9[BANK0 ] unsigned long 
  3809 ;;  counter         1   13[BANK0 ] unsigned char 
  3810 ;; Return value:  Size  Location     Type
  3811 ;;                  4    0[BANK0 ] unsigned long 
  3812 ;; Registers used:
  3813 ;;		wreg, status,2, status,0
  3814 ;; Tracked objects:
  3815 ;;		On entry : 0/0
  3816 ;;		On exit  : 0/0
  3817 ;;		Unchanged: 0/0
  3818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3819 ;;      Params:         0       8       0       0       0
  3820 ;;      Locals:         0       5       0       0       0
  3821 ;;      Temps:          0       1       0       0       0
  3822 ;;      Totals:         0      14       0       0       0
  3823 ;;Total ram usage:       14 bytes
  3824 ;; Hardware stack levels used: 1
  3825 ;; Hardware stack levels required when called: 4
  3826 ;; This function calls:
  3827 ;;		Nothing
  3828 ;; This function is called by:
  3829 ;;		_I2C_Master_Init
  3830 ;; This function uses a non-reentrant model
  3831 ;;
  3832                           
  3833     0686                     ___lldiv:	
  3834                           ;psect for function ___lldiv
  3835                           
  3836     0686                     l2177:	
  3837                           ;incstack = 0
  3838                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3839                           
  3840     0686  3000               	movlw	0
  3841     0687  1283               	bcf	3,5	;RP0=0, select bank0
  3842     0688  1303               	bcf	3,6	;RP1=0, select bank0
  3843     0689  00AC               	movwf	___lldiv@quotient+3
  3844     068A  3000               	movlw	0
  3845     068B  00AB               	movwf	___lldiv@quotient+2
  3846     068C  3000               	movlw	0
  3847     068D  00AA               	movwf	___lldiv@quotient+1
  3848     068E  3000               	movlw	0
  3849     068F  00A9               	movwf	___lldiv@quotient
  3850     0690  0823               	movf	___lldiv@divisor+3,w
  3851     0691  0422               	iorwf	___lldiv@divisor+2,w
  3852     0692  0421               	iorwf	___lldiv@divisor+1,w
  3853     0693  0420               	iorwf	___lldiv@divisor,w
  3854     0694  1903               	skipnz
  3855     0695  2E97               	goto	u1791
  3856     0696  2E98               	goto	u1790
  3857     0697                     u1791:
  3858     0697  2EE5               	goto	l2197
  3859     0698                     u1790:
  3860     0698                     l2179:
  3861     0698  01AD               	clrf	___lldiv@counter
  3862     0699  0AAD               	incf	___lldiv@counter,f
  3863     069A  2EA8               	goto	l2183
  3864     069B                     l2181:
  3865     069B  3001               	movlw	1
  3866     069C  00A8               	movwf	??___lldiv
  3867     069D                     u1805:
  3868     069D  1003               	clrc
  3869     069E  0DA0               	rlf	___lldiv@divisor,f
  3870     069F  0DA1               	rlf	___lldiv@divisor+1,f
  3871     06A0  0DA2               	rlf	___lldiv@divisor+2,f
  3872     06A1  0DA3               	rlf	___lldiv@divisor+3,f
  3873     06A2  0BA8               	decfsz	??___lldiv,f
  3874     06A3  2E9D               	goto	u1805
  3875     06A4  3001               	movlw	1
  3876     06A5  00A8               	movwf	??___lldiv
  3877     06A6  0828               	movf	??___lldiv,w
  3878     06A7  07AD               	addwf	___lldiv@counter,f
  3879     06A8                     l2183:
  3880     06A8  1FA3               	btfss	___lldiv@divisor+3,7
  3881     06A9  2EAB               	goto	u1811
  3882     06AA  2EAC               	goto	u1810
  3883     06AB                     u1811:
  3884     06AB  2E9B               	goto	l2181
  3885     06AC                     u1810:
  3886     06AC                     l2185:
  3887     06AC  3001               	movlw	1
  3888     06AD  00A8               	movwf	??___lldiv
  3889     06AE                     u1825:
  3890     06AE  1003               	clrc
  3891     06AF  0DA9               	rlf	___lldiv@quotient,f
  3892     06B0  0DAA               	rlf	___lldiv@quotient+1,f
  3893     06B1  0DAB               	rlf	___lldiv@quotient+2,f
  3894     06B2  0DAC               	rlf	___lldiv@quotient+3,f
  3895     06B3  0BA8               	decfsz	??___lldiv,f
  3896     06B4  2EAE               	goto	u1825
  3897     06B5                     l2187:
  3898     06B5  0823               	movf	___lldiv@divisor+3,w
  3899     06B6  0227               	subwf	___lldiv@dividend+3,w
  3900     06B7  1D03               	skipz
  3901     06B8  2EC3               	goto	u1835
  3902     06B9  0822               	movf	___lldiv@divisor+2,w
  3903     06BA  0226               	subwf	___lldiv@dividend+2,w
  3904     06BB  1D03               	skipz
  3905     06BC  2EC3               	goto	u1835
  3906     06BD  0821               	movf	___lldiv@divisor+1,w
  3907     06BE  0225               	subwf	___lldiv@dividend+1,w
  3908     06BF  1D03               	skipz
  3909     06C0  2EC3               	goto	u1835
  3910     06C1  0820               	movf	___lldiv@divisor,w
  3911     06C2  0224               	subwf	___lldiv@dividend,w
  3912     06C3                     u1835:
  3913     06C3  1C03               	skipc
  3914     06C4  2EC6               	goto	u1831
  3915     06C5  2EC7               	goto	u1830
  3916     06C6                     u1831:
  3917     06C6  2ED6               	goto	l2193
  3918     06C7                     u1830:
  3919     06C7                     l2189:
  3920     06C7  0820               	movf	___lldiv@divisor,w
  3921     06C8  02A4               	subwf	___lldiv@dividend,f
  3922     06C9  0821               	movf	___lldiv@divisor+1,w
  3923     06CA  1C03               	skipc
  3924     06CB  0F21               	incfsz	___lldiv@divisor+1,w
  3925     06CC  02A5               	subwf	___lldiv@dividend+1,f
  3926     06CD  0822               	movf	___lldiv@divisor+2,w
  3927     06CE  1C03               	skipc
  3928     06CF  0F22               	incfsz	___lldiv@divisor+2,w
  3929     06D0  02A6               	subwf	___lldiv@dividend+2,f
  3930     06D1  0823               	movf	___lldiv@divisor+3,w
  3931     06D2  1C03               	skipc
  3932     06D3  0F23               	incfsz	___lldiv@divisor+3,w
  3933     06D4  02A7               	subwf	___lldiv@dividend+3,f
  3934     06D5                     l2191:
  3935     06D5  1429               	bsf	___lldiv@quotient,0
  3936     06D6                     l2193:
  3937     06D6  3001               	movlw	1
  3938     06D7                     u1845:
  3939     06D7  1003               	clrc
  3940     06D8  0CA3               	rrf	___lldiv@divisor+3,f
  3941     06D9  0CA2               	rrf	___lldiv@divisor+2,f
  3942     06DA  0CA1               	rrf	___lldiv@divisor+1,f
  3943     06DB  0CA0               	rrf	___lldiv@divisor,f
  3944     06DC  3EFF               	addlw	-1
  3945     06DD  1D03               	skipz
  3946     06DE  2ED7               	goto	u1845
  3947     06DF                     l2195:
  3948     06DF  3001               	movlw	1
  3949     06E0  02AD               	subwf	___lldiv@counter,f
  3950     06E1  1D03               	btfss	3,2
  3951     06E2  2EE4               	goto	u1851
  3952     06E3  2EE5               	goto	u1850
  3953     06E4                     u1851:
  3954     06E4  2EAC               	goto	l2185
  3955     06E5                     u1850:
  3956     06E5                     l2197:
  3957     06E5  082C               	movf	___lldiv@quotient+3,w
  3958     06E6  00A3               	movwf	?___lldiv+3
  3959     06E7  082B               	movf	___lldiv@quotient+2,w
  3960     06E8  00A2               	movwf	?___lldiv+2
  3961     06E9  082A               	movf	___lldiv@quotient+1,w
  3962     06EA  00A1               	movwf	?___lldiv+1
  3963     06EB  0829               	movf	___lldiv@quotient,w
  3964     06EC  00A0               	movwf	?___lldiv
  3965     06ED                     l560:
  3966     06ED  0008               	return
  3967     06EE                     __end_of___lldiv:
  3968                           
  3969                           	psect	text9
  3970     09BF                     __ptext9:	
  3971 ;; *************** function _map *****************
  3972 ;; Defined at:
  3973 ;;		line 55 in file "main.c"
  3974 ;; Parameters:    Size  Location     Type
  3975 ;;  value           1    wreg     unsigned char 
  3976 ;;  inputmin        2   15[BANK0 ] int 
  3977 ;;  inputmax        2   17[BANK0 ] int 
  3978 ;;  outmin          2   19[BANK0 ] int 
  3979 ;;  outmax          2   21[BANK0 ] int 
  3980 ;; Auto vars:     Size  Location     Type
  3981 ;;  value           1   24[BANK0 ] unsigned char 
  3982 ;; Return value:  Size  Location     Type
  3983 ;;                  2   15[BANK0 ] int 
  3984 ;; Registers used:
  3985 ;;		wreg, status,2, status,0, pclath, cstack
  3986 ;; Tracked objects:
  3987 ;;		On entry : 0/0
  3988 ;;		On exit  : 0/0
  3989 ;;		Unchanged: 0/0
  3990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3991 ;;      Params:         0       8       0       0       0
  3992 ;;      Locals:         0       1       0       0       0
  3993 ;;      Temps:          0       1       0       0       0
  3994 ;;      Totals:         0      10       0       0       0
  3995 ;;Total ram usage:       10 bytes
  3996 ;; Hardware stack levels used: 1
  3997 ;; Hardware stack levels required when called: 5
  3998 ;; This function calls:
  3999 ;;		___awdiv
  4000 ;;		___wmul
  4001 ;; This function is called by:
  4002 ;;		_main
  4003 ;; This function uses a non-reentrant model
  4004 ;;
  4005                           
  4006     09BF                     _map:	
  4007                           ;psect for function _map
  4008                           
  4009                           
  4010                           ;incstack = 0
  4011                           ; Regs used in _map: [wreg+status,2+status,0+pclath+cstack]
  4012                           ;map@value stored from wreg
  4013     09BF  1283               	bcf	3,5	;RP0=0, select bank0
  4014     09C0  1303               	bcf	3,6	;RP1=0, select bank0
  4015     09C1  00B8               	movwf	map@value
  4016     09C2                     l2453:
  4017                           
  4018                           ;main.c: 56:     return ((value - inputmin)*(outmax-outmin)) / (inputmax-inputmin)+outmi
      +                          n;}
  4019     09C2  082F               	movf	map@inputmin,w
  4020     09C3  0231               	subwf	map@inputmax,w
  4021     09C4  00A6               	movwf	___awdiv@divisor
  4022     09C5  0830               	movf	map@inputmin+1,w
  4023     09C6  1C03               	skipc
  4024     09C7  0A30               	incf	map@inputmin+1,w
  4025     09C8  0232               	subwf	map@inputmax+1,w
  4026     09C9  00A7               	movwf	___awdiv@divisor+1
  4027     09CA  0838               	movf	map@value,w
  4028     09CB  00B7               	movwf	??_map
  4029     09CC  082F               	movf	map@inputmin,w
  4030     09CD  0237               	subwf	??_map,w
  4031     09CE  00A0               	movwf	___wmul@multiplier
  4032     09CF  0930               	comf	map@inputmin+1,w
  4033     09D0  1803               	skipnc
  4034     09D1  3E01               	addlw	1
  4035     09D2  00A1               	movwf	___wmul@multiplier+1
  4036     09D3  0833               	movf	map@outmin,w
  4037     09D4  0235               	subwf	map@outmax,w
  4038     09D5  00A2               	movwf	___wmul@multiplicand
  4039     09D6  0834               	movf	map@outmin+1,w
  4040     09D7  1C03               	skipc
  4041     09D8  0A34               	incf	map@outmin+1,w
  4042     09D9  0236               	subwf	map@outmax+1,w
  4043     09DA  00A3               	movwf	___wmul@multiplicand+1
  4044     09DB  160A  118A  27D9  120A  158A  	fcall	___wmul
  4045     09E0  1283               	bcf	3,5	;RP0=0, select bank0
  4046     09E1  1303               	bcf	3,6	;RP1=0, select bank0
  4047     09E2  0821               	movf	?___wmul+1,w
  4048     09E3  00A9               	movwf	___awdiv@dividend+1
  4049     09E4  0820               	movf	?___wmul,w
  4050     09E5  00A8               	movwf	___awdiv@dividend
  4051     09E6  120A  118A  277E  120A  158A  	fcall	___awdiv
  4052     09EB  1283               	bcf	3,5	;RP0=0, select bank0
  4053     09EC  1303               	bcf	3,6	;RP1=0, select bank0
  4054     09ED  0833               	movf	map@outmin,w
  4055     09EE  0726               	addwf	?___awdiv,w
  4056     09EF  00AF               	movwf	?_map
  4057     09F0  0834               	movf	map@outmin+1,w
  4058     09F1  1803               	skipnc
  4059     09F2  0A34               	incf	map@outmin+1,w
  4060     09F3  0727               	addwf	?___awdiv+1,w
  4061     09F4  00B0               	movwf	?_map+1
  4062     09F5                     l103:
  4063     09F5  0008               	return
  4064     09F6                     __end_of_map:
  4065                           
  4066                           	psect	text10
  4067     17D9                     __ptext10:	
  4068 ;; *************** function ___wmul *****************
  4069 ;; Defined at:
  4070 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  4071 ;; Parameters:    Size  Location     Type
  4072 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4073 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4074 ;; Auto vars:     Size  Location     Type
  4075 ;;  product         2    4[BANK0 ] unsigned int 
  4076 ;; Return value:  Size  Location     Type
  4077 ;;                  2    0[BANK0 ] unsigned int 
  4078 ;; Registers used:
  4079 ;;		wreg, status,2, status,0
  4080 ;; Tracked objects:
  4081 ;;		On entry : 0/0
  4082 ;;		On exit  : 0/0
  4083 ;;		Unchanged: 0/0
  4084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4085 ;;      Params:         0       4       0       0       0
  4086 ;;      Locals:         0       2       0       0       0
  4087 ;;      Temps:          0       0       0       0       0
  4088 ;;      Totals:         0       6       0       0       0
  4089 ;;Total ram usage:        6 bytes
  4090 ;; Hardware stack levels used: 1
  4091 ;; Hardware stack levels required when called: 4
  4092 ;; This function calls:
  4093 ;;		Nothing
  4094 ;; This function is called by:
  4095 ;;		_map
  4096 ;;		_main
  4097 ;;		_sprintf
  4098 ;; This function uses a non-reentrant model
  4099 ;;
  4100                           
  4101     17D9                     ___wmul:	
  4102                           ;psect for function ___wmul
  4103                           
  4104     17D9                     l2323:	
  4105                           ;incstack = 0
  4106                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4107                           
  4108     17D9  1283               	bcf	3,5	;RP0=0, select bank0
  4109     17DA  1303               	bcf	3,6	;RP1=0, select bank0
  4110     17DB  01A4               	clrf	___wmul@product
  4111     17DC  01A5               	clrf	___wmul@product+1
  4112     17DD                     l2325:
  4113     17DD  1C20               	btfss	___wmul@multiplier,0
  4114     17DE  2FE0               	goto	u2011
  4115     17DF  2FE1               	goto	u2010
  4116     17E0                     u2011:
  4117     17E0  2FE7               	goto	l524
  4118     17E1                     u2010:
  4119     17E1                     l2327:
  4120     17E1  0822               	movf	___wmul@multiplicand,w
  4121     17E2  07A4               	addwf	___wmul@product,f
  4122     17E3  1803               	skipnc
  4123     17E4  0AA5               	incf	___wmul@product+1,f
  4124     17E5  0823               	movf	___wmul@multiplicand+1,w
  4125     17E6  07A5               	addwf	___wmul@product+1,f
  4126     17E7                     l524:
  4127     17E7  3001               	movlw	1
  4128     17E8                     u2025:
  4129     17E8  1003               	clrc
  4130     17E9  0DA2               	rlf	___wmul@multiplicand,f
  4131     17EA  0DA3               	rlf	___wmul@multiplicand+1,f
  4132     17EB  3EFF               	addlw	-1
  4133     17EC  1D03               	skipz
  4134     17ED  2FE8               	goto	u2025
  4135     17EE                     l2329:
  4136     17EE  3001               	movlw	1
  4137     17EF                     u2035:
  4138     17EF  1003               	clrc
  4139     17F0  0CA1               	rrf	___wmul@multiplier+1,f
  4140     17F1  0CA0               	rrf	___wmul@multiplier,f
  4141     17F2  3EFF               	addlw	-1
  4142     17F3  1D03               	skipz
  4143     17F4  2FEF               	goto	u2035
  4144     17F5                     l2331:
  4145     17F5  0820               	movf	___wmul@multiplier,w
  4146     17F6  0421               	iorwf	___wmul@multiplier+1,w
  4147     17F7  1D03               	btfss	3,2
  4148     17F8  2FFA               	goto	u2041
  4149     17F9  2FFB               	goto	u2040
  4150     17FA                     u2041:
  4151     17FA  2FDD               	goto	l2325
  4152     17FB                     u2040:
  4153     17FB                     l2333:
  4154     17FB  0825               	movf	___wmul@product+1,w
  4155     17FC  00A1               	movwf	?___wmul+1
  4156     17FD  0824               	movf	___wmul@product,w
  4157     17FE  00A0               	movwf	?___wmul
  4158     17FF                     l526:
  4159     17FF  0008               	return
  4160     1800                     __end_of___wmul:
  4161                           
  4162                           	psect	text11
  4163     077E                     __ptext11:	
  4164 ;; *************** function ___awdiv *****************
  4165 ;; Defined at:
  4166 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  4167 ;; Parameters:    Size  Location     Type
  4168 ;;  divisor         2    6[BANK0 ] int 
  4169 ;;  dividend        2    8[BANK0 ] int 
  4170 ;; Auto vars:     Size  Location     Type
  4171 ;;  quotient        2   13[BANK0 ] int 
  4172 ;;  sign            1   12[BANK0 ] unsigned char 
  4173 ;;  counter         1   11[BANK0 ] unsigned char 
  4174 ;; Return value:  Size  Location     Type
  4175 ;;                  2    6[BANK0 ] int 
  4176 ;; Registers used:
  4177 ;;		wreg, status,2, status,0
  4178 ;; Tracked objects:
  4179 ;;		On entry : 0/0
  4180 ;;		On exit  : 0/0
  4181 ;;		Unchanged: 0/0
  4182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4183 ;;      Params:         0       4       0       0       0
  4184 ;;      Locals:         0       4       0       0       0
  4185 ;;      Temps:          0       1       0       0       0
  4186 ;;      Totals:         0       9       0       0       0
  4187 ;;Total ram usage:        9 bytes
  4188 ;; Hardware stack levels used: 1
  4189 ;; Hardware stack levels required when called: 4
  4190 ;; This function calls:
  4191 ;;		Nothing
  4192 ;; This function is called by:
  4193 ;;		_map
  4194 ;;		_main
  4195 ;; This function uses a non-reentrant model
  4196 ;;
  4197                           
  4198     077E                     ___awdiv:	
  4199                           ;psect for function ___awdiv
  4200                           
  4201     077E                     l2337:	
  4202                           ;incstack = 0
  4203                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4204                           
  4205     077E  1283               	bcf	3,5	;RP0=0, select bank0
  4206     077F  1303               	bcf	3,6	;RP1=0, select bank0
  4207     0780  01AC               	clrf	___awdiv@sign
  4208     0781                     l2339:
  4209     0781  1FA7               	btfss	___awdiv@divisor+1,7
  4210     0782  2F84               	goto	u2051
  4211     0783  2F85               	goto	u2050
  4212     0784                     u2051:
  4213     0784  2F8C               	goto	l2345
  4214     0785                     u2050:
  4215     0785                     l2341:
  4216     0785  09A6               	comf	___awdiv@divisor,f
  4217     0786  09A7               	comf	___awdiv@divisor+1,f
  4218     0787  0AA6               	incf	___awdiv@divisor,f
  4219     0788  1903               	skipnz
  4220     0789  0AA7               	incf	___awdiv@divisor+1,f
  4221     078A                     l2343:
  4222     078A  01AC               	clrf	___awdiv@sign
  4223     078B  0AAC               	incf	___awdiv@sign,f
  4224     078C                     l2345:
  4225     078C  1FA9               	btfss	___awdiv@dividend+1,7
  4226     078D  2F8F               	goto	u2061
  4227     078E  2F90               	goto	u2060
  4228     078F                     u2061:
  4229     078F  2F99               	goto	l2351
  4230     0790                     u2060:
  4231     0790                     l2347:
  4232     0790  09A8               	comf	___awdiv@dividend,f
  4233     0791  09A9               	comf	___awdiv@dividend+1,f
  4234     0792  0AA8               	incf	___awdiv@dividend,f
  4235     0793  1903               	skipnz
  4236     0794  0AA9               	incf	___awdiv@dividend+1,f
  4237     0795                     l2349:
  4238     0795  3001               	movlw	1
  4239     0796  00AA               	movwf	??___awdiv
  4240     0797  082A               	movf	??___awdiv,w
  4241     0798  06AC               	xorwf	___awdiv@sign,f
  4242     0799                     l2351:
  4243     0799  01AD               	clrf	___awdiv@quotient
  4244     079A  01AE               	clrf	___awdiv@quotient+1
  4245     079B                     l2353:
  4246     079B  0826               	movf	___awdiv@divisor,w
  4247     079C  0427               	iorwf	___awdiv@divisor+1,w
  4248     079D  1903               	btfsc	3,2
  4249     079E  2FA0               	goto	u2071
  4250     079F  2FA1               	goto	u2070
  4251     07A0                     u2071:
  4252     07A0  2FD8               	goto	l2373
  4253     07A1                     u2070:
  4254     07A1                     l2355:
  4255     07A1  01AB               	clrf	___awdiv@counter
  4256     07A2  0AAB               	incf	___awdiv@counter,f
  4257     07A3  2FAF               	goto	l2361
  4258     07A4                     l2357:
  4259     07A4  3001               	movlw	1
  4260     07A5                     u2085:
  4261     07A5  1003               	clrc
  4262     07A6  0DA6               	rlf	___awdiv@divisor,f
  4263     07A7  0DA7               	rlf	___awdiv@divisor+1,f
  4264     07A8  3EFF               	addlw	-1
  4265     07A9  1D03               	skipz
  4266     07AA  2FA5               	goto	u2085
  4267     07AB                     l2359:
  4268     07AB  3001               	movlw	1
  4269     07AC  00AA               	movwf	??___awdiv
  4270     07AD  082A               	movf	??___awdiv,w
  4271     07AE  07AB               	addwf	___awdiv@counter,f
  4272     07AF                     l2361:
  4273     07AF  1FA7               	btfss	___awdiv@divisor+1,7
  4274     07B0  2FB2               	goto	u2091
  4275     07B1  2FB3               	goto	u2090
  4276     07B2                     u2091:
  4277     07B2  2FA4               	goto	l2357
  4278     07B3                     u2090:
  4279     07B3                     l2363:
  4280     07B3  3001               	movlw	1
  4281     07B4                     u2105:
  4282     07B4  1003               	clrc
  4283     07B5  0DAD               	rlf	___awdiv@quotient,f
  4284     07B6  0DAE               	rlf	___awdiv@quotient+1,f
  4285     07B7  3EFF               	addlw	-1
  4286     07B8  1D03               	skipz
  4287     07B9  2FB4               	goto	u2105
  4288     07BA  0827               	movf	___awdiv@divisor+1,w
  4289     07BB  0229               	subwf	___awdiv@dividend+1,w
  4290     07BC  1D03               	skipz
  4291     07BD  2FC0               	goto	u2115
  4292     07BE  0826               	movf	___awdiv@divisor,w
  4293     07BF  0228               	subwf	___awdiv@dividend,w
  4294     07C0                     u2115:
  4295     07C0  1C03               	skipc
  4296     07C1  2FC3               	goto	u2111
  4297     07C2  2FC4               	goto	u2110
  4298     07C3                     u2111:
  4299     07C3  2FCB               	goto	l2369
  4300     07C4                     u2110:
  4301     07C4                     l2365:
  4302     07C4  0826               	movf	___awdiv@divisor,w
  4303     07C5  02A8               	subwf	___awdiv@dividend,f
  4304     07C6  0827               	movf	___awdiv@divisor+1,w
  4305     07C7  1C03               	skipc
  4306     07C8  03A9               	decf	___awdiv@dividend+1,f
  4307     07C9  02A9               	subwf	___awdiv@dividend+1,f
  4308     07CA                     l2367:
  4309     07CA  142D               	bsf	___awdiv@quotient,0
  4310     07CB                     l2369:
  4311     07CB  3001               	movlw	1
  4312     07CC                     u2125:
  4313     07CC  1003               	clrc
  4314     07CD  0CA7               	rrf	___awdiv@divisor+1,f
  4315     07CE  0CA6               	rrf	___awdiv@divisor,f
  4316     07CF  3EFF               	addlw	-1
  4317     07D0  1D03               	skipz
  4318     07D1  2FCC               	goto	u2125
  4319     07D2                     l2371:
  4320     07D2  3001               	movlw	1
  4321     07D3  02AB               	subwf	___awdiv@counter,f
  4322     07D4  1D03               	btfss	3,2
  4323     07D5  2FD7               	goto	u2131
  4324     07D6  2FD8               	goto	u2130
  4325     07D7                     u2131:
  4326     07D7  2FB3               	goto	l2363
  4327     07D8                     u2130:
  4328     07D8                     l2373:
  4329     07D8  082C               	movf	___awdiv@sign,w
  4330     07D9  1903               	btfsc	3,2
  4331     07DA  2FDC               	goto	u2141
  4332     07DB  2FDD               	goto	u2140
  4333     07DC                     u2141:
  4334     07DC  2FE2               	goto	l2377
  4335     07DD                     u2140:
  4336     07DD                     l2375:
  4337     07DD  09AD               	comf	___awdiv@quotient,f
  4338     07DE  09AE               	comf	___awdiv@quotient+1,f
  4339     07DF  0AAD               	incf	___awdiv@quotient,f
  4340     07E0  1903               	skipnz
  4341     07E1  0AAE               	incf	___awdiv@quotient+1,f
  4342     07E2                     l2377:
  4343     07E2  082E               	movf	___awdiv@quotient+1,w
  4344     07E3  00A7               	movwf	?___awdiv+1
  4345     07E4  082D               	movf	___awdiv@quotient,w
  4346     07E5  00A6               	movwf	?___awdiv
  4347     07E6                     l677:
  4348     07E6  0008               	return
  4349     07E7                     __end_of___awdiv:
  4350                           
  4351                           	psect	text12
  4352     0D6E                     __ptext12:	
  4353 ;; *************** function ___awmod *****************
  4354 ;; Defined at:
  4355 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  4356 ;; Parameters:    Size  Location     Type
  4357 ;;  divisor         2   15[BANK0 ] int 
  4358 ;;  dividend        2   17[BANK0 ] int 
  4359 ;; Auto vars:     Size  Location     Type
  4360 ;;  sign            1   21[BANK0 ] unsigned char 
  4361 ;;  counter         1   20[BANK0 ] unsigned char 
  4362 ;; Return value:  Size  Location     Type
  4363 ;;                  2   15[BANK0 ] int 
  4364 ;; Registers used:
  4365 ;;		wreg, status,2, status,0
  4366 ;; Tracked objects:
  4367 ;;		On entry : 0/0
  4368 ;;		On exit  : 0/0
  4369 ;;		Unchanged: 0/0
  4370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4371 ;;      Params:         0       4       0       0       0
  4372 ;;      Locals:         0       2       0       0       0
  4373 ;;      Temps:          0       1       0       0       0
  4374 ;;      Totals:         0       7       0       0       0
  4375 ;;Total ram usage:        7 bytes
  4376 ;; Hardware stack levels used: 1
  4377 ;; Hardware stack levels required when called: 4
  4378 ;; This function calls:
  4379 ;;		Nothing
  4380 ;; This function is called by:
  4381 ;;		_main
  4382 ;; This function uses a non-reentrant model
  4383 ;;
  4384                           
  4385     0D6E                     ___awmod:	
  4386                           ;psect for function ___awmod
  4387                           
  4388     0D6E                     l2659:	
  4389                           ;incstack = 0
  4390                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4391                           
  4392     0D6E  1283               	bcf	3,5	;RP0=0, select bank0
  4393     0D6F  1303               	bcf	3,6	;RP1=0, select bank0
  4394     0D70  01B5               	clrf	___awmod@sign
  4395     0D71                     l2661:
  4396     0D71  1FB2               	btfss	___awmod@dividend+1,7
  4397     0D72  2D74               	goto	u2531
  4398     0D73  2D75               	goto	u2530
  4399     0D74                     u2531:
  4400     0D74  2D7C               	goto	l2667
  4401     0D75                     u2530:
  4402     0D75                     l2663:
  4403     0D75  09B1               	comf	___awmod@dividend,f
  4404     0D76  09B2               	comf	___awmod@dividend+1,f
  4405     0D77  0AB1               	incf	___awmod@dividend,f
  4406     0D78  1903               	skipnz
  4407     0D79  0AB2               	incf	___awmod@dividend+1,f
  4408     0D7A                     l2665:
  4409     0D7A  01B5               	clrf	___awmod@sign
  4410     0D7B  0AB5               	incf	___awmod@sign,f
  4411     0D7C                     l2667:
  4412     0D7C  1FB0               	btfss	___awmod@divisor+1,7
  4413     0D7D  2D7F               	goto	u2541
  4414     0D7E  2D80               	goto	u2540
  4415     0D7F                     u2541:
  4416     0D7F  2D85               	goto	l2671
  4417     0D80                     u2540:
  4418     0D80                     l2669:
  4419     0D80  09AF               	comf	___awmod@divisor,f
  4420     0D81  09B0               	comf	___awmod@divisor+1,f
  4421     0D82  0AAF               	incf	___awmod@divisor,f
  4422     0D83  1903               	skipnz
  4423     0D84  0AB0               	incf	___awmod@divisor+1,f
  4424     0D85                     l2671:
  4425     0D85  082F               	movf	___awmod@divisor,w
  4426     0D86  0430               	iorwf	___awmod@divisor+1,w
  4427     0D87  1903               	btfsc	3,2
  4428     0D88  2D8A               	goto	u2551
  4429     0D89  2D8B               	goto	u2550
  4430     0D8A                     u2551:
  4431     0D8A  2DBA               	goto	l2689
  4432     0D8B                     u2550:
  4433     0D8B                     l2673:
  4434     0D8B  01B4               	clrf	___awmod@counter
  4435     0D8C  0AB4               	incf	___awmod@counter,f
  4436     0D8D  2D99               	goto	l2679
  4437     0D8E                     l2675:
  4438     0D8E  3001               	movlw	1
  4439     0D8F                     u2565:
  4440     0D8F  1003               	clrc
  4441     0D90  0DAF               	rlf	___awmod@divisor,f
  4442     0D91  0DB0               	rlf	___awmod@divisor+1,f
  4443     0D92  3EFF               	addlw	-1
  4444     0D93  1D03               	skipz
  4445     0D94  2D8F               	goto	u2565
  4446     0D95                     l2677:
  4447     0D95  3001               	movlw	1
  4448     0D96  00B3               	movwf	??___awmod
  4449     0D97  0833               	movf	??___awmod,w
  4450     0D98  07B4               	addwf	___awmod@counter,f
  4451     0D99                     l2679:
  4452     0D99  1FB0               	btfss	___awmod@divisor+1,7
  4453     0D9A  2D9C               	goto	u2571
  4454     0D9B  2D9D               	goto	u2570
  4455     0D9C                     u2571:
  4456     0D9C  2D8E               	goto	l2675
  4457     0D9D                     u2570:
  4458     0D9D                     l2681:
  4459     0D9D  0830               	movf	___awmod@divisor+1,w
  4460     0D9E  0232               	subwf	___awmod@dividend+1,w
  4461     0D9F  1D03               	skipz
  4462     0DA0  2DA3               	goto	u2585
  4463     0DA1  082F               	movf	___awmod@divisor,w
  4464     0DA2  0231               	subwf	___awmod@dividend,w
  4465     0DA3                     u2585:
  4466     0DA3  1C03               	skipc
  4467     0DA4  2DA6               	goto	u2581
  4468     0DA5  2DA7               	goto	u2580
  4469     0DA6                     u2581:
  4470     0DA6  2DAD               	goto	l2685
  4471     0DA7                     u2580:
  4472     0DA7                     l2683:
  4473     0DA7  082F               	movf	___awmod@divisor,w
  4474     0DA8  02B1               	subwf	___awmod@dividend,f
  4475     0DA9  0830               	movf	___awmod@divisor+1,w
  4476     0DAA  1C03               	skipc
  4477     0DAB  03B2               	decf	___awmod@dividend+1,f
  4478     0DAC  02B2               	subwf	___awmod@dividend+1,f
  4479     0DAD                     l2685:
  4480     0DAD  3001               	movlw	1
  4481     0DAE                     u2595:
  4482     0DAE  1003               	clrc
  4483     0DAF  0CB0               	rrf	___awmod@divisor+1,f
  4484     0DB0  0CAF               	rrf	___awmod@divisor,f
  4485     0DB1  3EFF               	addlw	-1
  4486     0DB2  1D03               	skipz
  4487     0DB3  2DAE               	goto	u2595
  4488     0DB4                     l2687:
  4489     0DB4  3001               	movlw	1
  4490     0DB5  02B4               	subwf	___awmod@counter,f
  4491     0DB6  1D03               	btfss	3,2
  4492     0DB7  2DB9               	goto	u2601
  4493     0DB8  2DBA               	goto	u2600
  4494     0DB9                     u2601:
  4495     0DB9  2D9D               	goto	l2681
  4496     0DBA                     u2600:
  4497     0DBA                     l2689:
  4498     0DBA  0835               	movf	___awmod@sign,w
  4499     0DBB  1903               	btfsc	3,2
  4500     0DBC  2DBE               	goto	u2611
  4501     0DBD  2DBF               	goto	u2610
  4502     0DBE                     u2611:
  4503     0DBE  2DC4               	goto	l2693
  4504     0DBF                     u2610:
  4505     0DBF                     l2691:
  4506     0DBF  09B1               	comf	___awmod@dividend,f
  4507     0DC0  09B2               	comf	___awmod@dividend+1,f
  4508     0DC1  0AB1               	incf	___awmod@dividend,f
  4509     0DC2  1903               	skipnz
  4510     0DC3  0AB2               	incf	___awmod@dividend+1,f
  4511     0DC4                     l2693:
  4512     0DC4  0832               	movf	___awmod@dividend+1,w
  4513     0DC5  00B0               	movwf	?___awmod+1
  4514     0DC6  0831               	movf	___awmod@dividend,w
  4515     0DC7  00AF               	movwf	?___awmod
  4516     0DC8                     l690:
  4517     0DC8  0008               	return
  4518     0DC9                     __end_of___awmod:
  4519                           
  4520                           	psect	text13
  4521     0B12                     __ptext13:	
  4522 ;; *************** function _Set_year *****************
  4523 ;; Defined at:
  4524 ;;		line 515 in file "main.c"
  4525 ;; Parameters:    Size  Location     Type
  4526 ;;  year            1    wreg     unsigned char 
  4527 ;; Auto vars:     Size  Location     Type
  4528 ;;  year            1    6[BANK0 ] unsigned char 
  4529 ;; Return value:  Size  Location     Type
  4530 ;;                  1    wreg      void 
  4531 ;; Registers used:
  4532 ;;		wreg, status,2, status,0, pclath, cstack
  4533 ;; Tracked objects:
  4534 ;;		On entry : 0/0
  4535 ;;		On exit  : 0/0
  4536 ;;		Unchanged: 0/0
  4537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4538 ;;      Params:         0       0       0       0       0
  4539 ;;      Locals:         0       1       0       0       0
  4540 ;;      Temps:          0       2       0       0       0
  4541 ;;      Totals:         0       3       0       0       0
  4542 ;;Total ram usage:        3 bytes
  4543 ;; Hardware stack levels used: 1
  4544 ;; Hardware stack levels required when called: 6
  4545 ;; This function calls:
  4546 ;;		_Dec_to_Bcd
  4547 ;;		_I2C_Master_Start
  4548 ;;		_I2C_Master_Stop
  4549 ;;		_I2C_Master_Write
  4550 ;; This function is called by:
  4551 ;;		_main
  4552 ;; This function uses a non-reentrant model
  4553 ;;
  4554                           
  4555     0B12                     _Set_year:	
  4556                           ;psect for function _Set_year
  4557                           
  4558                           
  4559                           ;incstack = 0
  4560                           ; Regs used in _Set_year: [wreg+status,2+status,0+pclath+cstack]
  4561                           ;Set_year@year stored from wreg
  4562     0B12  1283               	bcf	3,5	;RP0=0, select bank0
  4563     0B13  1303               	bcf	3,6	;RP1=0, select bank0
  4564     0B14  00A6               	movwf	Set_year@year
  4565     0B15                     l2531:
  4566                           
  4567                           ;main.c: 516:     I2C_Master_Start();
  4568     0B15  160A  118A  26F4  120A  158A  	fcall	_I2C_Master_Start
  4569                           
  4570                           ;main.c: 517:     I2C_Master_Write(0xD0);
  4571     0B1A  30D0               	movlw	208
  4572     0B1B  1283               	bcf	3,5	;RP0=0, select bank0
  4573     0B1C  1303               	bcf	3,6	;RP1=0, select bank0
  4574     0B1D  00A2               	movwf	I2C_Master_Write@d
  4575     0B1E  3000               	movlw	0
  4576     0B1F  00A3               	movwf	I2C_Master_Write@d+1
  4577     0B20  120A  158A  2000  120A  158A  	fcall	_I2C_Master_Write
  4578                           
  4579                           ;main.c: 518:     I2C_Master_Write(0x06);
  4580     0B25  3006               	movlw	6
  4581     0B26  1283               	bcf	3,5	;RP0=0, select bank0
  4582     0B27  1303               	bcf	3,6	;RP1=0, select bank0
  4583     0B28  00A2               	movwf	I2C_Master_Write@d
  4584     0B29  3000               	movlw	0
  4585     0B2A  00A3               	movwf	I2C_Master_Write@d+1
  4586     0B2B  120A  158A  2000  120A  158A  	fcall	_I2C_Master_Write
  4587                           
  4588                           ;main.c: 519:     I2C_Master_Write(Dec_to_Bcd(year));
  4589     0B30  1283               	bcf	3,5	;RP0=0, select bank0
  4590     0B31  1303               	bcf	3,6	;RP1=0, select bank0
  4591     0B32  0826               	movf	Set_year@year,w
  4592     0B33  160A  118A  2752  120A  158A  	fcall	_Dec_to_Bcd
  4593     0B38  1283               	bcf	3,5	;RP0=0, select bank0
  4594     0B39  1303               	bcf	3,6	;RP1=0, select bank0
  4595     0B3A  00A4               	movwf	??_Set_year
  4596     0B3B  01A5               	clrf	??_Set_year+1
  4597     0B3C  0824               	movf	??_Set_year,w
  4598     0B3D  00A2               	movwf	I2C_Master_Write@d
  4599     0B3E  0825               	movf	??_Set_year+1,w
  4600     0B3F  00A3               	movwf	I2C_Master_Write@d+1
  4601     0B40  120A  158A  2000  120A  158A  	fcall	_I2C_Master_Write
  4602                           
  4603                           ;main.c: 520:     I2C_Master_Stop();
  4604     0B45  160A  118A  26FD  120A  158A  	fcall	_I2C_Master_Stop
  4605     0B4A                     l244:
  4606     0B4A  0008               	return
  4607     0B4B                     __end_of_Set_year:
  4608                           
  4609                           	psect	text14
  4610     09F6                     __ptext14:	
  4611 ;; *************** function _Set_sec *****************
  4612 ;; Defined at:
  4613 ;;		line 470 in file "main.c"
  4614 ;; Parameters:    Size  Location     Type
  4615 ;;  sec             1    wreg     unsigned char 
  4616 ;; Auto vars:     Size  Location     Type
  4617 ;;  sec             1    6[BANK0 ] unsigned char 
  4618 ;; Return value:  Size  Location     Type
  4619 ;;                  1    wreg      void 
  4620 ;; Registers used:
  4621 ;;		wreg, status,2, status,0, pclath, cstack
  4622 ;; Tracked objects:
  4623 ;;		On entry : 0/0
  4624 ;;		On exit  : 0/0
  4625 ;;		Unchanged: 0/0
  4626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4627 ;;      Params:         0       0       0       0       0
  4628 ;;      Locals:         0       1       0       0       0
  4629 ;;      Temps:          0       2       0       0       0
  4630 ;;      Totals:         0       3       0       0       0
  4631 ;;Total ram usage:        3 bytes
  4632 ;; Hardware stack levels used: 1
  4633 ;; Hardware stack levels required when called: 6
  4634 ;; This function calls:
  4635 ;;		_Dec_to_Bcd
  4636 ;;		_I2C_Master_Start
  4637 ;;		_I2C_Master_Stop
  4638 ;;		_I2C_Master_Write
  4639 ;; This function is called by:
  4640 ;;		_main
  4641 ;; This function uses a non-reentrant model
  4642 ;;
  4643                           
  4644     09F6                     _Set_sec:	
  4645                           ;psect for function _Set_sec
  4646                           
  4647                           
  4648                           ;incstack = 0
  4649                           ; Regs used in _Set_sec: [wreg+status,2+status,0+pclath+cstack]
  4650                           ;Set_sec@sec stored from wreg
  4651     09F6  1283               	bcf	3,5	;RP0=0, select bank0
  4652     09F7  1303               	bcf	3,6	;RP1=0, select bank0
  4653     09F8  00A6               	movwf	Set_sec@sec
  4654     09F9                     l2521:
  4655                           
  4656                           ;main.c: 471:     I2C_Master_Start();
  4657     09F9  160A  118A  26F4  120A  158A  	fcall	_I2C_Master_Start
  4658                           
  4659                           ;main.c: 472:     I2C_Master_Write(0xD0);
  4660     09FE  30D0               	movlw	208
  4661     09FF  1283               	bcf	3,5	;RP0=0, select bank0
  4662     0A00  1303               	bcf	3,6	;RP1=0, select bank0
  4663     0A01  00A2               	movwf	I2C_Master_Write@d
  4664     0A02  3000               	movlw	0
  4665     0A03  00A3               	movwf	I2C_Master_Write@d+1
  4666     0A04  120A  158A  2000  120A  158A  	fcall	_I2C_Master_Write
  4667                           
  4668                           ;main.c: 473:     I2C_Master_Write(0x00);
  4669     0A09  3000               	movlw	0
  4670     0A0A  1283               	bcf	3,5	;RP0=0, select bank0
  4671     0A0B  1303               	bcf	3,6	;RP1=0, select bank0
  4672     0A0C  00A2               	movwf	I2C_Master_Write@d
  4673     0A0D  00A3               	movwf	I2C_Master_Write@d+1
  4674     0A0E  120A  158A  2000  120A  158A  	fcall	_I2C_Master_Write
  4675                           
  4676                           ;main.c: 474:     I2C_Master_Write(Dec_to_Bcd(sec));
  4677     0A13  1283               	bcf	3,5	;RP0=0, select bank0
  4678     0A14  1303               	bcf	3,6	;RP1=0, select bank0
  4679     0A15  0826               	movf	Set_sec@sec,w
  4680     0A16  160A  118A  2752  120A  158A  	fcall	_Dec_to_Bcd
  4681     0A1B  1283               	bcf	3,5	;RP0=0, select bank0
  4682     0A1C  1303               	bcf	3,6	;RP1=0, select bank0
  4683     0A1D  00A4               	movwf	??_Set_sec
  4684     0A1E  01A5               	clrf	??_Set_sec+1
  4685     0A1F  0824               	movf	??_Set_sec,w
  4686     0A20  00A2               	movwf	I2C_Master_Write@d
  4687     0A21  0825               	movf	??_Set_sec+1,w
  4688     0A22  00A3               	movwf	I2C_Master_Write@d+1
  4689     0A23  120A  158A  2000  120A  158A  	fcall	_I2C_Master_Write
  4690                           
  4691                           ;main.c: 475:     I2C_Master_Stop();
  4692     0A28  160A  118A  26FD  120A  158A  	fcall	_I2C_Master_Stop
  4693     0A2D                     l229:
  4694     0A2D  0008               	return
  4695     0A2E                     __end_of_Set_sec:
  4696                           
  4697                           	psect	text15
  4698     0AD9                     __ptext15:	
  4699 ;; *************** function _Set_month *****************
  4700 ;; Defined at:
  4701 ;;		line 506 in file "main.c"
  4702 ;; Parameters:    Size  Location     Type
  4703 ;;  month           1    wreg     unsigned char 
  4704 ;; Auto vars:     Size  Location     Type
  4705 ;;  month           1    6[BANK0 ] unsigned char 
  4706 ;; Return value:  Size  Location     Type
  4707 ;;                  1    wreg      void 
  4708 ;; Registers used:
  4709 ;;		wreg, status,2, status,0, pclath, cstack
  4710 ;; Tracked objects:
  4711 ;;		On entry : 0/0
  4712 ;;		On exit  : 0/0
  4713 ;;		Unchanged: 0/0
  4714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4715 ;;      Params:         0       0       0       0       0
  4716 ;;      Locals:         0       1       0       0       0
  4717 ;;      Temps:          0       2       0       0       0
  4718 ;;      Totals:         0       3       0       0       0
  4719 ;;Total ram usage:        3 bytes
  4720 ;; Hardware stack levels used: 1
  4721 ;; Hardware stack levels required when called: 6
  4722 ;; This function calls:
  4723 ;;		_Dec_to_Bcd
  4724 ;;		_I2C_Master_Start
  4725 ;;		_I2C_Master_Stop
  4726 ;;		_I2C_Master_Write
  4727 ;; This function is called by:
  4728 ;;		_main
  4729 ;; This function uses a non-reentrant model
  4730 ;;
  4731                           
  4732     0AD9                     _Set_month:	
  4733                           ;psect for function _Set_month
  4734                           
  4735                           
  4736                           ;incstack = 0
  4737                           ; Regs used in _Set_month: [wreg+status,2+status,0+pclath+cstack]
  4738                           ;Set_month@month stored from wreg
  4739     0AD9  1283               	bcf	3,5	;RP0=0, select bank0
  4740     0ADA  1303               	bcf	3,6	;RP1=0, select bank0
  4741     0ADB  00A6               	movwf	Set_month@month
  4742     0ADC                     l2529:
  4743                           
  4744                           ;main.c: 507:     I2C_Master_Start();
  4745     0ADC  160A  118A  26F4  120A  158A  	fcall	_I2C_Master_Start
  4746                           
  4747                           ;main.c: 508:     I2C_Master_Write(0xD0);
  4748     0AE1  30D0               	movlw	208
  4749     0AE2  1283               	bcf	3,5	;RP0=0, select bank0
  4750     0AE3  1303               	bcf	3,6	;RP1=0, select bank0
  4751     0AE4  00A2               	movwf	I2C_Master_Write@d
  4752     0AE5  3000               	movlw	0
  4753     0AE6  00A3               	movwf	I2C_Master_Write@d+1
  4754     0AE7  120A  158A  2000  120A  158A  	fcall	_I2C_Master_Write
  4755                           
  4756                           ;main.c: 509:     I2C_Master_Write(0x05);
  4757     0AEC  3005               	movlw	5
  4758     0AED  1283               	bcf	3,5	;RP0=0, select bank0
  4759     0AEE  1303               	bcf	3,6	;RP1=0, select bank0
  4760     0AEF  00A2               	movwf	I2C_Master_Write@d
  4761     0AF0  3000               	movlw	0
  4762     0AF1  00A3               	movwf	I2C_Master_Write@d+1
  4763     0AF2  120A  158A  2000  120A  158A  	fcall	_I2C_Master_Write
  4764                           
  4765                           ;main.c: 510:     I2C_Master_Write(Dec_to_Bcd(month));
  4766     0AF7  1283               	bcf	3,5	;RP0=0, select bank0
  4767     0AF8  1303               	bcf	3,6	;RP1=0, select bank0
  4768     0AF9  0826               	movf	Set_month@month,w
  4769     0AFA  160A  118A  2752  120A  158A  	fcall	_Dec_to_Bcd
  4770     0AFF  1283               	bcf	3,5	;RP0=0, select bank0
  4771     0B00  1303               	bcf	3,6	;RP1=0, select bank0
  4772     0B01  00A4               	movwf	??_Set_month
  4773     0B02  01A5               	clrf	??_Set_month+1
  4774     0B03  0824               	movf	??_Set_month,w
  4775     0B04  00A2               	movwf	I2C_Master_Write@d
  4776     0B05  0825               	movf	??_Set_month+1,w
  4777     0B06  00A3               	movwf	I2C_Master_Write@d+1
  4778     0B07  120A  158A  2000  120A  158A  	fcall	_I2C_Master_Write
  4779                           
  4780                           ;main.c: 511:     I2C_Master_Stop();
  4781     0B0C  160A  118A  26FD  120A  158A  	fcall	_I2C_Master_Stop
  4782     0B11                     l241:
  4783     0B11  0008               	return
  4784     0B12                     __end_of_Set_month:
  4785                           
  4786                           	psect	text16
  4787     0AA0                     __ptext16:	
  4788 ;; *************** function _Set_min *****************
  4789 ;; Defined at:
  4790 ;;		line 479 in file "main.c"
  4791 ;; Parameters:    Size  Location     Type
  4792 ;;  min             1    wreg     unsigned char 
  4793 ;; Auto vars:     Size  Location     Type
  4794 ;;  min             1    6[BANK0 ] unsigned char 
  4795 ;; Return value:  Size  Location     Type
  4796 ;;                  1    wreg      void 
  4797 ;; Registers used:
  4798 ;;		wreg, status,2, status,0, pclath, cstack
  4799 ;; Tracked objects:
  4800 ;;		On entry : 0/0
  4801 ;;		On exit  : 0/0
  4802 ;;		Unchanged: 0/0
  4803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4804 ;;      Params:         0       0       0       0       0
  4805 ;;      Locals:         0       1       0       0       0
  4806 ;;      Temps:          0       2       0       0       0
  4807 ;;      Totals:         0       3       0       0       0
  4808 ;;Total ram usage:        3 bytes
  4809 ;; Hardware stack levels used: 1
  4810 ;; Hardware stack levels required when called: 6
  4811 ;; This function calls:
  4812 ;;		_Dec_to_Bcd
  4813 ;;		_I2C_Master_Start
  4814 ;;		_I2C_Master_Stop
  4815 ;;		_I2C_Master_Write
  4816 ;; This function is called by:
  4817 ;;		_main
  4818 ;; This function uses a non-reentrant model
  4819 ;;
  4820                           
  4821     0AA0                     _Set_min:	
  4822                           ;psect for function _Set_min
  4823                           
  4824                           
  4825                           ;incstack = 0
  4826                           ; Regs used in _Set_min: [wreg+status,2+status,0+pclath+cstack]
  4827                           ;Set_min@min stored from wreg
  4828     0AA0  1283               	bcf	3,5	;RP0=0, select bank0
  4829     0AA1  1303               	bcf	3,6	;RP1=0, select bank0
  4830     0AA2  00A6               	movwf	Set_min@min
  4831     0AA3                     l2523:
  4832                           
  4833                           ;main.c: 480:     I2C_Master_Start();
  4834     0AA3  160A  118A  26F4  120A  158A  	fcall	_I2C_Master_Start
  4835                           
  4836                           ;main.c: 481:     I2C_Master_Write(0xD0);
  4837     0AA8  30D0               	movlw	208
  4838     0AA9  1283               	bcf	3,5	;RP0=0, select bank0
  4839     0AAA  1303               	bcf	3,6	;RP1=0, select bank0
  4840     0AAB  00A2               	movwf	I2C_Master_Write@d
  4841     0AAC  3000               	movlw	0
  4842     0AAD  00A3               	movwf	I2C_Master_Write@d+1
  4843     0AAE  120A  158A  2000  120A  158A  	fcall	_I2C_Master_Write
  4844                           
  4845                           ;main.c: 482:     I2C_Master_Write(0x01);
  4846     0AB3  3001               	movlw	1
  4847     0AB4  1283               	bcf	3,5	;RP0=0, select bank0
  4848     0AB5  1303               	bcf	3,6	;RP1=0, select bank0
  4849     0AB6  00A2               	movwf	I2C_Master_Write@d
  4850     0AB7  3000               	movlw	0
  4851     0AB8  00A3               	movwf	I2C_Master_Write@d+1
  4852     0AB9  120A  158A  2000  120A  158A  	fcall	_I2C_Master_Write
  4853                           
  4854                           ;main.c: 483:     I2C_Master_Write(Dec_to_Bcd(min));
  4855     0ABE  1283               	bcf	3,5	;RP0=0, select bank0
  4856     0ABF  1303               	bcf	3,6	;RP1=0, select bank0
  4857     0AC0  0826               	movf	Set_min@min,w
  4858     0AC1  160A  118A  2752  120A  158A  	fcall	_Dec_to_Bcd
  4859     0AC6  1283               	bcf	3,5	;RP0=0, select bank0
  4860     0AC7  1303               	bcf	3,6	;RP1=0, select bank0
  4861     0AC8  00A4               	movwf	??_Set_min
  4862     0AC9  01A5               	clrf	??_Set_min+1
  4863     0ACA  0824               	movf	??_Set_min,w
  4864     0ACB  00A2               	movwf	I2C_Master_Write@d
  4865     0ACC  0825               	movf	??_Set_min+1,w
  4866     0ACD  00A3               	movwf	I2C_Master_Write@d+1
  4867     0ACE  120A  158A  2000  120A  158A  	fcall	_I2C_Master_Write
  4868                           
  4869                           ;main.c: 484:     I2C_Master_Stop();
  4870     0AD3  160A  118A  26FD  120A  158A  	fcall	_I2C_Master_Stop
  4871     0AD8                     l232:
  4872     0AD8  0008               	return
  4873     0AD9                     __end_of_Set_min:
  4874                           
  4875                           	psect	text17
  4876     0A67                     __ptext17:	
  4877 ;; *************** function _Set_hour *****************
  4878 ;; Defined at:
  4879 ;;		line 488 in file "main.c"
  4880 ;; Parameters:    Size  Location     Type
  4881 ;;  hour            1    wreg     unsigned char 
  4882 ;; Auto vars:     Size  Location     Type
  4883 ;;  hour            1    6[BANK0 ] unsigned char 
  4884 ;; Return value:  Size  Location     Type
  4885 ;;                  1    wreg      void 
  4886 ;; Registers used:
  4887 ;;		wreg, status,2, status,0, pclath, cstack
  4888 ;; Tracked objects:
  4889 ;;		On entry : 0/0
  4890 ;;		On exit  : 0/0
  4891 ;;		Unchanged: 0/0
  4892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4893 ;;      Params:         0       0       0       0       0
  4894 ;;      Locals:         0       1       0       0       0
  4895 ;;      Temps:          0       2       0       0       0
  4896 ;;      Totals:         0       3       0       0       0
  4897 ;;Total ram usage:        3 bytes
  4898 ;; Hardware stack levels used: 1
  4899 ;; Hardware stack levels required when called: 6
  4900 ;; This function calls:
  4901 ;;		_Dec_to_Bcd
  4902 ;;		_I2C_Master_Start
  4903 ;;		_I2C_Master_Stop
  4904 ;;		_I2C_Master_Write
  4905 ;; This function is called by:
  4906 ;;		_main
  4907 ;; This function uses a non-reentrant model
  4908 ;;
  4909                           
  4910     0A67                     _Set_hour:	
  4911                           ;psect for function _Set_hour
  4912                           
  4913                           
  4914                           ;incstack = 0
  4915                           ; Regs used in _Set_hour: [wreg+status,2+status,0+pclath+cstack]
  4916                           ;Set_hour@hour stored from wreg
  4917     0A67  1283               	bcf	3,5	;RP0=0, select bank0
  4918     0A68  1303               	bcf	3,6	;RP1=0, select bank0
  4919     0A69  00A6               	movwf	Set_hour@hour
  4920     0A6A                     l2525:
  4921                           
  4922                           ;main.c: 489:     I2C_Master_Start();
  4923     0A6A  160A  118A  26F4  120A  158A  	fcall	_I2C_Master_Start
  4924                           
  4925                           ;main.c: 490:     I2C_Master_Write(0xD0);
  4926     0A6F  30D0               	movlw	208
  4927     0A70  1283               	bcf	3,5	;RP0=0, select bank0
  4928     0A71  1303               	bcf	3,6	;RP1=0, select bank0
  4929     0A72  00A2               	movwf	I2C_Master_Write@d
  4930     0A73  3000               	movlw	0
  4931     0A74  00A3               	movwf	I2C_Master_Write@d+1
  4932     0A75  120A  158A  2000  120A  158A  	fcall	_I2C_Master_Write
  4933                           
  4934                           ;main.c: 491:     I2C_Master_Write(0x02);
  4935     0A7A  3002               	movlw	2
  4936     0A7B  1283               	bcf	3,5	;RP0=0, select bank0
  4937     0A7C  1303               	bcf	3,6	;RP1=0, select bank0
  4938     0A7D  00A2               	movwf	I2C_Master_Write@d
  4939     0A7E  3000               	movlw	0
  4940     0A7F  00A3               	movwf	I2C_Master_Write@d+1
  4941     0A80  120A  158A  2000  120A  158A  	fcall	_I2C_Master_Write
  4942                           
  4943                           ;main.c: 492:     I2C_Master_Write(Dec_to_Bcd(hour));
  4944     0A85  1283               	bcf	3,5	;RP0=0, select bank0
  4945     0A86  1303               	bcf	3,6	;RP1=0, select bank0
  4946     0A87  0826               	movf	Set_hour@hour,w
  4947     0A88  160A  118A  2752  120A  158A  	fcall	_Dec_to_Bcd
  4948     0A8D  1283               	bcf	3,5	;RP0=0, select bank0
  4949     0A8E  1303               	bcf	3,6	;RP1=0, select bank0
  4950     0A8F  00A4               	movwf	??_Set_hour
  4951     0A90  01A5               	clrf	??_Set_hour+1
  4952     0A91  0824               	movf	??_Set_hour,w
  4953     0A92  00A2               	movwf	I2C_Master_Write@d
  4954     0A93  0825               	movf	??_Set_hour+1,w
  4955     0A94  00A3               	movwf	I2C_Master_Write@d+1
  4956     0A95  120A  158A  2000  120A  158A  	fcall	_I2C_Master_Write
  4957                           
  4958                           ;main.c: 493:     I2C_Master_Stop();
  4959     0A9A  160A  118A  26FD  120A  158A  	fcall	_I2C_Master_Stop
  4960     0A9F                     l235:
  4961     0A9F  0008               	return
  4962     0AA0                     __end_of_Set_hour:
  4963                           
  4964                           	psect	text18
  4965     0A2E                     __ptext18:	
  4966 ;; *************** function _Set_day *****************
  4967 ;; Defined at:
  4968 ;;		line 497 in file "main.c"
  4969 ;; Parameters:    Size  Location     Type
  4970 ;;  day             1    wreg     unsigned char 
  4971 ;; Auto vars:     Size  Location     Type
  4972 ;;  day             1    6[BANK0 ] unsigned char 
  4973 ;; Return value:  Size  Location     Type
  4974 ;;                  1    wreg      void 
  4975 ;; Registers used:
  4976 ;;		wreg, status,2, status,0, pclath, cstack
  4977 ;; Tracked objects:
  4978 ;;		On entry : 0/0
  4979 ;;		On exit  : 0/0
  4980 ;;		Unchanged: 0/0
  4981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4982 ;;      Params:         0       0       0       0       0
  4983 ;;      Locals:         0       1       0       0       0
  4984 ;;      Temps:          0       2       0       0       0
  4985 ;;      Totals:         0       3       0       0       0
  4986 ;;Total ram usage:        3 bytes
  4987 ;; Hardware stack levels used: 1
  4988 ;; Hardware stack levels required when called: 6
  4989 ;; This function calls:
  4990 ;;		_Dec_to_Bcd
  4991 ;;		_I2C_Master_Start
  4992 ;;		_I2C_Master_Stop
  4993 ;;		_I2C_Master_Write
  4994 ;; This function is called by:
  4995 ;;		_main
  4996 ;; This function uses a non-reentrant model
  4997 ;;
  4998                           
  4999     0A2E                     _Set_day:	
  5000                           ;psect for function _Set_day
  5001                           
  5002                           
  5003                           ;incstack = 0
  5004                           ; Regs used in _Set_day: [wreg+status,2+status,0+pclath+cstack]
  5005                           ;Set_day@day stored from wreg
  5006     0A2E  1283               	bcf	3,5	;RP0=0, select bank0
  5007     0A2F  1303               	bcf	3,6	;RP1=0, select bank0
  5008     0A30  00A6               	movwf	Set_day@day
  5009     0A31                     l2527:
  5010                           
  5011                           ;main.c: 498:     I2C_Master_Start();
  5012     0A31  160A  118A  26F4  120A  158A  	fcall	_I2C_Master_Start
  5013                           
  5014                           ;main.c: 499:     I2C_Master_Write(0xD0);
  5015     0A36  30D0               	movlw	208
  5016     0A37  1283               	bcf	3,5	;RP0=0, select bank0
  5017     0A38  1303               	bcf	3,6	;RP1=0, select bank0
  5018     0A39  00A2               	movwf	I2C_Master_Write@d
  5019     0A3A  3000               	movlw	0
  5020     0A3B  00A3               	movwf	I2C_Master_Write@d+1
  5021     0A3C  120A  158A  2000  120A  158A  	fcall	_I2C_Master_Write
  5022                           
  5023                           ;main.c: 500:     I2C_Master_Write(0x04);
  5024     0A41  3004               	movlw	4
  5025     0A42  1283               	bcf	3,5	;RP0=0, select bank0
  5026     0A43  1303               	bcf	3,6	;RP1=0, select bank0
  5027     0A44  00A2               	movwf	I2C_Master_Write@d
  5028     0A45  3000               	movlw	0
  5029     0A46  00A3               	movwf	I2C_Master_Write@d+1
  5030     0A47  120A  158A  2000  120A  158A  	fcall	_I2C_Master_Write
  5031                           
  5032                           ;main.c: 501:     I2C_Master_Write(Dec_to_Bcd(day));
  5033     0A4C  1283               	bcf	3,5	;RP0=0, select bank0
  5034     0A4D  1303               	bcf	3,6	;RP1=0, select bank0
  5035     0A4E  0826               	movf	Set_day@day,w
  5036     0A4F  160A  118A  2752  120A  158A  	fcall	_Dec_to_Bcd
  5037     0A54  1283               	bcf	3,5	;RP0=0, select bank0
  5038     0A55  1303               	bcf	3,6	;RP1=0, select bank0
  5039     0A56  00A4               	movwf	??_Set_day
  5040     0A57  01A5               	clrf	??_Set_day+1
  5041     0A58  0824               	movf	??_Set_day,w
  5042     0A59  00A2               	movwf	I2C_Master_Write@d
  5043     0A5A  0825               	movf	??_Set_day+1,w
  5044     0A5B  00A3               	movwf	I2C_Master_Write@d+1
  5045     0A5C  120A  158A  2000  120A  158A  	fcall	_I2C_Master_Write
  5046                           
  5047                           ;main.c: 502:     I2C_Master_Stop();
  5048     0A61  160A  118A  26FD  120A  158A  	fcall	_I2C_Master_Stop
  5049     0A66                     l238:
  5050     0A66  0008               	return
  5051     0A67                     __end_of_Set_day:
  5052                           
  5053                           	psect	text19
  5054     1752                     __ptext19:	
  5055 ;; *************** function _Dec_to_Bcd *****************
  5056 ;; Defined at:
  5057 ;;		line 524 in file "main.c"
  5058 ;; Parameters:    Size  Location     Type
  5059 ;;  dec_number      1    wreg     unsigned char 
  5060 ;; Auto vars:     Size  Location     Type
  5061 ;;  dec_number      1    0[BANK0 ] unsigned char 
  5062 ;;  bcd_number      1    1[BANK0 ] unsigned char 
  5063 ;; Return value:  Size  Location     Type
  5064 ;;                  1    wreg      unsigned char 
  5065 ;; Registers used:
  5066 ;;		wreg, status,2, status,0
  5067 ;; Tracked objects:
  5068 ;;		On entry : 0/0
  5069 ;;		On exit  : 0/0
  5070 ;;		Unchanged: 0/0
  5071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5072 ;;      Params:         0       0       0       0       0
  5073 ;;      Locals:         0       2       0       0       0
  5074 ;;      Temps:          0       0       0       0       0
  5075 ;;      Totals:         0       2       0       0       0
  5076 ;;Total ram usage:        2 bytes
  5077 ;; Hardware stack levels used: 1
  5078 ;; Hardware stack levels required when called: 4
  5079 ;; This function calls:
  5080 ;;		Nothing
  5081 ;; This function is called by:
  5082 ;;		_Set_sec
  5083 ;;		_Set_min
  5084 ;;		_Set_hour
  5085 ;;		_Set_day
  5086 ;;		_Set_month
  5087 ;;		_Set_year
  5088 ;; This function uses a non-reentrant model
  5089 ;;
  5090                           
  5091     1752                     _Dec_to_Bcd:	
  5092                           ;psect for function _Dec_to_Bcd
  5093                           
  5094                           
  5095                           ;incstack = 0
  5096                           ; Regs used in _Dec_to_Bcd: [wreg+status,2+status,0]
  5097                           ;Dec_to_Bcd@dec_number stored from wreg
  5098     1752  1283               	bcf	3,5	;RP0=0, select bank0
  5099     1753  1303               	bcf	3,6	;RP1=0, select bank0
  5100     1754  00A0               	movwf	Dec_to_Bcd@dec_number
  5101     1755                     l2279:
  5102                           
  5103                           ;main.c: 525:     uint8_t bcd_number;;main.c: 526:     bcd_number = 0;
  5104     1755  01A1               	clrf	Dec_to_Bcd@bcd_number
  5105     1756                     l2281:
  5106                           
  5107                           ;main.c: 528:         if (dec_number >= 10){
  5108     1756  300A               	movlw	10
  5109     1757  0220               	subwf	Dec_to_Bcd@dec_number,w
  5110     1758  1C03               	skipc
  5111     1759  2F5B               	goto	u1981
  5112     175A  2F5C               	goto	u1980
  5113     175B                     u1981:
  5114     175B  2F63               	goto	l2285
  5115     175C                     u1980:
  5116     175C                     l2283:
  5117                           
  5118                           ;main.c: 529:             dec_number = dec_number - 10;
  5119     175C  0820               	movf	Dec_to_Bcd@dec_number,w
  5120     175D  3EF6               	addlw	246
  5121     175E  00A0               	movwf	Dec_to_Bcd@dec_number
  5122                           
  5123                           ;main.c: 530:             bcd_number = bcd_number + 0b00010000;
  5124     175F  0821               	movf	Dec_to_Bcd@bcd_number,w
  5125     1760  3E10               	addlw	16
  5126     1761  00A1               	movwf	Dec_to_Bcd@bcd_number
  5127                           
  5128                           ;main.c: 531:         }
  5129     1762  2F56               	goto	l2281
  5130     1763                     l2285:
  5131                           
  5132                           ;main.c: 533:             bcd_number = bcd_number + dec_number;
  5133     1763  0820               	movf	Dec_to_Bcd@dec_number,w
  5134     1764  0721               	addwf	Dec_to_Bcd@bcd_number,w
  5135     1765  00A1               	movwf	Dec_to_Bcd@bcd_number
  5136     1766                     l2287:	
  5137                           ;main.c: 534:             break;
  5138                           
  5139                           
  5140                           ;main.c: 537:     return bcd_number;
  5141     1766  0821               	movf	Dec_to_Bcd@bcd_number,w
  5142     1767                     l252:
  5143     1767  0008               	return
  5144     1768                     __end_of_Dec_to_Bcd:
  5145                           
  5146                           	psect	text20
  5147     098A                     __ptext20:	
  5148 ;; *************** function _Read_Time *****************
  5149 ;; Defined at:
  5150 ;;		line 456 in file "main.c"
  5151 ;; Parameters:    Size  Location     Type
  5152 ;;  s               1    wreg     PTR unsigned char 
  5153 ;;		 -> segundo(1), 
  5154 ;;  m               1   10[BANK0 ] PTR unsigned char 
  5155 ;;		 -> minuto(1), 
  5156 ;;  h               1   11[BANK0 ] PTR unsigned char 
  5157 ;;		 -> hora(1), 
  5158 ;; Auto vars:     Size  Location     Type
  5159 ;;  s               1   12[BANK0 ] PTR unsigned char 
  5160 ;;		 -> segundo(1), 
  5161 ;; Return value:  Size  Location     Type
  5162 ;;                  1    wreg      void 
  5163 ;; Registers used:
  5164 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5165 ;; Tracked objects:
  5166 ;;		On entry : 0/0
  5167 ;;		On exit  : 0/0
  5168 ;;		Unchanged: 0/0
  5169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5170 ;;      Params:         0       2       0       0       0
  5171 ;;      Locals:         0       1       0       0       0
  5172 ;;      Temps:          0       0       0       0       0
  5173 ;;      Totals:         0       3       0       0       0
  5174 ;;Total ram usage:        3 bytes
  5175 ;; Hardware stack levels used: 1
  5176 ;; Hardware stack levels required when called: 7
  5177 ;; This function calls:
  5178 ;;		_Bcd_to_Dec
  5179 ;;		_Read
  5180 ;; This function is called by:
  5181 ;;		_main
  5182 ;; This function uses a non-reentrant model
  5183 ;;
  5184                           
  5185     098A                     _Read_Time:	
  5186                           ;psect for function _Read_Time
  5187                           
  5188                           
  5189                           ;incstack = 0
  5190                           ; Regs used in _Read_Time: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5191                           ;Read_Time@s stored from wreg
  5192     098A  1283               	bcf	3,5	;RP0=0, select bank0
  5193     098B  1303               	bcf	3,6	;RP1=0, select bank0
  5194     098C  00AC               	movwf	Read_Time@s
  5195     098D                     l2655:
  5196                           
  5197                           ;main.c: 457:     *s = Bcd_to_Dec(Read(0x00));
  5198     098D  082C               	movf	Read_Time@s,w
  5199     098E  0084               	movwf	4
  5200     098F  3000               	movlw	0
  5201     0990  120A  158A  24C6  120A  158A  	fcall	_Read
  5202     0995  160A  118A  279B  120A  158A  	fcall	_Bcd_to_Dec
  5203     099A  1383               	bcf	3,7	;select IRP bank0
  5204     099B  0080               	movwf	0
  5205                           
  5206                           ;main.c: 458:     *m = Bcd_to_Dec(Read(0x01));
  5207     099C  1283               	bcf	3,5	;RP0=0, select bank0
  5208     099D  1303               	bcf	3,6	;RP1=0, select bank0
  5209     099E  082A               	movf	Read_Time@m,w
  5210     099F  0084               	movwf	4
  5211     09A0  3001               	movlw	1
  5212     09A1  120A  158A  24C6  120A  158A  	fcall	_Read
  5213     09A6  160A  118A  279B  120A  158A  	fcall	_Bcd_to_Dec
  5214     09AB  1383               	bcf	3,7	;select IRP bank0
  5215     09AC  0080               	movwf	0
  5216                           
  5217                           ;main.c: 459:     *h = Bcd_to_Dec(Read(0x02));
  5218     09AD  1283               	bcf	3,5	;RP0=0, select bank0
  5219     09AE  1303               	bcf	3,6	;RP1=0, select bank0
  5220     09AF  082B               	movf	Read_Time@h,w
  5221     09B0  0084               	movwf	4
  5222     09B1  3002               	movlw	2
  5223     09B2  120A  158A  24C6  120A  158A  	fcall	_Read
  5224     09B7  160A  118A  279B  120A  158A  	fcall	_Bcd_to_Dec
  5225     09BC  1383               	bcf	3,7	;select IRP bank0
  5226     09BD  0080               	movwf	0
  5227     09BE                     l223:
  5228     09BE  0008               	return
  5229     09BF                     __end_of_Read_Time:
  5230                           
  5231                           	psect	text21
  5232     0955                     __ptext21:	
  5233 ;; *************** function _Read_Date *****************
  5234 ;; Defined at:
  5235 ;;		line 463 in file "main.c"
  5236 ;; Parameters:    Size  Location     Type
  5237 ;;  d               1    wreg     PTR unsigned char 
  5238 ;;		 -> dia(1), 
  5239 ;;  month           1   10[BANK0 ] PTR unsigned char 
  5240 ;;		 -> mes(1), 
  5241 ;;  y               1   11[BANK0 ] PTR unsigned char 
  5242 ;;		 -> ano(1), 
  5243 ;; Auto vars:     Size  Location     Type
  5244 ;;  d               1   12[BANK0 ] PTR unsigned char 
  5245 ;;		 -> dia(1), 
  5246 ;; Return value:  Size  Location     Type
  5247 ;;                  1    wreg      void 
  5248 ;; Registers used:
  5249 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5250 ;; Tracked objects:
  5251 ;;		On entry : 0/0
  5252 ;;		On exit  : 0/0
  5253 ;;		Unchanged: 0/0
  5254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5255 ;;      Params:         0       2       0       0       0
  5256 ;;      Locals:         0       1       0       0       0
  5257 ;;      Temps:          0       0       0       0       0
  5258 ;;      Totals:         0       3       0       0       0
  5259 ;;Total ram usage:        3 bytes
  5260 ;; Hardware stack levels used: 1
  5261 ;; Hardware stack levels required when called: 7
  5262 ;; This function calls:
  5263 ;;		_Bcd_to_Dec
  5264 ;;		_Read
  5265 ;; This function is called by:
  5266 ;;		_main
  5267 ;; This function uses a non-reentrant model
  5268 ;;
  5269                           
  5270     0955                     _Read_Date:	
  5271                           ;psect for function _Read_Date
  5272                           
  5273                           
  5274                           ;incstack = 0
  5275                           ; Regs used in _Read_Date: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5276                           ;Read_Date@d stored from wreg
  5277     0955  1283               	bcf	3,5	;RP0=0, select bank0
  5278     0956  1303               	bcf	3,6	;RP1=0, select bank0
  5279     0957  00AC               	movwf	Read_Date@d
  5280     0958                     l2657:
  5281                           
  5282                           ;main.c: 464:     *d = Bcd_to_Dec(Read(0x04));
  5283     0958  082C               	movf	Read_Date@d,w
  5284     0959  0084               	movwf	4
  5285     095A  3004               	movlw	4
  5286     095B  120A  158A  24C6  120A  158A  	fcall	_Read
  5287     0960  160A  118A  279B  120A  158A  	fcall	_Bcd_to_Dec
  5288     0965  1383               	bcf	3,7	;select IRP bank0
  5289     0966  0080               	movwf	0
  5290                           
  5291                           ;main.c: 465:     *month = Bcd_to_Dec(Read(0x05));
  5292     0967  1283               	bcf	3,5	;RP0=0, select bank0
  5293     0968  1303               	bcf	3,6	;RP1=0, select bank0
  5294     0969  082A               	movf	Read_Date@month,w
  5295     096A  0084               	movwf	4
  5296     096B  3005               	movlw	5
  5297     096C  120A  158A  24C6  120A  158A  	fcall	_Read
  5298     0971  160A  118A  279B  120A  158A  	fcall	_Bcd_to_Dec
  5299     0976  1383               	bcf	3,7	;select IRP bank0
  5300     0977  0080               	movwf	0
  5301                           
  5302                           ;main.c: 466:     *y = Bcd_to_Dec(Read(0x06));
  5303     0978  1283               	bcf	3,5	;RP0=0, select bank0
  5304     0979  1303               	bcf	3,6	;RP1=0, select bank0
  5305     097A  082B               	movf	Read_Date@y,w
  5306     097B  0084               	movwf	4
  5307     097C  3006               	movlw	6
  5308     097D  120A  158A  24C6  120A  158A  	fcall	_Read
  5309     0982  160A  118A  279B  120A  158A  	fcall	_Bcd_to_Dec
  5310     0987  1383               	bcf	3,7	;select IRP bank0
  5311     0988  0080               	movwf	0
  5312     0989                     l226:
  5313     0989  0008               	return
  5314     098A                     __end_of_Read_Date:
  5315                           
  5316                           	psect	text22
  5317     0CC6                     __ptext22:	
  5318 ;; *************** function _Read *****************
  5319 ;; Defined at:
  5320 ;;		line 442 in file "main.c"
  5321 ;; Parameters:    Size  Location     Type
  5322 ;;  address         1    wreg     unsigned char 
  5323 ;; Auto vars:     Size  Location     Type
  5324 ;;  address         1    8[BANK0 ] unsigned char 
  5325 ;;  dato            1    9[BANK0 ] unsigned char 
  5326 ;; Return value:  Size  Location     Type
  5327 ;;                  1    wreg      unsigned char 
  5328 ;; Registers used:
  5329 ;;		wreg, status,2, status,0, pclath, cstack
  5330 ;; Tracked objects:
  5331 ;;		On entry : 0/0
  5332 ;;		On exit  : 0/0
  5333 ;;		Unchanged: 0/0
  5334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5335 ;;      Params:         0       0       0       0       0
  5336 ;;      Locals:         0       2       0       0       0
  5337 ;;      Temps:          0       2       0       0       0
  5338 ;;      Totals:         0       4       0       0       0
  5339 ;;Total ram usage:        4 bytes
  5340 ;; Hardware stack levels used: 1
  5341 ;; Hardware stack levels required when called: 6
  5342 ;; This function calls:
  5343 ;;		_I2C_Master_Read
  5344 ;;		_I2C_Master_RepeatedStart
  5345 ;;		_I2C_Master_Start
  5346 ;;		_I2C_Master_Stop
  5347 ;;		_I2C_Master_Write
  5348 ;; This function is called by:
  5349 ;;		_Read_Time
  5350 ;;		_Read_Date
  5351 ;; This function uses a non-reentrant model
  5352 ;;
  5353                           
  5354     0CC6                     _Read:	
  5355                           ;psect for function _Read
  5356                           
  5357                           
  5358                           ;incstack = 0
  5359                           ; Regs used in _Read: [wreg+status,2+status,0+pclath+cstack]
  5360                           ;Read@address stored from wreg
  5361     0CC6  1283               	bcf	3,5	;RP0=0, select bank0
  5362     0CC7  1303               	bcf	3,6	;RP1=0, select bank0
  5363     0CC8  00A8               	movwf	Read@address
  5364     0CC9                     l2251:
  5365     0CC9                     l2253:
  5366                           
  5367                           ;main.c: 444:     I2C_Master_Start();
  5368     0CC9  160A  118A  26F4  120A  158A  	fcall	_I2C_Master_Start
  5369     0CCE                     l2255:
  5370                           
  5371                           ;main.c: 445:     I2C_Master_Write(0xD0);
  5372     0CCE  30D0               	movlw	208
  5373     0CCF  1283               	bcf	3,5	;RP0=0, select bank0
  5374     0CD0  1303               	bcf	3,6	;RP1=0, select bank0
  5375     0CD1  00A2               	movwf	I2C_Master_Write@d
  5376     0CD2  3000               	movlw	0
  5377     0CD3  00A3               	movwf	I2C_Master_Write@d+1
  5378     0CD4  120A  158A  2000  120A  158A  	fcall	_I2C_Master_Write
  5379     0CD9                     l2257:
  5380                           
  5381                           ;main.c: 446:     I2C_Master_Write(address);
  5382     0CD9  1283               	bcf	3,5	;RP0=0, select bank0
  5383     0CDA  1303               	bcf	3,6	;RP1=0, select bank0
  5384     0CDB  0828               	movf	Read@address,w
  5385     0CDC  00A6               	movwf	??_Read
  5386     0CDD  01A7               	clrf	??_Read+1
  5387     0CDE  0826               	movf	??_Read,w
  5388     0CDF  00A2               	movwf	I2C_Master_Write@d
  5389     0CE0  0827               	movf	??_Read+1,w
  5390     0CE1  00A3               	movwf	I2C_Master_Write@d+1
  5391     0CE2  120A  158A  2000  120A  158A  	fcall	_I2C_Master_Write
  5392     0CE7                     l2259:
  5393                           
  5394                           ;main.c: 447:     I2C_Master_RepeatedStart();
  5395     0CE7  160A  118A  26EB  120A  158A  	fcall	_I2C_Master_RepeatedStart
  5396     0CEC                     l2261:
  5397                           
  5398                           ;main.c: 448:     I2C_Master_Write(0xD1);
  5399     0CEC  30D1               	movlw	209
  5400     0CED  1283               	bcf	3,5	;RP0=0, select bank0
  5401     0CEE  1303               	bcf	3,6	;RP1=0, select bank0
  5402     0CEF  00A2               	movwf	I2C_Master_Write@d
  5403     0CF0  3000               	movlw	0
  5404     0CF1  00A3               	movwf	I2C_Master_Write@d+1
  5405     0CF2  120A  158A  2000  120A  158A  	fcall	_I2C_Master_Write
  5406     0CF7                     l2263:
  5407                           
  5408                           ;main.c: 449:     dato = I2C_Master_Read(0);
  5409     0CF7  3000               	movlw	0
  5410     0CF8  1283               	bcf	3,5	;RP0=0, select bank0
  5411     0CF9  1303               	bcf	3,6	;RP1=0, select bank0
  5412     0CFA  00A0               	movwf	I2C_Master_Read@a
  5413     0CFB  00A1               	movwf	I2C_Master_Read@a+1
  5414     0CFC  120A  158A  2123  120A  158A  	fcall	_I2C_Master_Read
  5415     0D01  1283               	bcf	3,5	;RP0=0, select bank0
  5416     0D02  1303               	bcf	3,6	;RP1=0, select bank0
  5417     0D03  0820               	movf	?_I2C_Master_Read,w
  5418     0D04  00A9               	movwf	Read@dato
  5419     0D05                     l2265:
  5420                           
  5421                           ;main.c: 450:     I2C_Master_Stop();
  5422     0D05  160A  118A  26FD  120A  158A  	fcall	_I2C_Master_Stop
  5423     0D0A                     l2267:
  5424                           
  5425                           ;main.c: 451:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  5426     0D0A  3005               	movlw	5
  5427     0D0B  1283               	bcf	3,5	;RP0=0, select bank0
  5428     0D0C  1303               	bcf	3,6	;RP1=0, select bank0
  5429     0D0D  00A6               	movwf	??_Read
  5430     0D0E                     u3327:
  5431     0D0E  0BA6               	decfsz	??_Read,f
  5432     0D0F  2D0E               	goto	u3327
  5433     0D10  2D11               	nop2
  5434     0D11                     l2269:
  5435                           
  5436                           ;main.c: 452:     return dato;
  5437     0D11  1283               	bcf	3,5	;RP0=0, select bank0
  5438     0D12  1303               	bcf	3,6	;RP1=0, select bank0
  5439     0D13  0829               	movf	Read@dato,w
  5440     0D14                     l220:
  5441     0D14  0008               	return
  5442     0D15                     __end_of_Read:
  5443                           
  5444                           	psect	text23
  5445     0800                     __ptext23:	
  5446 ;; *************** function _I2C_Master_Write *****************
  5447 ;; Defined at:
  5448 ;;		line 65 in file "I2C.c"
  5449 ;; Parameters:    Size  Location     Type
  5450 ;;  d               2    2[BANK0 ] unsigned int 
  5451 ;; Auto vars:     Size  Location     Type
  5452 ;;		None
  5453 ;; Return value:  Size  Location     Type
  5454 ;;                  1    wreg      void 
  5455 ;; Registers used:
  5456 ;;		wreg, status,2, status,0, pclath, cstack
  5457 ;; Tracked objects:
  5458 ;;		On entry : 0/0
  5459 ;;		On exit  : 0/0
  5460 ;;		Unchanged: 0/0
  5461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5462 ;;      Params:         0       2       0       0       0
  5463 ;;      Locals:         0       0       0       0       0
  5464 ;;      Temps:          0       0       0       0       0
  5465 ;;      Totals:         0       2       0       0       0
  5466 ;;Total ram usage:        2 bytes
  5467 ;; Hardware stack levels used: 1
  5468 ;; Hardware stack levels required when called: 5
  5469 ;; This function calls:
  5470 ;;		_I2C_Master_Wait
  5471 ;; This function is called by:
  5472 ;;		_main
  5473 ;;		_Read
  5474 ;;		_Set_sec
  5475 ;;		_Set_min
  5476 ;;		_Set_hour
  5477 ;;		_Set_day
  5478 ;;		_Set_month
  5479 ;;		_Set_year
  5480 ;; This function uses a non-reentrant model
  5481 ;;
  5482                           
  5483     0800                     _I2C_Master_Write:	
  5484                           ;psect for function _I2C_Master_Write
  5485                           
  5486     0800                     l2117:	
  5487                           ;incstack = 0
  5488                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  5489                           
  5490                           
  5491                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  5492     0800  120A  118A  26EE  120A  158A  	fcall	_I2C_Master_Wait
  5493     0805                     l2119:
  5494                           
  5495                           ;I2C.c: 68:     SSPBUF = d;
  5496     0805  1283               	bcf	3,5	;RP0=0, select bank0
  5497     0806  1303               	bcf	3,6	;RP1=0, select bank0
  5498     0807  0822               	movf	I2C_Master_Write@d,w
  5499     0808  0093               	movwf	19	;volatile
  5500     0809                     l302:
  5501     0809  0008               	return
  5502     080A                     __end_of_I2C_Master_Write:
  5503                           
  5504                           	psect	text24
  5505     16FD                     __ptext24:	
  5506 ;; *************** function _I2C_Master_Stop *****************
  5507 ;; Defined at:
  5508 ;;		line 55 in file "I2C.c"
  5509 ;; Parameters:    Size  Location     Type
  5510 ;;		None
  5511 ;; Auto vars:     Size  Location     Type
  5512 ;;		None
  5513 ;; Return value:  Size  Location     Type
  5514 ;;                  1    wreg      void 
  5515 ;; Registers used:
  5516 ;;		wreg, status,2, status,0, pclath, cstack
  5517 ;; Tracked objects:
  5518 ;;		On entry : 0/0
  5519 ;;		On exit  : 0/0
  5520 ;;		Unchanged: 0/0
  5521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5522 ;;      Params:         0       0       0       0       0
  5523 ;;      Locals:         0       0       0       0       0
  5524 ;;      Temps:          0       0       0       0       0
  5525 ;;      Totals:         0       0       0       0       0
  5526 ;;Total ram usage:        0 bytes
  5527 ;; Hardware stack levels used: 1
  5528 ;; Hardware stack levels required when called: 5
  5529 ;; This function calls:
  5530 ;;		_I2C_Master_Wait
  5531 ;; This function is called by:
  5532 ;;		_main
  5533 ;;		_Read
  5534 ;;		_Set_sec
  5535 ;;		_Set_min
  5536 ;;		_Set_hour
  5537 ;;		_Set_day
  5538 ;;		_Set_month
  5539 ;;		_Set_year
  5540 ;; This function uses a non-reentrant model
  5541 ;;
  5542                           
  5543     16FD                     _I2C_Master_Stop:	
  5544                           ;psect for function _I2C_Master_Stop
  5545                           
  5546     16FD                     l2137:	
  5547                           ;incstack = 0
  5548                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  5549                           
  5550                           
  5551                           ;I2C.c: 57:     I2C_Master_Wait();
  5552     16FD  120A  118A  26EE  160A  118A  	fcall	_I2C_Master_Wait
  5553     1702                     l2139:
  5554                           
  5555                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  5556     1702  1683               	bsf	3,5	;RP0=1, select bank1
  5557     1703  1303               	bcf	3,6	;RP1=0, select bank1
  5558     1704  1511               	bsf	17,2	;volatile
  5559     1705                     l299:
  5560     1705  0008               	return
  5561     1706                     __end_of_I2C_Master_Stop:
  5562                           
  5563                           	psect	text25
  5564     16F4                     __ptext25:	
  5565 ;; *************** function _I2C_Master_Start *****************
  5566 ;; Defined at:
  5567 ;;		line 39 in file "I2C.c"
  5568 ;; Parameters:    Size  Location     Type
  5569 ;;		None
  5570 ;; Auto vars:     Size  Location     Type
  5571 ;;		None
  5572 ;; Return value:  Size  Location     Type
  5573 ;;                  1    wreg      void 
  5574 ;; Registers used:
  5575 ;;		wreg, status,2, status,0, pclath, cstack
  5576 ;; Tracked objects:
  5577 ;;		On entry : 0/0
  5578 ;;		On exit  : 0/0
  5579 ;;		Unchanged: 0/0
  5580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5581 ;;      Params:         0       0       0       0       0
  5582 ;;      Locals:         0       0       0       0       0
  5583 ;;      Temps:          0       0       0       0       0
  5584 ;;      Totals:         0       0       0       0       0
  5585 ;;Total ram usage:        0 bytes
  5586 ;; Hardware stack levels used: 1
  5587 ;; Hardware stack levels required when called: 5
  5588 ;; This function calls:
  5589 ;;		_I2C_Master_Wait
  5590 ;; This function is called by:
  5591 ;;		_main
  5592 ;;		_Read
  5593 ;;		_Set_sec
  5594 ;;		_Set_min
  5595 ;;		_Set_hour
  5596 ;;		_Set_day
  5597 ;;		_Set_month
  5598 ;;		_Set_year
  5599 ;; This function uses a non-reentrant model
  5600 ;;
  5601                           
  5602     16F4                     _I2C_Master_Start:	
  5603                           ;psect for function _I2C_Master_Start
  5604                           
  5605     16F4                     l2113:	
  5606                           ;incstack = 0
  5607                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  5608                           
  5609                           
  5610                           ;I2C.c: 41:     I2C_Master_Wait();
  5611     16F4  120A  118A  26EE  160A  118A  	fcall	_I2C_Master_Wait
  5612     16F9                     l2115:
  5613                           
  5614                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  5615     16F9  1683               	bsf	3,5	;RP0=1, select bank1
  5616     16FA  1303               	bcf	3,6	;RP1=0, select bank1
  5617     16FB  1411               	bsf	17,0	;volatile
  5618     16FC                     l293:
  5619     16FC  0008               	return
  5620     16FD                     __end_of_I2C_Master_Start:
  5621                           
  5622                           	psect	text26
  5623     16EB                     __ptext26:	
  5624 ;; *************** function _I2C_Master_RepeatedStart *****************
  5625 ;; Defined at:
  5626 ;;		line 47 in file "I2C.c"
  5627 ;; Parameters:    Size  Location     Type
  5628 ;;		None
  5629 ;; Auto vars:     Size  Location     Type
  5630 ;;		None
  5631 ;; Return value:  Size  Location     Type
  5632 ;;                  1    wreg      void 
  5633 ;; Registers used:
  5634 ;;		wreg, status,2, status,0, pclath, cstack
  5635 ;; Tracked objects:
  5636 ;;		On entry : 0/0
  5637 ;;		On exit  : 0/0
  5638 ;;		Unchanged: 0/0
  5639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5640 ;;      Params:         0       0       0       0       0
  5641 ;;      Locals:         0       0       0       0       0
  5642 ;;      Temps:          0       0       0       0       0
  5643 ;;      Totals:         0       0       0       0       0
  5644 ;;Total ram usage:        0 bytes
  5645 ;; Hardware stack levels used: 1
  5646 ;; Hardware stack levels required when called: 5
  5647 ;; This function calls:
  5648 ;;		_I2C_Master_Wait
  5649 ;; This function is called by:
  5650 ;;		_Read
  5651 ;; This function uses a non-reentrant model
  5652 ;;
  5653                           
  5654     16EB                     _I2C_Master_RepeatedStart:	
  5655                           ;psect for function _I2C_Master_RepeatedStart
  5656                           
  5657     16EB                     l2141:	
  5658                           ;incstack = 0
  5659                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  5660                           
  5661                           
  5662                           ;I2C.c: 49:     I2C_Master_Wait();
  5663     16EB  120A  118A  26EE  160A  118A  	fcall	_I2C_Master_Wait
  5664     16F0                     l2143:
  5665                           
  5666                           ;I2C.c: 50:     SSPCON2bits.RSEN = 1;
  5667     16F0  1683               	bsf	3,5	;RP0=1, select bank1
  5668     16F1  1303               	bcf	3,6	;RP1=0, select bank1
  5669     16F2  1491               	bsf	17,1	;volatile
  5670     16F3                     l296:
  5671     16F3  0008               	return
  5672     16F4                     __end_of_I2C_Master_RepeatedStart:
  5673                           
  5674                           	psect	text27
  5675     0923                     __ptext27:	
  5676 ;; *************** function _I2C_Master_Read *****************
  5677 ;; Defined at:
  5678 ;;		line 74 in file "I2C.c"
  5679 ;; Parameters:    Size  Location     Type
  5680 ;;  a               2    0[BANK0 ] unsigned short 
  5681 ;; Auto vars:     Size  Location     Type
  5682 ;;  temp            2    4[BANK0 ] unsigned short 
  5683 ;; Return value:  Size  Location     Type
  5684 ;;                  2    0[BANK0 ] unsigned short 
  5685 ;; Registers used:
  5686 ;;		wreg, status,2, status,0, pclath, cstack
  5687 ;; Tracked objects:
  5688 ;;		On entry : 0/0
  5689 ;;		On exit  : 0/0
  5690 ;;		Unchanged: 0/0
  5691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5692 ;;      Params:         0       2       0       0       0
  5693 ;;      Locals:         0       2       0       0       0
  5694 ;;      Temps:          0       2       0       0       0
  5695 ;;      Totals:         0       6       0       0       0
  5696 ;;Total ram usage:        6 bytes
  5697 ;; Hardware stack levels used: 1
  5698 ;; Hardware stack levels required when called: 5
  5699 ;; This function calls:
  5700 ;;		_I2C_Master_Wait
  5701 ;; This function is called by:
  5702 ;;		_main
  5703 ;;		_Read
  5704 ;; This function uses a non-reentrant model
  5705 ;;
  5706                           
  5707     0923                     _I2C_Master_Read:	
  5708                           ;psect for function _I2C_Master_Read
  5709                           
  5710     0923                     l2121:	
  5711                           ;incstack = 0
  5712                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  5713                           
  5714                           
  5715                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  5716     0923  120A  118A  26EE  120A  158A  	fcall	_I2C_Master_Wait
  5717     0928                     l2123:
  5718                           
  5719                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  5720     0928  1683               	bsf	3,5	;RP0=1, select bank1
  5721     0929  1303               	bcf	3,6	;RP1=0, select bank1
  5722     092A  1591               	bsf	17,3	;volatile
  5723                           
  5724                           ;I2C.c: 79:     I2C_Master_Wait();
  5725     092B  120A  118A  26EE  120A  158A  	fcall	_I2C_Master_Wait
  5726     0930                     l2125:
  5727                           
  5728                           ;I2C.c: 80:     temp = SSPBUF;
  5729     0930  1283               	bcf	3,5	;RP0=0, select bank0
  5730     0931  1303               	bcf	3,6	;RP1=0, select bank0
  5731     0932  0813               	movf	19,w	;volatile
  5732     0933  00A2               	movwf	??_I2C_Master_Read
  5733     0934  01A3               	clrf	??_I2C_Master_Read+1
  5734     0935  0822               	movf	??_I2C_Master_Read,w
  5735     0936  00A4               	movwf	I2C_Master_Read@temp
  5736     0937  0823               	movf	??_I2C_Master_Read+1,w
  5737     0938  00A5               	movwf	I2C_Master_Read@temp+1
  5738     0939                     l2127:
  5739                           
  5740                           ;I2C.c: 81:     I2C_Master_Wait();
  5741     0939  120A  118A  26EE  120A  158A  	fcall	_I2C_Master_Wait
  5742     093E                     l2129:
  5743                           
  5744                           ;I2C.c: 82:     if(a == 1){
  5745     093E  1283               	bcf	3,5	;RP0=0, select bank0
  5746     093F  1303               	bcf	3,6	;RP1=0, select bank0
  5747     0940  0320               	decf	I2C_Master_Read@a,w
  5748     0941  0421               	iorwf	I2C_Master_Read@a+1,w
  5749     0942  1D03               	btfss	3,2
  5750     0943  2945               	goto	u1681
  5751     0944  2946               	goto	u1680
  5752     0945                     u1681:
  5753     0945  294A               	goto	l305
  5754     0946                     u1680:
  5755     0946                     l2131:
  5756                           
  5757                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  5758     0946  1683               	bsf	3,5	;RP0=1, select bank1
  5759     0947  1303               	bcf	3,6	;RP1=0, select bank1
  5760     0948  1291               	bcf	17,5	;volatile
  5761                           
  5762                           ;I2C.c: 84:     }else{
  5763     0949  294D               	goto	l306
  5764     094A                     l305:
  5765                           
  5766                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  5767     094A  1683               	bsf	3,5	;RP0=1, select bank1
  5768     094B  1303               	bcf	3,6	;RP1=0, select bank1
  5769     094C  1691               	bsf	17,5	;volatile
  5770     094D                     l306:	
  5771                           ;I2C.c: 86:     }
  5772                           
  5773                           
  5774                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  5775     094D  1611               	bsf	17,4	;volatile
  5776     094E                     l2133:
  5777                           
  5778                           ;I2C.c: 88:     return temp;
  5779     094E  1283               	bcf	3,5	;RP0=0, select bank0
  5780     094F  1303               	bcf	3,6	;RP1=0, select bank0
  5781     0950  0825               	movf	I2C_Master_Read@temp+1,w
  5782     0951  00A1               	movwf	?_I2C_Master_Read+1
  5783     0952  0824               	movf	I2C_Master_Read@temp,w
  5784     0953  00A0               	movwf	?_I2C_Master_Read
  5785     0954                     l307:
  5786     0954  0008               	return
  5787     0955                     __end_of_I2C_Master_Read:
  5788                           
  5789                           	psect	text28
  5790     06EE                     __ptext28:	
  5791 ;; *************** function _I2C_Master_Wait *****************
  5792 ;; Defined at:
  5793 ;;		line 32 in file "I2C.c"
  5794 ;; Parameters:    Size  Location     Type
  5795 ;;		None
  5796 ;; Auto vars:     Size  Location     Type
  5797 ;;		None
  5798 ;; Return value:  Size  Location     Type
  5799 ;;                  1    wreg      void 
  5800 ;; Registers used:
  5801 ;;		wreg, status,2
  5802 ;; Tracked objects:
  5803 ;;		On entry : 0/0
  5804 ;;		On exit  : 0/0
  5805 ;;		Unchanged: 0/0
  5806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5807 ;;      Params:         0       0       0       0       0
  5808 ;;      Locals:         0       0       0       0       0
  5809 ;;      Temps:          0       0       0       0       0
  5810 ;;      Totals:         0       0       0       0       0
  5811 ;;Total ram usage:        0 bytes
  5812 ;; Hardware stack levels used: 1
  5813 ;; Hardware stack levels required when called: 4
  5814 ;; This function calls:
  5815 ;;		Nothing
  5816 ;; This function is called by:
  5817 ;;		_I2C_Master_Start
  5818 ;;		_I2C_Master_RepeatedStart
  5819 ;;		_I2C_Master_Stop
  5820 ;;		_I2C_Master_Write
  5821 ;;		_I2C_Master_Read
  5822 ;; This function uses a non-reentrant model
  5823 ;;
  5824                           
  5825     06EE                     _I2C_Master_Wait:	
  5826                           ;psect for function _I2C_Master_Wait
  5827                           
  5828     06EE                     l2109:	
  5829                           ;incstack = 0
  5830                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  5831                           
  5832     06EE                     l287:	
  5833                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  5834                           
  5835     06EE  1683               	bsf	3,5	;RP0=1, select bank1
  5836     06EF  1303               	bcf	3,6	;RP1=0, select bank1
  5837     06F0  1914               	btfsc	20,2	;volatile
  5838     06F1  2EF3               	goto	u1661
  5839     06F2  2EF4               	goto	u1660
  5840     06F3                     u1661:
  5841     06F3  2EEE               	goto	l287
  5842     06F4                     u1660:
  5843     06F4                     l2111:
  5844     06F4  0811               	movf	17,w	;volatile
  5845     06F5  391F               	andlw	31
  5846     06F6  1D03               	btfss	3,2
  5847     06F7  2EF9               	goto	u1671
  5848     06F8  2EFA               	goto	u1670
  5849     06F9                     u1671:
  5850     06F9  2EEE               	goto	l287
  5851     06FA                     u1670:
  5852     06FA                     l290:
  5853     06FA  0008               	return
  5854     06FB                     __end_of_I2C_Master_Wait:
  5855                           
  5856                           	psect	text29
  5857     179B                     __ptext29:	
  5858 ;; *************** function _Bcd_to_Dec *****************
  5859 ;; Defined at:
  5860 ;;		line 541 in file "main.c"
  5861 ;; Parameters:    Size  Location     Type
  5862 ;;  bcd             1    wreg     unsigned char 
  5863 ;; Auto vars:     Size  Location     Type
  5864 ;;  bcd             1    7[BANK0 ] unsigned char 
  5865 ;;  dec             1    6[BANK0 ] unsigned char 
  5866 ;; Return value:  Size  Location     Type
  5867 ;;                  1    wreg      unsigned char 
  5868 ;; Registers used:
  5869 ;;		wreg, status,2, status,0, pclath, cstack
  5870 ;; Tracked objects:
  5871 ;;		On entry : 0/0
  5872 ;;		On exit  : 0/0
  5873 ;;		Unchanged: 0/0
  5874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5875 ;;      Params:         0       0       0       0       0
  5876 ;;      Locals:         0       2       0       0       0
  5877 ;;      Temps:          0       2       0       0       0
  5878 ;;      Totals:         0       4       0       0       0
  5879 ;;Total ram usage:        4 bytes
  5880 ;; Hardware stack levels used: 1
  5881 ;; Hardware stack levels required when called: 5
  5882 ;; This function calls:
  5883 ;;		___bmul
  5884 ;; This function is called by:
  5885 ;;		_Read_Time
  5886 ;;		_Read_Date
  5887 ;; This function uses a non-reentrant model
  5888 ;;
  5889                           
  5890     179B                     _Bcd_to_Dec:	
  5891                           ;psect for function _Bcd_to_Dec
  5892                           
  5893                           
  5894                           ;incstack = 0
  5895                           ; Regs used in _Bcd_to_Dec: [wreg+status,2+status,0+pclath+cstack]
  5896                           ;Bcd_to_Dec@bcd stored from wreg
  5897     179B  1283               	bcf	3,5	;RP0=0, select bank0
  5898     179C  1303               	bcf	3,6	;RP1=0, select bank0
  5899     179D  00A7               	movwf	Bcd_to_Dec@bcd
  5900     179E                     l2273:
  5901                           
  5902                           ;main.c: 542:     uint8_t dec;;main.c: 543:     dec = ((bcd>>4)*10)+(bcd & 0b00001111);
  5903     179E  300F               	movlw	15
  5904     179F  0527               	andwf	Bcd_to_Dec@bcd,w
  5905     17A0  00A4               	movwf	??_Bcd_to_Dec
  5906     17A1  300A               	movlw	10
  5907     17A2  00A0               	movwf	___bmul@multiplicand
  5908     17A3  0827               	movf	Bcd_to_Dec@bcd,w
  5909     17A4  00A5               	movwf	??_Bcd_to_Dec+1
  5910     17A5  3004               	movlw	4
  5911     17A6                     u1975:
  5912     17A6  1003               	clrc
  5913     17A7  0CA5               	rrf	??_Bcd_to_Dec+1,f
  5914     17A8  3EFF               	addlw	-1
  5915     17A9  1D03               	skipz
  5916     17AA  2FA6               	goto	u1975
  5917     17AB  0825               	movf	??_Bcd_to_Dec+1,w
  5918     17AC  160A  118A  2768  160A  118A  	fcall	___bmul
  5919     17B1  1283               	bcf	3,5	;RP0=0, select bank0
  5920     17B2  1303               	bcf	3,6	;RP1=0, select bank0
  5921     17B3  0724               	addwf	??_Bcd_to_Dec,w
  5922     17B4  00A6               	movwf	Bcd_to_Dec@dec
  5923     17B5                     l2275:
  5924                           
  5925                           ;main.c: 544:     return dec;
  5926     17B5  0826               	movf	Bcd_to_Dec@dec,w
  5927     17B6                     l255:
  5928     17B6  0008               	return
  5929     17B7                     __end_of_Bcd_to_Dec:
  5930                           
  5931                           	psect	text30
  5932     1768                     __ptext30:	
  5933 ;; *************** function ___bmul *****************
  5934 ;; Defined at:
  5935 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8.c"
  5936 ;; Parameters:    Size  Location     Type
  5937 ;;  multiplier      1    wreg     unsigned char 
  5938 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  5939 ;; Auto vars:     Size  Location     Type
  5940 ;;  multiplier      1    3[BANK0 ] unsigned char 
  5941 ;;  product         1    2[BANK0 ] unsigned char 
  5942 ;; Return value:  Size  Location     Type
  5943 ;;                  1    wreg      unsigned char 
  5944 ;; Registers used:
  5945 ;;		wreg, status,2, status,0
  5946 ;; Tracked objects:
  5947 ;;		On entry : 0/0
  5948 ;;		On exit  : 0/0
  5949 ;;		Unchanged: 0/0
  5950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5951 ;;      Params:         0       1       0       0       0
  5952 ;;      Locals:         0       2       0       0       0
  5953 ;;      Temps:          0       1       0       0       0
  5954 ;;      Totals:         0       4       0       0       0
  5955 ;;Total ram usage:        4 bytes
  5956 ;; Hardware stack levels used: 1
  5957 ;; Hardware stack levels required when called: 4
  5958 ;; This function calls:
  5959 ;;		Nothing
  5960 ;; This function is called by:
  5961 ;;		_Bcd_to_Dec
  5962 ;; This function uses a non-reentrant model
  5963 ;;
  5964                           
  5965     1768                     ___bmul:	
  5966                           ;psect for function ___bmul
  5967                           
  5968                           
  5969                           ;incstack = 0
  5970                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  5971                           ;___bmul@multiplier stored from wreg
  5972     1768  1283               	bcf	3,5	;RP0=0, select bank0
  5973     1769  1303               	bcf	3,6	;RP1=0, select bank0
  5974     176A  00A3               	movwf	___bmul@multiplier
  5975     176B                     l2163:
  5976     176B  01A2               	clrf	___bmul@product
  5977     176C                     l2165:
  5978     176C  1C23               	btfss	___bmul@multiplier,0
  5979     176D  2F6F               	goto	u1771
  5980     176E  2F70               	goto	u1770
  5981     176F                     u1771:
  5982     176F  2F74               	goto	l2169
  5983     1770                     u1770:
  5984     1770                     l2167:
  5985     1770  0820               	movf	___bmul@multiplicand,w
  5986     1771  00A1               	movwf	??___bmul
  5987     1772  0821               	movf	??___bmul,w
  5988     1773  07A2               	addwf	___bmul@product,f
  5989     1774                     l2169:
  5990     1774  1003               	clrc
  5991     1775  0DA0               	rlf	___bmul@multiplicand,f
  5992     1776                     l2171:
  5993     1776  1003               	clrc
  5994     1777  0CA3               	rrf	___bmul@multiplier,f
  5995     1778  0823               	movf	___bmul@multiplier,w
  5996     1779  1D03               	btfss	3,2
  5997     177A  2F7C               	goto	u1781
  5998     177B  2F7D               	goto	u1780
  5999     177C                     u1781:
  6000     177C  2F6C               	goto	l2165
  6001     177D                     u1780:
  6002     177D                     l2173:
  6003     177D  0822               	movf	___bmul@product,w
  6004     177E                     l550:
  6005     177E  0008               	return
  6006     177F                     __end_of___bmul:
  6007                           
  6008                           	psect	text31
  6009     0C3A                     __ptext31:	
  6010 ;; *************** function _Lcd_Write_String *****************
  6011 ;; Defined at:
  6012 ;;		line 103 in file "LCD.c"
  6013 ;; Parameters:    Size  Location     Type
  6014 ;;  a               2    3[BANK0 ] PTR unsigned char 
  6015 ;;		 -> STR_17(3), STR_15(3), STR_13(3), STR_11(3), 
  6016 ;;		 -> STR_9(3), STR_7(3), STR_5(3), buffer(20), 
  6017 ;;		 -> STR_1(4), 
  6018 ;; Auto vars:     Size  Location     Type
  6019 ;;  i               2    8[BANK0 ] int 
  6020 ;; Return value:  Size  Location     Type
  6021 ;;                  1    wreg      void 
  6022 ;; Registers used:
  6023 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6024 ;; Tracked objects:
  6025 ;;		On entry : 0/0
  6026 ;;		On exit  : 0/0
  6027 ;;		Unchanged: 0/0
  6028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6029 ;;      Params:         0       2       0       0       0
  6030 ;;      Locals:         0       2       0       0       0
  6031 ;;      Temps:          0       3       0       0       0
  6032 ;;      Totals:         0       7       0       0       0
  6033 ;;Total ram usage:        7 bytes
  6034 ;; Hardware stack levels used: 1
  6035 ;; Hardware stack levels required when called: 6
  6036 ;; This function calls:
  6037 ;;		_Lcd_Write_Char
  6038 ;; This function is called by:
  6039 ;;		_main
  6040 ;; This function uses a non-reentrant model
  6041 ;;
  6042                           
  6043     0C3A                     _Lcd_Write_String:	
  6044                           ;psect for function _Lcd_Write_String
  6045                           
  6046     0C3A                     l2513:	
  6047                           ;incstack = 0
  6048                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6049                           
  6050                           
  6051                           ;LCD.c: 104:     int i;;LCD.c: 105:     for (i = 0; a[i] != '\0'; i++)
  6052     0C3A  1283               	bcf	3,5	;RP0=0, select bank0
  6053     0C3B  1303               	bcf	3,6	;RP1=0, select bank0
  6054     0C3C  01A8               	clrf	Lcd_Write_String@i
  6055     0C3D  01A9               	clrf	Lcd_Write_String@i+1
  6056     0C3E  2C63               	goto	l2519
  6057     0C3F                     l2515:
  6058                           
  6059                           ;LCD.c: 106:         Lcd_Write_Char(a[i]);
  6060     0C3F  0828               	movf	Lcd_Write_String@i,w
  6061     0C40  0723               	addwf	Lcd_Write_String@a,w
  6062     0C41  00A6               	movwf	??_Lcd_Write_String+1
  6063     0C42  0824               	movf	Lcd_Write_String@a+1,w
  6064     0C43  00A5               	movwf	??_Lcd_Write_String
  6065     0C44  1803               	skipnc
  6066     0C45  0AA5               	incf	??_Lcd_Write_String,f
  6067     0C46  1FA8               	btfss	Lcd_Write_String@i,7
  6068     0C47  2C49               	goto	u2310
  6069     0C48  03A5               	decf	??_Lcd_Write_String,f
  6070     0C49                     u2310:
  6071     0C49  1283               	bcf	3,5	;RP0=0, select bank0
  6072     0C4A  1303               	bcf	3,6	;RP1=0, select bank0
  6073     0C4B  0825               	movf	??_Lcd_Write_String,w
  6074     0C4C  00A7               	movwf	??_Lcd_Write_String+2
  6075     0C4D  0827               	movf	??_Lcd_Write_String+2,w
  6076     0C4E  00FF               	movwf	btemp+1
  6077     0C4F  0826               	movf	??_Lcd_Write_String+1,w
  6078     0C50  0084               	movwf	4
  6079     0C51  120A  118A  2700  120A  158A  	fcall	stringtab
  6080     0C56  120A  118A  27E7  120A  158A  	fcall	_Lcd_Write_Char
  6081     0C5B                     l2517:
  6082     0C5B  3001               	movlw	1
  6083     0C5C  1283               	bcf	3,5	;RP0=0, select bank0
  6084     0C5D  1303               	bcf	3,6	;RP1=0, select bank0
  6085     0C5E  07A8               	addwf	Lcd_Write_String@i,f
  6086     0C5F  1803               	skipnc
  6087     0C60  0AA9               	incf	Lcd_Write_String@i+1,f
  6088     0C61  3000               	movlw	0
  6089     0C62  07A9               	addwf	Lcd_Write_String@i+1,f
  6090     0C63                     l2519:
  6091     0C63  0828               	movf	Lcd_Write_String@i,w
  6092     0C64  0723               	addwf	Lcd_Write_String@a,w
  6093     0C65  00A6               	movwf	??_Lcd_Write_String+1
  6094     0C66  0824               	movf	Lcd_Write_String@a+1,w
  6095     0C67  00A5               	movwf	??_Lcd_Write_String
  6096     0C68  1803               	skipnc
  6097     0C69  0AA5               	incf	??_Lcd_Write_String,f
  6098     0C6A  1FA8               	btfss	Lcd_Write_String@i,7
  6099     0C6B  2C6D               	goto	u2320
  6100     0C6C  03A5               	decf	??_Lcd_Write_String,f
  6101     0C6D                     u2320:
  6102     0C6D  1283               	bcf	3,5	;RP0=0, select bank0
  6103     0C6E  1303               	bcf	3,6	;RP1=0, select bank0
  6104     0C6F  0825               	movf	??_Lcd_Write_String,w
  6105     0C70  00A7               	movwf	??_Lcd_Write_String+2
  6106     0C71  0827               	movf	??_Lcd_Write_String+2,w
  6107     0C72  00FF               	movwf	btemp+1
  6108     0C73  0826               	movf	??_Lcd_Write_String+1,w
  6109     0C74  0084               	movwf	4
  6110     0C75  120A  118A  2700  120A  158A  	fcall	stringtab
  6111     0C7A  3A00               	xorlw	0
  6112     0C7B  1D03               	skipz
  6113     0C7C  2C7E               	goto	u2331
  6114     0C7D  2C7F               	goto	u2330
  6115     0C7E                     u2331:
  6116     0C7E  2C3F               	goto	l2515
  6117     0C7F                     u2330:
  6118     0C7F                     l359:
  6119     0C7F  0008               	return
  6120     0C80                     __end_of_Lcd_Write_String:
  6121                           
  6122                           	psect	text32
  6123     07E7                     __ptext32:	
  6124 ;; *************** function _Lcd_Write_Char *****************
  6125 ;; Defined at:
  6126 ;;		line 95 in file "LCD.c"
  6127 ;; Parameters:    Size  Location     Type
  6128 ;;  a               1    wreg     unsigned char 
  6129 ;; Auto vars:     Size  Location     Type
  6130 ;;  a               1    2[BANK0 ] unsigned char 
  6131 ;; Return value:  Size  Location     Type
  6132 ;;                  1    wreg      void 
  6133 ;; Registers used:
  6134 ;;		wreg, status,2, status,0, pclath, cstack
  6135 ;; Tracked objects:
  6136 ;;		On entry : 0/0
  6137 ;;		On exit  : 0/0
  6138 ;;		Unchanged: 0/0
  6139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6140 ;;      Params:         0       0       0       0       0
  6141 ;;      Locals:         0       1       0       0       0
  6142 ;;      Temps:          0       1       0       0       0
  6143 ;;      Totals:         0       2       0       0       0
  6144 ;;Total ram usage:        2 bytes
  6145 ;; Hardware stack levels used: 1
  6146 ;; Hardware stack levels required when called: 5
  6147 ;; This function calls:
  6148 ;;		_Lcd_Port
  6149 ;; This function is called by:
  6150 ;;		_Lcd_Write_String
  6151 ;; This function uses a non-reentrant model
  6152 ;;
  6153                           
  6154     07E7                     _Lcd_Write_Char:	
  6155                           ;psect for function _Lcd_Write_Char
  6156                           
  6157                           
  6158                           ;incstack = 0
  6159                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  6160                           ;Lcd_Write_Char@a stored from wreg
  6161     07E7  1283               	bcf	3,5	;RP0=0, select bank0
  6162     07E8  1303               	bcf	3,6	;RP1=0, select bank0
  6163     07E9  00A2               	movwf	Lcd_Write_Char@a
  6164     07EA                     l2301:
  6165                           
  6166                           ;LCD.c: 96:     PORTBbits.RB0 = 1;
  6167     07EA  1406               	bsf	6,0	;volatile
  6168     07EB                     l2303:
  6169                           
  6170                           ;LCD.c: 97:     Lcd_Port(a);
  6171     07EB  0822               	movf	Lcd_Write_Char@a,w
  6172     07EC  120A  158A  2385  120A  118A  	fcall	_Lcd_Port
  6173     07F1                     l2305:
  6174                           
  6175                           ;LCD.c: 98:     PORTBbits.RB1 = 1;
  6176     07F1  1283               	bcf	3,5	;RP0=0, select bank0
  6177     07F2  1303               	bcf	3,6	;RP1=0, select bank0
  6178     07F3  1486               	bsf	6,1	;volatile
  6179     07F4                     l2307:
  6180                           
  6181                           ;LCD.c: 99:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  6182     07F4  3019               	movlw	25
  6183     07F5  1283               	bcf	3,5	;RP0=0, select bank0
  6184     07F6  1303               	bcf	3,6	;RP1=0, select bank0
  6185     07F7  00A1               	movwf	??_Lcd_Write_Char
  6186     07F8                     u3337:
  6187     07F8  0BA1               	decfsz	??_Lcd_Write_Char,f
  6188     07F9  2FF8               	goto	u3337
  6189     07FA  2FFB               	nop2
  6190     07FB                     l2309:
  6191                           
  6192                           ;LCD.c: 100:     PORTBbits.RB1 = 0;
  6193     07FB  1283               	bcf	3,5	;RP0=0, select bank0
  6194     07FC  1303               	bcf	3,6	;RP1=0, select bank0
  6195     07FD  1086               	bcf	6,1	;volatile
  6196     07FE                     l353:
  6197     07FE  0008               	return
  6198     07FF                     __end_of_Lcd_Write_Char:
  6199                           
  6200                           	psect	text33
  6201     17B7                     __ptext33:	
  6202 ;; *************** function _Lcd_Set_Cursor *****************
  6203 ;; Defined at:
  6204 ;;		line 68 in file "LCD.c"
  6205 ;; Parameters:    Size  Location     Type
  6206 ;;  a               1    wreg     unsigned char 
  6207 ;;  b               1    4[BANK0 ] unsigned char 
  6208 ;; Auto vars:     Size  Location     Type
  6209 ;;  a               1    5[BANK0 ] unsigned char 
  6210 ;;  temp            1    6[BANK0 ] unsigned char 
  6211 ;;  y               1    0        unsigned char 
  6212 ;;  z               1    0        unsigned char 
  6213 ;; Return value:  Size  Location     Type
  6214 ;;                  1    wreg      void 
  6215 ;; Registers used:
  6216 ;;		wreg, status,2, status,0, pclath, cstack
  6217 ;; Tracked objects:
  6218 ;;		On entry : 0/0
  6219 ;;		On exit  : 0/0
  6220 ;;		Unchanged: 0/0
  6221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6222 ;;      Params:         0       1       0       0       0
  6223 ;;      Locals:         0       2       0       0       0
  6224 ;;      Temps:          0       0       0       0       0
  6225 ;;      Totals:         0       3       0       0       0
  6226 ;;Total ram usage:        3 bytes
  6227 ;; Hardware stack levels used: 1
  6228 ;; Hardware stack levels required when called: 6
  6229 ;; This function calls:
  6230 ;;		_Lcd_Cmd
  6231 ;; This function is called by:
  6232 ;;		_main
  6233 ;; This function uses a non-reentrant model
  6234 ;;
  6235                           
  6236     17B7                     _Lcd_Set_Cursor:	
  6237                           ;psect for function _Lcd_Set_Cursor
  6238                           
  6239                           
  6240                           ;incstack = 0
  6241                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  6242                           ;Lcd_Set_Cursor@a stored from wreg
  6243     17B7  1283               	bcf	3,5	;RP0=0, select bank0
  6244     17B8  1303               	bcf	3,6	;RP1=0, select bank0
  6245     17B9  00A5               	movwf	Lcd_Set_Cursor@a
  6246     17BA                     l2501:
  6247                           
  6248                           ;LCD.c: 69:     char temp, z, y;;LCD.c: 70:     if (a == 1) {
  6249     17BA  0325               	decf	Lcd_Set_Cursor@a,w
  6250     17BB  1D03               	btfss	3,2
  6251     17BC  2FBE               	goto	u2291
  6252     17BD  2FBF               	goto	u2290
  6253     17BE                     u2291:
  6254     17BE  2FC9               	goto	l2507
  6255     17BF                     u2290:
  6256     17BF                     l2503:
  6257                           
  6258                           ;LCD.c: 71:         temp = 0x80 + b - 1;
  6259     17BF  0824               	movf	Lcd_Set_Cursor@b,w
  6260     17C0  3E7F               	addlw	127
  6261     17C1  00A6               	movwf	Lcd_Set_Cursor@temp
  6262     17C2                     l2505:
  6263                           
  6264                           ;LCD.c: 72:         Lcd_Cmd(temp);
  6265     17C2  0826               	movf	Lcd_Set_Cursor@temp,w
  6266     17C3  160A  118A  277F  160A  118A  	fcall	_Lcd_Cmd
  6267                           
  6268                           ;LCD.c: 73:     } else if (a == 2) {
  6269     17C8  2FD8               	goto	l347
  6270     17C9                     l2507:
  6271     17C9  3002               	movlw	2
  6272     17CA  0625               	xorwf	Lcd_Set_Cursor@a,w
  6273     17CB  1D03               	btfss	3,2
  6274     17CC  2FCE               	goto	u2301
  6275     17CD  2FCF               	goto	u2300
  6276     17CE                     u2301:
  6277     17CE  2FD8               	goto	l347
  6278     17CF                     u2300:
  6279     17CF                     l2509:
  6280                           
  6281                           ;LCD.c: 74:         temp = 0xC0 + b - 1;
  6282     17CF  0824               	movf	Lcd_Set_Cursor@b,w
  6283     17D0  3EBF               	addlw	191
  6284     17D1  00A6               	movwf	Lcd_Set_Cursor@temp
  6285     17D2                     l2511:
  6286                           
  6287                           ;LCD.c: 75:         Lcd_Cmd(temp);
  6288     17D2  0826               	movf	Lcd_Set_Cursor@temp,w
  6289     17D3  160A  118A  277F  160A  118A  	fcall	_Lcd_Cmd
  6290     17D8                     l347:
  6291     17D8  0008               	return
  6292     17D9                     __end_of_Lcd_Set_Cursor:
  6293                           
  6294                           	psect	text34
  6295     0D15                     __ptext34:	
  6296 ;; *************** function _Lcd_Init *****************
  6297 ;; Defined at:
  6298 ;;		line 79 in file "LCD.c"
  6299 ;; Parameters:    Size  Location     Type
  6300 ;;		None
  6301 ;; Auto vars:     Size  Location     Type
  6302 ;;		None
  6303 ;; Return value:  Size  Location     Type
  6304 ;;                  1    wreg      void 
  6305 ;; Registers used:
  6306 ;;		wreg, status,2, status,0, pclath, cstack
  6307 ;; Tracked objects:
  6308 ;;		On entry : 0/0
  6309 ;;		On exit  : 0/0
  6310 ;;		Unchanged: 0/0
  6311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6312 ;;      Params:         0       0       0       0       0
  6313 ;;      Locals:         0       0       0       0       0
  6314 ;;      Temps:          0       2       0       0       0
  6315 ;;      Totals:         0       2       0       0       0
  6316 ;;Total ram usage:        2 bytes
  6317 ;; Hardware stack levels used: 1
  6318 ;; Hardware stack levels required when called: 6
  6319 ;; This function calls:
  6320 ;;		_Lcd_Cmd
  6321 ;;		_Lcd_Port
  6322 ;; This function is called by:
  6323 ;;		_main
  6324 ;; This function uses a non-reentrant model
  6325 ;;
  6326                           
  6327     0D15                     _Lcd_Init:	
  6328                           ;psect for function _Lcd_Init
  6329                           
  6330     0D15                     l2487:	
  6331                           ;incstack = 0
  6332                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  6333                           
  6334                           
  6335                           ;LCD.c: 80:     Lcd_Port(0x00);
  6336     0D15  3000               	movlw	0
  6337     0D16  120A  158A  2385  120A  158A  	fcall	_Lcd_Port
  6338     0D1B                     l2489:
  6339                           
  6340                           ;LCD.c: 81:     _delay((unsigned long)((20)*(8000000/4000.0)));
  6341     0D1B  3034               	movlw	52
  6342     0D1C  1283               	bcf	3,5	;RP0=0, select bank0
  6343     0D1D  1303               	bcf	3,6	;RP1=0, select bank0
  6344     0D1E  00A5               	movwf	??_Lcd_Init+1
  6345     0D1F  30F1               	movlw	241
  6346     0D20  00A4               	movwf	??_Lcd_Init
  6347     0D21                     u3347:
  6348     0D21  0BA4               	decfsz	??_Lcd_Init,f
  6349     0D22  2D21               	goto	u3347
  6350     0D23  0BA5               	decfsz	??_Lcd_Init+1,f
  6351     0D24  2D21               	goto	u3347
  6352     0D25                     l2491:
  6353                           
  6354                           ;LCD.c: 82:     Lcd_Cmd(0x030);
  6355     0D25  3030               	movlw	48
  6356     0D26  160A  118A  277F  120A  158A  	fcall	_Lcd_Cmd
  6357                           
  6358                           ;LCD.c: 83:     _delay((unsigned long)((5)*(8000000/4000.0)));
  6359     0D2B  300D               	movlw	13
  6360     0D2C  1283               	bcf	3,5	;RP0=0, select bank0
  6361     0D2D  1303               	bcf	3,6	;RP1=0, select bank0
  6362     0D2E  00A5               	movwf	??_Lcd_Init+1
  6363     0D2F  30FB               	movlw	251
  6364     0D30  00A4               	movwf	??_Lcd_Init
  6365     0D31                     u3357:
  6366     0D31  0BA4               	decfsz	??_Lcd_Init,f
  6367     0D32  2D31               	goto	u3357
  6368     0D33  0BA5               	decfsz	??_Lcd_Init+1,f
  6369     0D34  2D31               	goto	u3357
  6370     0D35                     l2493:
  6371                           
  6372                           ;LCD.c: 84:     Lcd_Cmd(0x030);
  6373     0D35  3030               	movlw	48
  6374     0D36  160A  118A  277F  120A  158A  	fcall	_Lcd_Cmd
  6375     0D3B                     l2495:
  6376                           
  6377                           ;LCD.c: 85:     _delay((unsigned long)((200)*(8000000/4000000.0)));
  6378     0D3B  3084               	movlw	132
  6379     0D3C  1283               	bcf	3,5	;RP0=0, select bank0
  6380     0D3D  1303               	bcf	3,6	;RP1=0, select bank0
  6381     0D3E  00A4               	movwf	??_Lcd_Init
  6382     0D3F                     u3367:
  6383     0D3F  0BA4               	decfsz	??_Lcd_Init,f
  6384     0D40  2D3F               	goto	u3367
  6385     0D41  0000               	nop
  6386                           
  6387                           ;LCD.c: 86:     Lcd_Cmd(0x030);
  6388     0D42  3030               	movlw	48
  6389     0D43  160A  118A  277F  120A  158A  	fcall	_Lcd_Cmd
  6390                           
  6391                           ;LCD.c: 87:     Lcd_Cmd(0x38);
  6392     0D48  3038               	movlw	56
  6393     0D49  160A  118A  277F  120A  158A  	fcall	_Lcd_Cmd
  6394                           
  6395                           ;LCD.c: 88:     Lcd_Cmd(0x08);
  6396     0D4E  3008               	movlw	8
  6397     0D4F  160A  118A  277F  120A  158A  	fcall	_Lcd_Cmd
  6398                           
  6399                           ;LCD.c: 89:     Lcd_Cmd(0x01);
  6400     0D54  3001               	movlw	1
  6401     0D55  160A  118A  277F  120A  158A  	fcall	_Lcd_Cmd
  6402                           
  6403                           ;LCD.c: 90:     Lcd_Cmd(0x06);
  6404     0D5A  3006               	movlw	6
  6405     0D5B  160A  118A  277F  120A  158A  	fcall	_Lcd_Cmd
  6406                           
  6407                           ;LCD.c: 91:     Lcd_Cmd(0x0C);
  6408     0D60  300C               	movlw	12
  6409     0D61  160A  118A  277F  120A  158A  	fcall	_Lcd_Cmd
  6410     0D66                     l2497:
  6411                           
  6412                           ;LCD.c: 92:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  6413     0D66  3041               	movlw	65
  6414     0D67  1283               	bcf	3,5	;RP0=0, select bank0
  6415     0D68  1303               	bcf	3,6	;RP1=0, select bank0
  6416     0D69  00A4               	movwf	??_Lcd_Init
  6417     0D6A                     u3377:
  6418     0D6A  0BA4               	decfsz	??_Lcd_Init,f
  6419     0D6B  2D6A               	goto	u3377
  6420     0D6C  2D6D               	nop2
  6421     0D6D                     l350:
  6422     0D6D  0008               	return
  6423     0D6E                     __end_of_Lcd_Init:
  6424                           
  6425                           	psect	text35
  6426     171D                     __ptext35:	
  6427 ;; *************** function _Lcd_Clear *****************
  6428 ;; Defined at:
  6429 ;;		line 63 in file "LCD.c"
  6430 ;; Parameters:    Size  Location     Type
  6431 ;;		None
  6432 ;; Auto vars:     Size  Location     Type
  6433 ;;		None
  6434 ;; Return value:  Size  Location     Type
  6435 ;;                  1    wreg      void 
  6436 ;; Registers used:
  6437 ;;		wreg, status,2, status,0, pclath, cstack
  6438 ;; Tracked objects:
  6439 ;;		On entry : 0/0
  6440 ;;		On exit  : 0/0
  6441 ;;		Unchanged: 0/0
  6442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6443 ;;      Params:         0       0       0       0       0
  6444 ;;      Locals:         0       0       0       0       0
  6445 ;;      Temps:          0       0       0       0       0
  6446 ;;      Totals:         0       0       0       0       0
  6447 ;;Total ram usage:        0 bytes
  6448 ;; Hardware stack levels used: 1
  6449 ;; Hardware stack levels required when called: 6
  6450 ;; This function calls:
  6451 ;;		_Lcd_Cmd
  6452 ;; This function is called by:
  6453 ;;		_main
  6454 ;; This function uses a non-reentrant model
  6455 ;;
  6456                           
  6457     171D                     _Lcd_Clear:	
  6458                           ;psect for function _Lcd_Clear
  6459                           
  6460     171D                     l2499:	
  6461                           ;incstack = 0
  6462                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  6463                           
  6464                           
  6465                           ;LCD.c: 64:     Lcd_Cmd(0);
  6466     171D  3000               	movlw	0
  6467     171E  160A  118A  277F  160A  118A  	fcall	_Lcd_Cmd
  6468                           
  6469                           ;LCD.c: 65:     Lcd_Cmd(1);
  6470     1723  3001               	movlw	1
  6471     1724  160A  118A  277F  160A  118A  	fcall	_Lcd_Cmd
  6472     1729                     l341:
  6473     1729  0008               	return
  6474     172A                     __end_of_Lcd_Clear:
  6475                           
  6476                           	psect	text36
  6477     177F                     __ptext36:	
  6478 ;; *************** function _Lcd_Cmd *****************
  6479 ;; Defined at:
  6480 ;;		line 55 in file "LCD.c"
  6481 ;; Parameters:    Size  Location     Type
  6482 ;;  a               1    wreg     unsigned char 
  6483 ;; Auto vars:     Size  Location     Type
  6484 ;;  a               1    3[BANK0 ] unsigned char 
  6485 ;; Return value:  Size  Location     Type
  6486 ;;                  1    wreg      void 
  6487 ;; Registers used:
  6488 ;;		wreg, status,2, status,0, pclath, cstack
  6489 ;; Tracked objects:
  6490 ;;		On entry : 0/0
  6491 ;;		On exit  : 0/0
  6492 ;;		Unchanged: 0/0
  6493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6494 ;;      Params:         0       0       0       0       0
  6495 ;;      Locals:         0       1       0       0       0
  6496 ;;      Temps:          0       2       0       0       0
  6497 ;;      Totals:         0       3       0       0       0
  6498 ;;Total ram usage:        3 bytes
  6499 ;; Hardware stack levels used: 1
  6500 ;; Hardware stack levels required when called: 5
  6501 ;; This function calls:
  6502 ;;		_Lcd_Port
  6503 ;; This function is called by:
  6504 ;;		_Lcd_Clear
  6505 ;;		_Lcd_Set_Cursor
  6506 ;;		_Lcd_Init
  6507 ;;		_Lcd_Shift_Right
  6508 ;;		_Lcd_Shift_Left
  6509 ;; This function uses a non-reentrant model
  6510 ;;
  6511                           
  6512     177F                     _Lcd_Cmd:	
  6513                           ;psect for function _Lcd_Cmd
  6514                           
  6515                           
  6516                           ;incstack = 0
  6517                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  6518                           ;Lcd_Cmd@a stored from wreg
  6519     177F  1283               	bcf	3,5	;RP0=0, select bank0
  6520     1780  1303               	bcf	3,6	;RP1=0, select bank0
  6521     1781  00A3               	movwf	Lcd_Cmd@a
  6522     1782                     l2291:
  6523                           
  6524                           ;LCD.c: 56:     PORTBbits.RB0 = 0;
  6525     1782  1006               	bcf	6,0	;volatile
  6526     1783                     l2293:
  6527                           
  6528                           ;LCD.c: 57:     Lcd_Port(a);
  6529     1783  0823               	movf	Lcd_Cmd@a,w
  6530     1784  120A  158A  2385  160A  118A  	fcall	_Lcd_Port
  6531     1789                     l2295:
  6532                           
  6533                           ;LCD.c: 58:     PORTBbits.RB1 = 1;
  6534     1789  1283               	bcf	3,5	;RP0=0, select bank0
  6535     178A  1303               	bcf	3,6	;RP1=0, select bank0
  6536     178B  1486               	bsf	6,1	;volatile
  6537     178C                     l2297:
  6538                           
  6539                           ;LCD.c: 59:     _delay((unsigned long)((4)*(8000000/4000.0)));
  6540     178C  300B               	movlw	11
  6541     178D  1283               	bcf	3,5	;RP0=0, select bank0
  6542     178E  1303               	bcf	3,6	;RP1=0, select bank0
  6543     178F  00A2               	movwf	??_Lcd_Cmd+1
  6544     1790  3061               	movlw	97
  6545     1791  00A1               	movwf	??_Lcd_Cmd
  6546     1792                     u3387:
  6547     1792  0BA1               	decfsz	??_Lcd_Cmd,f
  6548     1793  2F92               	goto	u3387
  6549     1794  0BA2               	decfsz	??_Lcd_Cmd+1,f
  6550     1795  2F92               	goto	u3387
  6551     1796  2F97               	nop2
  6552     1797                     l2299:
  6553                           
  6554                           ;LCD.c: 60:     PORTBbits.RB1 = 0;
  6555     1797  1283               	bcf	3,5	;RP0=0, select bank0
  6556     1798  1303               	bcf	3,6	;RP1=0, select bank0
  6557     1799  1086               	bcf	6,1	;volatile
  6558     179A                     l338:
  6559     179A  0008               	return
  6560     179B                     __end_of_Lcd_Cmd:
  6561                           
  6562                           	psect	text37
  6563     0B85                     __ptext37:	
  6564 ;; *************** function _Lcd_Port *****************
  6565 ;; Defined at:
  6566 ;;		line 13 in file "LCD.c"
  6567 ;; Parameters:    Size  Location     Type
  6568 ;;  a               1    wreg     unsigned char 
  6569 ;; Auto vars:     Size  Location     Type
  6570 ;;  a               1    0[BANK0 ] unsigned char 
  6571 ;; Return value:  Size  Location     Type
  6572 ;;                  1    wreg      void 
  6573 ;; Registers used:
  6574 ;;		wreg
  6575 ;; Tracked objects:
  6576 ;;		On entry : 0/0
  6577 ;;		On exit  : 0/0
  6578 ;;		Unchanged: 0/0
  6579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6580 ;;      Params:         0       0       0       0       0
  6581 ;;      Locals:         0       1       0       0       0
  6582 ;;      Temps:          0       0       0       0       0
  6583 ;;      Totals:         0       1       0       0       0
  6584 ;;Total ram usage:        1 bytes
  6585 ;; Hardware stack levels used: 1
  6586 ;; Hardware stack levels required when called: 4
  6587 ;; This function calls:
  6588 ;;		Nothing
  6589 ;; This function is called by:
  6590 ;;		_Lcd_Cmd
  6591 ;;		_Lcd_Init
  6592 ;;		_Lcd_Write_Char
  6593 ;; This function uses a non-reentrant model
  6594 ;;
  6595                           
  6596     0B85                     _Lcd_Port:	
  6597                           ;psect for function _Lcd_Port
  6598                           
  6599                           
  6600                           ;incstack = 0
  6601                           ; Regs used in _Lcd_Port: [wreg]
  6602                           ;Lcd_Port@a stored from wreg
  6603     0B85  1283               	bcf	3,5	;RP0=0, select bank0
  6604     0B86  1303               	bcf	3,6	;RP1=0, select bank0
  6605     0B87  00A0               	movwf	Lcd_Port@a
  6606     0B88                     l2145:
  6607                           
  6608                           ;LCD.c: 14:     if (a & 1)
  6609     0B88  1C20               	btfss	Lcd_Port@a,0
  6610     0B89  2B8B               	goto	u1691
  6611     0B8A  2B8C               	goto	u1690
  6612     0B8B                     u1691:
  6613     0B8B  2B8E               	goto	l319
  6614     0B8C                     u1690:
  6615     0B8C                     l2147:
  6616                           
  6617                           ;LCD.c: 15:         PORTDbits.RD0 = 1;
  6618     0B8C  1408               	bsf	8,0	;volatile
  6619     0B8D  2B8F               	goto	l320
  6620     0B8E                     l319:	
  6621                           ;LCD.c: 16:     else
  6622                           
  6623                           
  6624                           ;LCD.c: 17:         PORTDbits.RD0 = 0;
  6625     0B8E  1008               	bcf	8,0	;volatile
  6626     0B8F                     l320:
  6627                           
  6628                           ;LCD.c: 19:     if (a & 2)
  6629     0B8F  1CA0               	btfss	Lcd_Port@a,1
  6630     0B90  2B92               	goto	u1701
  6631     0B91  2B93               	goto	u1700
  6632     0B92                     u1701:
  6633     0B92  2B95               	goto	l321
  6634     0B93                     u1700:
  6635     0B93                     l2149:
  6636                           
  6637                           ;LCD.c: 20:         PORTDbits.RD1 = 1;
  6638     0B93  1488               	bsf	8,1	;volatile
  6639     0B94  2B96               	goto	l322
  6640     0B95                     l321:	
  6641                           ;LCD.c: 21:     else
  6642                           
  6643                           
  6644                           ;LCD.c: 22:         PORTDbits.RD1 = 0;
  6645     0B95  1088               	bcf	8,1	;volatile
  6646     0B96                     l322:
  6647                           
  6648                           ;LCD.c: 24:     if (a & 4)
  6649     0B96  1D20               	btfss	Lcd_Port@a,2
  6650     0B97  2B99               	goto	u1711
  6651     0B98  2B9A               	goto	u1710
  6652     0B99                     u1711:
  6653     0B99  2B9C               	goto	l323
  6654     0B9A                     u1710:
  6655     0B9A                     l2151:
  6656                           
  6657                           ;LCD.c: 25:         PORTDbits.RD2 = 1;
  6658     0B9A  1508               	bsf	8,2	;volatile
  6659     0B9B  2B9D               	goto	l324
  6660     0B9C                     l323:	
  6661                           ;LCD.c: 26:     else
  6662                           
  6663                           
  6664                           ;LCD.c: 27:         PORTDbits.RD2 = 0;
  6665     0B9C  1108               	bcf	8,2	;volatile
  6666     0B9D                     l324:
  6667                           
  6668                           ;LCD.c: 29:     if (a & 8)
  6669     0B9D  1DA0               	btfss	Lcd_Port@a,3
  6670     0B9E  2BA0               	goto	u1721
  6671     0B9F  2BA1               	goto	u1720
  6672     0BA0                     u1721:
  6673     0BA0  2BA3               	goto	l325
  6674     0BA1                     u1720:
  6675     0BA1                     l2153:
  6676                           
  6677                           ;LCD.c: 30:         PORTDbits.RD3 = 1;
  6678     0BA1  1588               	bsf	8,3	;volatile
  6679     0BA2  2BA4               	goto	l326
  6680     0BA3                     l325:	
  6681                           ;LCD.c: 31:     else
  6682                           
  6683                           
  6684                           ;LCD.c: 32:         PORTDbits.RD3 = 0;
  6685     0BA3  1188               	bcf	8,3	;volatile
  6686     0BA4                     l326:
  6687                           
  6688                           ;LCD.c: 34:     if (a & 16)
  6689     0BA4  1E20               	btfss	Lcd_Port@a,4
  6690     0BA5  2BA7               	goto	u1731
  6691     0BA6  2BA8               	goto	u1730
  6692     0BA7                     u1731:
  6693     0BA7  2BAA               	goto	l327
  6694     0BA8                     u1730:
  6695     0BA8                     l2155:
  6696                           
  6697                           ;LCD.c: 35:         PORTDbits.RD4 = 1;
  6698     0BA8  1608               	bsf	8,4	;volatile
  6699     0BA9  2BAB               	goto	l328
  6700     0BAA                     l327:	
  6701                           ;LCD.c: 36:     else
  6702                           
  6703                           
  6704                           ;LCD.c: 37:         PORTDbits.RD4 = 0;
  6705     0BAA  1208               	bcf	8,4	;volatile
  6706     0BAB                     l328:
  6707                           
  6708                           ;LCD.c: 39:     if (a & 32)
  6709     0BAB  1EA0               	btfss	Lcd_Port@a,5
  6710     0BAC  2BAE               	goto	u1741
  6711     0BAD  2BAF               	goto	u1740
  6712     0BAE                     u1741:
  6713     0BAE  2BB1               	goto	l329
  6714     0BAF                     u1740:
  6715     0BAF                     l2157:
  6716                           
  6717                           ;LCD.c: 40:         PORTDbits.RD5 = 1;
  6718     0BAF  1688               	bsf	8,5	;volatile
  6719     0BB0  2BB2               	goto	l330
  6720     0BB1                     l329:	
  6721                           ;LCD.c: 41:     else
  6722                           
  6723                           
  6724                           ;LCD.c: 42:         PORTDbits.RD5 = 0;
  6725     0BB1  1288               	bcf	8,5	;volatile
  6726     0BB2                     l330:
  6727                           
  6728                           ;LCD.c: 44:     if (a & 64)
  6729     0BB2  1F20               	btfss	Lcd_Port@a,6
  6730     0BB3  2BB5               	goto	u1751
  6731     0BB4  2BB6               	goto	u1750
  6732     0BB5                     u1751:
  6733     0BB5  2BB8               	goto	l331
  6734     0BB6                     u1750:
  6735     0BB6                     l2159:
  6736                           
  6737                           ;LCD.c: 45:         PORTDbits.RD6 = 1;
  6738     0BB6  1708               	bsf	8,6	;volatile
  6739     0BB7  2BB9               	goto	l332
  6740     0BB8                     l331:	
  6741                           ;LCD.c: 46:     else
  6742                           
  6743                           
  6744                           ;LCD.c: 47:         PORTDbits.RD6 = 0;
  6745     0BB8  1308               	bcf	8,6	;volatile
  6746     0BB9                     l332:
  6747                           
  6748                           ;LCD.c: 49:     if (a & 128)
  6749     0BB9  1FA0               	btfss	Lcd_Port@a,7
  6750     0BBA  2BBC               	goto	u1761
  6751     0BBB  2BBD               	goto	u1760
  6752     0BBC                     u1761:
  6753     0BBC  2BBF               	goto	l333
  6754     0BBD                     u1760:
  6755     0BBD                     l2161:
  6756                           
  6757                           ;LCD.c: 50:         PORTDbits.RD7 = 1;
  6758     0BBD  1788               	bsf	8,7	;volatile
  6759     0BBE  2BC0               	goto	l335
  6760     0BBF                     l333:	
  6761                           ;LCD.c: 51:     else
  6762                           
  6763                           
  6764                           ;LCD.c: 52:         PORTDbits.RD7 = 0;
  6765     0BBF  1388               	bcf	8,7	;volatile
  6766     0BC0                     l335:
  6767     0BC0  0008               	return
  6768     0BC1                     __end_of_Lcd_Port:
  6769                           
  6770                           	psect	text38
  6771     03C5                     __ptext38:	
  6772 ;; *************** function _isr *****************
  6773 ;; Defined at:
  6774 ;;		line 170 in file "main.c"
  6775 ;; Parameters:    Size  Location     Type
  6776 ;;		None
  6777 ;; Auto vars:     Size  Location     Type
  6778 ;;		None
  6779 ;; Return value:  Size  Location     Type
  6780 ;;                  1    wreg      void 
  6781 ;; Registers used:
  6782 ;;		wreg, status,2, status,0, pclath, cstack
  6783 ;; Tracked objects:
  6784 ;;		On entry : 0/0
  6785 ;;		On exit  : 0/0
  6786 ;;		Unchanged: 0/0
  6787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6788 ;;      Params:         0       0       0       0       0
  6789 ;;      Locals:         0       0       0       0       0
  6790 ;;      Temps:          4       0       0       0       0
  6791 ;;      Totals:         4       0       0       0       0
  6792 ;;Total ram usage:        4 bytes
  6793 ;; Hardware stack levels used: 1
  6794 ;; Hardware stack levels required when called: 3
  6795 ;; This function calls:
  6796 ;;		i1_Set_day
  6797 ;;		i1_Set_hour
  6798 ;;		i1_Set_min
  6799 ;;		i1_Set_month
  6800 ;;		i1_Set_sec
  6801 ;;		i1_Set_year
  6802 ;; This function is called by:
  6803 ;;		Interrupt level 1
  6804 ;; This function uses a non-reentrant model
  6805 ;;
  6806                           
  6807     03C5                     _isr:	
  6808                           ;psect for function _isr
  6809                           
  6810     03C5                     i1l2825:
  6811                           
  6812                           ;main.c: 171:     if (INTCONbits.RBIF == 1){
  6813     03C5  1C0B               	btfss	11,0	;volatile
  6814     03C6  2BC8               	goto	u269_21
  6815     03C7  2BC9               	goto	u269_20
  6816     03C8                     u269_21:
  6817     03C8  2E7F               	goto	i1l214
  6818     03C9                     u269_20:
  6819     03C9                     i1l2827:
  6820                           
  6821                           ;main.c: 172:         INTCONbits.RBIF = 0;
  6822     03C9  100B               	bcf	11,0	;volatile
  6823                           
  6824                           ;main.c: 173:         if (PORTBbits.RB5 == 0){
  6825     03CA  1283               	bcf	3,5	;RP0=0, select bank0
  6826     03CB  1303               	bcf	3,6	;RP1=0, select bank0
  6827     03CC  1A86               	btfsc	6,5	;volatile
  6828     03CD  2BCF               	goto	u270_21
  6829     03CE  2BD0               	goto	u270_20
  6830     03CF                     u270_21:
  6831     03CF  2BDB               	goto	i1l2833
  6832     03D0                     u270_20:
  6833     03D0                     i1l2829:
  6834                           
  6835                           ;main.c: 174:             _delay((unsigned long)((2)*(8000000/4000.0)));
  6836     03D0  3006               	movlw	6
  6837     03D1  00F8               	movwf	??_isr+1
  6838     03D2  3030               	movlw	48
  6839     03D3  00F7               	movwf	??_isr
  6840     03D4                     u339_27:
  6841     03D4  0BF7               	decfsz	??_isr,f
  6842     03D5  2BD4               	goto	u339_27
  6843     03D6  0BF8               	decfsz	??_isr+1,f
  6844     03D7  2BD4               	goto	u339_27
  6845     03D8  0000               	nop
  6846     03D9                     i1l2831:
  6847                           
  6848                           ;main.c: 175:             bandera = 1;
  6849     03D9  01FB               	clrf	_bandera
  6850     03DA  0AFB               	incf	_bandera,f
  6851     03DB                     i1l2833:
  6852                           
  6853                           ;main.c: 177:         if (PORTBbits.RB5 == 1 && bandera == 1){
  6854     03DB  1283               	bcf	3,5	;RP0=0, select bank0
  6855     03DC  1303               	bcf	3,6	;RP1=0, select bank0
  6856     03DD  1E86               	btfss	6,5	;volatile
  6857     03DE  2BE0               	goto	u271_21
  6858     03DF  2BE1               	goto	u271_20
  6859     03E0                     u271_21:
  6860     03E0  2C24               	goto	i1l2877
  6861     03E1                     u271_20:
  6862     03E1                     i1l2835:
  6863     03E1  037B               	decf	_bandera,w
  6864     03E2  1D03               	btfss	3,2
  6865     03E3  2BE5               	goto	u272_21
  6866     03E4  2BE6               	goto	u272_20
  6867     03E5                     u272_21:
  6868     03E5  2C24               	goto	i1l2877
  6869     03E6                     u272_20:
  6870     03E6                     i1l2837:
  6871                           
  6872                           ;main.c: 178:             if (selector == 0){
  6873     03E6  0850               	movf	_selector,w
  6874     03E7  1D03               	btfss	3,2
  6875     03E8  2BEA               	goto	u273_21
  6876     03E9  2BEB               	goto	u273_20
  6877     03EA                     u273_21:
  6878     03EA  2BEF               	goto	i1l2843
  6879     03EB                     u273_20:
  6880     03EB                     i1l2839:
  6881                           
  6882                           ;main.c: 179:                 selector = 1;
  6883     03EB  01D0               	clrf	_selector
  6884     03EC  0AD0               	incf	_selector,f
  6885     03ED                     i1l2841:
  6886                           
  6887                           ;main.c: 180:                 bandera = 0;
  6888     03ED  01FB               	clrf	_bandera
  6889                           
  6890                           ;main.c: 181:             }
  6891     03EE  2C24               	goto	i1l2877
  6892     03EF                     i1l2843:
  6893     03EF  0350               	decf	_selector,w
  6894     03F0  1D03               	btfss	3,2
  6895     03F1  2BF3               	goto	u274_21
  6896     03F2  2BF4               	goto	u274_20
  6897     03F3                     u274_21:
  6898     03F3  2BF7               	goto	i1l2849
  6899     03F4                     u274_20:
  6900     03F4                     i1l2845:
  6901                           
  6902                           ;main.c: 183:                 selector = 2;
  6903     03F4  3002               	movlw	2
  6904     03F5  00D0               	movwf	_selector
  6905     03F6  2BED               	goto	i1l2841
  6906     03F7                     i1l2849:
  6907     03F7  3002               	movlw	2
  6908     03F8  0650               	xorwf	_selector,w
  6909     03F9  1D03               	btfss	3,2
  6910     03FA  2BFC               	goto	u275_21
  6911     03FB  2BFD               	goto	u275_20
  6912     03FC                     u275_21:
  6913     03FC  2C00               	goto	i1l2855
  6914     03FD                     u275_20:
  6915     03FD                     i1l2851:
  6916                           
  6917                           ;main.c: 187:                 selector = 3;
  6918     03FD  3003               	movlw	3
  6919     03FE  00D0               	movwf	_selector
  6920     03FF  2BED               	goto	i1l2841
  6921     0400                     i1l2855:
  6922     0400  3003               	movlw	3
  6923     0401  0650               	xorwf	_selector,w
  6924     0402  1D03               	btfss	3,2
  6925     0403  2C05               	goto	u276_21
  6926     0404  2C06               	goto	u276_20
  6927     0405                     u276_21:
  6928     0405  2C09               	goto	i1l2861
  6929     0406                     u276_20:
  6930     0406                     i1l2857:
  6931                           
  6932                           ;main.c: 191:                 selector = 4;
  6933     0406  3004               	movlw	4
  6934     0407  00D0               	movwf	_selector
  6935     0408  2BED               	goto	i1l2841
  6936     0409                     i1l2861:
  6937     0409  3004               	movlw	4
  6938     040A  0650               	xorwf	_selector,w
  6939     040B  1D03               	btfss	3,2
  6940     040C  2C0E               	goto	u277_21
  6941     040D  2C0F               	goto	u277_20
  6942     040E                     u277_21:
  6943     040E  2C12               	goto	i1l2867
  6944     040F                     u277_20:
  6945     040F                     i1l2863:
  6946                           
  6947                           ;main.c: 195:                 selector = 5;
  6948     040F  3005               	movlw	5
  6949     0410  00D0               	movwf	_selector
  6950     0411  2BED               	goto	i1l2841
  6951     0412                     i1l2867:
  6952     0412  3005               	movlw	5
  6953     0413  0650               	xorwf	_selector,w
  6954     0414  1D03               	btfss	3,2
  6955     0415  2C17               	goto	u278_21
  6956     0416  2C18               	goto	u278_20
  6957     0417                     u278_21:
  6958     0417  2C1B               	goto	i1l2873
  6959     0418                     u278_20:
  6960     0418                     i1l2869:
  6961                           
  6962                           ;main.c: 199:                 selector = 6;
  6963     0418  3006               	movlw	6
  6964     0419  00D0               	movwf	_selector
  6965     041A  2BED               	goto	i1l2841
  6966     041B                     i1l2873:
  6967     041B  3006               	movlw	6
  6968     041C  0650               	xorwf	_selector,w
  6969     041D  1D03               	btfss	3,2
  6970     041E  2C20               	goto	u279_21
  6971     041F  2C21               	goto	u279_20
  6972     0420                     u279_21:
  6973     0420  2C24               	goto	i1l139
  6974     0421                     u279_20:
  6975     0421                     i1l2875:
  6976                           
  6977                           ;main.c: 203:                 selector = 0;
  6978     0421  01D0               	clrf	_selector
  6979                           
  6980                           ;main.c: 204:                 bandera = 0;
  6981     0422  01FB               	clrf	_bandera
  6982     0423  2C24               	goto	i1l2877
  6983     0424                     i1l139:
  6984     0424                     i1l2877:
  6985                           
  6986                           ;main.c: 207:         if (PORTBbits.RB7 == 0){
  6987     0424  1B86               	btfsc	6,7	;volatile
  6988     0425  2C27               	goto	u280_21
  6989     0426  2C28               	goto	u280_20
  6990     0427                     u280_21:
  6991     0427  2C33               	goto	i1l2881
  6992     0428                     u280_20:
  6993     0428                     i1l2879:
  6994                           
  6995                           ;main.c: 208:             bandera = 2;
  6996     0428  3002               	movlw	2
  6997     0429  00FB               	movwf	_bandera
  6998                           
  6999                           ;main.c: 209:             _delay((unsigned long)((1)*(8000000/4000.0)));
  7000     042A  3003               	movlw	3
  7001     042B  00F8               	movwf	??_isr+1
  7002     042C  3097               	movlw	151
  7003     042D  00F7               	movwf	??_isr
  7004     042E                     u340_27:
  7005     042E  0BF7               	decfsz	??_isr,f
  7006     042F  2C2E               	goto	u340_27
  7007     0430  0BF8               	decfsz	??_isr+1,f
  7008     0431  2C2E               	goto	u340_27
  7009     0432  2C33               	nop2
  7010     0433                     i1l2881:
  7011                           
  7012                           ;main.c: 211:         if (PORTBbits.RB7 == 1 && bandera == 2){
  7013     0433  1283               	bcf	3,5	;RP0=0, select bank0
  7014     0434  1303               	bcf	3,6	;RP1=0, select bank0
  7015     0435  1F86               	btfss	6,7	;volatile
  7016     0436  2C38               	goto	u281_21
  7017     0437  2C39               	goto	u281_20
  7018     0438                     u281_21:
  7019     0438  2DB8               	goto	i1l3033
  7020     0439                     u281_20:
  7021     0439                     i1l2883:
  7022     0439  3002               	movlw	2
  7023     043A  067B               	xorwf	_bandera,w
  7024     043B  1D03               	btfss	3,2
  7025     043C  2C3E               	goto	u282_21
  7026     043D  2C3F               	goto	u282_20
  7027     043E                     u282_21:
  7028     043E  2DB8               	goto	i1l3033
  7029     043F                     u282_20:
  7030     043F                     i1l2885:
  7031                           
  7032                           ;main.c: 212:             if (selector == 1){
  7033     043F  0350               	decf	_selector,w
  7034     0440  1D03               	btfss	3,2
  7035     0441  2C43               	goto	u283_21
  7036     0442  2C44               	goto	u283_20
  7037     0443                     u283_21:
  7038     0443  2CDA               	goto	i1l2943
  7039     0444                     u283_20:
  7040     0444                     i1l2887:
  7041                           
  7042                           ;main.c: 213:                 if (mes == 1 || mes == 3 || mes == 5 || mes == 7 || mes ==
      +                           8 || mes == 10 || mes == 12){
  7043     0444  0366               	decf	_mes,w
  7044     0445  1903               	btfsc	3,2
  7045     0446  2C48               	goto	u284_21
  7046     0447  2C49               	goto	u284_20
  7047     0448                     u284_21:
  7048     0448  2C6D               	goto	i1l2901
  7049     0449                     u284_20:
  7050     0449                     i1l2889:
  7051     0449  3003               	movlw	3
  7052     044A  0666               	xorwf	_mes,w
  7053     044B  1903               	btfsc	3,2
  7054     044C  2C4E               	goto	u285_21
  7055     044D  2C4F               	goto	u285_20
  7056     044E                     u285_21:
  7057     044E  2C6D               	goto	i1l2901
  7058     044F                     u285_20:
  7059     044F                     i1l2891:
  7060     044F  3005               	movlw	5
  7061     0450  0666               	xorwf	_mes,w
  7062     0451  1903               	btfsc	3,2
  7063     0452  2C54               	goto	u286_21
  7064     0453  2C55               	goto	u286_20
  7065     0454                     u286_21:
  7066     0454  2C6D               	goto	i1l2901
  7067     0455                     u286_20:
  7068     0455                     i1l2893:
  7069     0455  3007               	movlw	7
  7070     0456  0666               	xorwf	_mes,w
  7071     0457  1903               	btfsc	3,2
  7072     0458  2C5A               	goto	u287_21
  7073     0459  2C5B               	goto	u287_20
  7074     045A                     u287_21:
  7075     045A  2C6D               	goto	i1l2901
  7076     045B                     u287_20:
  7077     045B                     i1l2895:
  7078     045B  3008               	movlw	8
  7079     045C  0666               	xorwf	_mes,w
  7080     045D  1903               	btfsc	3,2
  7081     045E  2C60               	goto	u288_21
  7082     045F  2C61               	goto	u288_20
  7083     0460                     u288_21:
  7084     0460  2C6D               	goto	i1l2901
  7085     0461                     u288_20:
  7086     0461                     i1l2897:
  7087     0461  300A               	movlw	10
  7088     0462  0666               	xorwf	_mes,w
  7089     0463  1903               	btfsc	3,2
  7090     0464  2C66               	goto	u289_21
  7091     0465  2C67               	goto	u289_20
  7092     0466                     u289_21:
  7093     0466  2C6D               	goto	i1l2901
  7094     0467                     u289_20:
  7095     0467                     i1l2899:
  7096     0467  300C               	movlw	12
  7097     0468  0666               	xorwf	_mes,w
  7098     0469  1D03               	btfss	3,2
  7099     046A  2C6C               	goto	u290_21
  7100     046B  2C6D               	goto	u290_20
  7101     046C                     u290_21:
  7102     046C  2C87               	goto	i1l2911
  7103     046D                     u290_20:
  7104     046D                     i1l2901:
  7105                           
  7106                           ;main.c: 214:                     if (dia == 31){
  7107     046D  301F               	movlw	31
  7108     046E  0667               	xorwf	_dia,w
  7109     046F  1D03               	btfss	3,2
  7110     0470  2C72               	goto	u291_21
  7111     0471  2C73               	goto	u291_20
  7112     0472                     u291_21:
  7113     0472  2C7C               	goto	i1l2907
  7114     0473                     u291_20:
  7115     0473                     i1l2903:
  7116                           
  7117                           ;main.c: 215:                         dia = 31;
  7118     0473  301F               	movlw	31
  7119     0474  00E7               	movwf	_dia
  7120     0475                     i1l2905:
  7121                           
  7122                           ;main.c: 216:                         Set_day(dia);
  7123     0475  0867               	movf	_dia,w
  7124     0476  120A  158A  2038  120A  118A  	fcall	i1_Set_day
  7125                           
  7126                           ;main.c: 217:                     }
  7127     047B  2CD8               	goto	i1l2941
  7128     047C                     i1l2907:
  7129                           
  7130                           ;main.c: 219:                         dia++;
  7131     047C  3001               	movlw	1
  7132     047D  00F7               	movwf	??_isr
  7133     047E  0877               	movf	??_isr,w
  7134     047F  07E7               	addwf	_dia,f
  7135     0480                     i1l2909:
  7136                           
  7137                           ;main.c: 220:                         Set_day(dia);
  7138     0480  0867               	movf	_dia,w
  7139     0481  120A  158A  2038  120A  118A  	fcall	i1_Set_day
  7140     0486  2CD8               	goto	i1l2941
  7141     0487                     i1l2911:
  7142     0487  3004               	movlw	4
  7143     0488  0666               	xorwf	_mes,w
  7144     0489  1903               	btfsc	3,2
  7145     048A  2C8C               	goto	u292_21
  7146     048B  2C8D               	goto	u292_20
  7147     048C                     u292_21:
  7148     048C  2C9F               	goto	i1l2919
  7149     048D                     u292_20:
  7150     048D                     i1l2913:
  7151     048D  3006               	movlw	6
  7152     048E  0666               	xorwf	_mes,w
  7153     048F  1903               	btfsc	3,2
  7154     0490  2C92               	goto	u293_21
  7155     0491  2C93               	goto	u293_20
  7156     0492                     u293_21:
  7157     0492  2C9F               	goto	i1l2919
  7158     0493                     u293_20:
  7159     0493                     i1l2915:
  7160     0493  3009               	movlw	9
  7161     0494  0666               	xorwf	_mes,w
  7162     0495  1903               	btfsc	3,2
  7163     0496  2C98               	goto	u294_21
  7164     0497  2C99               	goto	u294_20
  7165     0498                     u294_21:
  7166     0498  2C9F               	goto	i1l2919
  7167     0499                     u294_20:
  7168     0499                     i1l2917:
  7169     0499  300B               	movlw	11
  7170     049A  0666               	xorwf	_mes,w
  7171     049B  1D03               	btfss	3,2
  7172     049C  2C9E               	goto	u295_21
  7173     049D  2C9F               	goto	u295_20
  7174     049E                     u295_21:
  7175     049E  2CB9               	goto	i1l2929
  7176     049F                     u295_20:
  7177     049F                     i1l2919:
  7178                           
  7179                           ;main.c: 224:                     if (dia == 30){
  7180     049F  301E               	movlw	30
  7181     04A0  0667               	xorwf	_dia,w
  7182     04A1  1D03               	btfss	3,2
  7183     04A2  2CA4               	goto	u296_21
  7184     04A3  2CA5               	goto	u296_20
  7185     04A4                     u296_21:
  7186     04A4  2CAE               	goto	i1l2925
  7187     04A5                     u296_20:
  7188     04A5                     i1l2921:
  7189                           
  7190                           ;main.c: 225:                         dia = 30;
  7191     04A5  301E               	movlw	30
  7192     04A6  00E7               	movwf	_dia
  7193     04A7                     i1l2923:
  7194                           
  7195                           ;main.c: 226:                         Set_day(dia);
  7196     04A7  0867               	movf	_dia,w
  7197     04A8  120A  158A  2038  120A  118A  	fcall	i1_Set_day
  7198                           
  7199                           ;main.c: 227:                     }
  7200     04AD  2CD8               	goto	i1l2941
  7201     04AE                     i1l2925:
  7202                           
  7203                           ;main.c: 229:                         dia++;
  7204     04AE  3001               	movlw	1
  7205     04AF  00F7               	movwf	??_isr
  7206     04B0  0877               	movf	??_isr,w
  7207     04B1  07E7               	addwf	_dia,f
  7208     04B2                     i1l2927:
  7209                           
  7210                           ;main.c: 230:                         Set_day(dia);
  7211     04B2  0867               	movf	_dia,w
  7212     04B3  120A  158A  2038  120A  118A  	fcall	i1_Set_day
  7213     04B8  2CD8               	goto	i1l2941
  7214     04B9                     i1l2929:
  7215     04B9  3002               	movlw	2
  7216     04BA  0666               	xorwf	_mes,w
  7217     04BB  1D03               	btfss	3,2
  7218     04BC  2CBE               	goto	u297_21
  7219     04BD  2CBF               	goto	u297_20
  7220     04BE                     u297_21:
  7221     04BE  2CD8               	goto	i1l2941
  7222     04BF                     u297_20:
  7223     04BF                     i1l2931:
  7224                           
  7225                           ;main.c: 234:                     if (dia == 28){
  7226     04BF  301C               	movlw	28
  7227     04C0  0667               	xorwf	_dia,w
  7228     04C1  1D03               	btfss	3,2
  7229     04C2  2CC4               	goto	u298_21
  7230     04C3  2CC5               	goto	u298_20
  7231     04C4                     u298_21:
  7232     04C4  2CCE               	goto	i1l2937
  7233     04C5                     u298_20:
  7234     04C5                     i1l2933:
  7235                           
  7236                           ;main.c: 235:                         dia = 28;
  7237     04C5  301C               	movlw	28
  7238     04C6  00E7               	movwf	_dia
  7239     04C7                     i1l2935:
  7240                           
  7241                           ;main.c: 236:                         Set_day(dia);
  7242     04C7  0867               	movf	_dia,w
  7243     04C8  120A  158A  2038  120A  118A  	fcall	i1_Set_day
  7244                           
  7245                           ;main.c: 237:                     }
  7246     04CD  2CD8               	goto	i1l2941
  7247     04CE                     i1l2937:
  7248                           
  7249                           ;main.c: 239:                         dia++;
  7250     04CE  3001               	movlw	1
  7251     04CF  00F7               	movwf	??_isr
  7252     04D0  0877               	movf	??_isr,w
  7253     04D1  07E7               	addwf	_dia,f
  7254     04D2                     i1l2939:
  7255                           
  7256                           ;main.c: 240:                         Set_day(dia);
  7257     04D2  0867               	movf	_dia,w
  7258     04D3  120A  158A  2038  120A  118A  	fcall	i1_Set_day
  7259     04D8                     i1l2941:
  7260                           
  7261                           ;main.c: 243:                 bandera = 0;
  7262     04D8  01FB               	clrf	_bandera
  7263                           
  7264                           ;main.c: 244:             }
  7265     04D9  2DB8               	goto	i1l3033
  7266     04DA                     i1l2943:
  7267     04DA  3002               	movlw	2
  7268     04DB  0650               	xorwf	_selector,w
  7269     04DC  1D03               	btfss	3,2
  7270     04DD  2CDF               	goto	u299_21
  7271     04DE  2CE0               	goto	u299_20
  7272     04DF                     u299_21:
  7273     04DF  2D38               	goto	i1l2977
  7274     04E0                     u299_20:
  7275     04E0                     i1l2945:
  7276                           
  7277                           ;main.c: 246:                 if (mes == 12){
  7278     04E0  300C               	movlw	12
  7279     04E1  0666               	xorwf	_mes,w
  7280     04E2  1D03               	btfss	3,2
  7281     04E3  2CE5               	goto	u300_21
  7282     04E4  2CE6               	goto	u300_20
  7283     04E5                     u300_21:
  7284     04E5  2CEF               	goto	i1l2951
  7285     04E6                     u300_20:
  7286     04E6                     i1l2947:
  7287                           
  7288                           ;main.c: 247:                     mes = 12;
  7289     04E6  300C               	movlw	12
  7290     04E7  00E6               	movwf	_mes
  7291     04E8                     i1l2949:
  7292                           
  7293                           ;main.c: 248:                     Set_month(mes);
  7294     04E8  0866               	movf	_mes,w
  7295     04E9  120A  158A  20C5  120A  118A  	fcall	i1_Set_month
  7296                           
  7297                           ;main.c: 249:                 }
  7298     04EE  2CD8               	goto	i1l2941
  7299     04EF                     i1l2951:
  7300                           
  7301                           ;main.c: 251:                     mes++;
  7302     04EF  3001               	movlw	1
  7303     04F0  00F7               	movwf	??_isr
  7304     04F1  0877               	movf	??_isr,w
  7305     04F2  07E6               	addwf	_mes,f
  7306     04F3                     i1l2953:
  7307                           
  7308                           ;main.c: 252:                     Set_month(mes);
  7309     04F3  0866               	movf	_mes,w
  7310     04F4  120A  158A  20C5  120A  118A  	fcall	i1_Set_month
  7311     04F9                     i1l2955:
  7312                           
  7313                           ;main.c: 253:                     if ((mes == 4 || mes == 6 || mes == 9 || mes == 11) &&
      +                           (dia >> 30)){
  7314     04F9  3004               	movlw	4
  7315     04FA  1283               	bcf	3,5	;RP0=0, select bank0
  7316     04FB  1303               	bcf	3,6	;RP1=0, select bank0
  7317     04FC  0666               	xorwf	_mes,w
  7318     04FD  1903               	btfsc	3,2
  7319     04FE  2D00               	goto	u301_21
  7320     04FF  2D01               	goto	u301_20
  7321     0500                     u301_21:
  7322     0500  2D13               	goto	i1l2963
  7323     0501                     u301_20:
  7324     0501                     i1l2957:
  7325     0501  3006               	movlw	6
  7326     0502  0666               	xorwf	_mes,w
  7327     0503  1903               	btfsc	3,2
  7328     0504  2D06               	goto	u302_21
  7329     0505  2D07               	goto	u302_20
  7330     0506                     u302_21:
  7331     0506  2D13               	goto	i1l2963
  7332     0507                     u302_20:
  7333     0507                     i1l2959:
  7334     0507  3009               	movlw	9
  7335     0508  0666               	xorwf	_mes,w
  7336     0509  1903               	btfsc	3,2
  7337     050A  2D0C               	goto	u303_21
  7338     050B  2D0D               	goto	u303_20
  7339     050C                     u303_21:
  7340     050C  2D13               	goto	i1l2963
  7341     050D                     u303_20:
  7342     050D                     i1l2961:
  7343     050D  300B               	movlw	11
  7344     050E  0666               	xorwf	_mes,w
  7345     050F  1D03               	btfss	3,2
  7346     0510  2D12               	goto	u304_21
  7347     0511  2D13               	goto	u304_20
  7348     0512                     u304_21:
  7349     0512  2D1F               	goto	i1l2967
  7350     0513                     u304_20:
  7351     0513                     i1l2963:
  7352     0513  0867               	movf	_dia,w
  7353     0514  1903               	btfsc	3,2
  7354     0515  2D17               	goto	u305_21
  7355     0516  2D18               	goto	u305_20
  7356     0517                     u305_21:
  7357     0517  2D1F               	goto	i1l2967
  7358     0518                     u305_20:
  7359     0518                     i1l2965:
  7360                           
  7361                           ;main.c: 254:                         Set_day(30);
  7362     0518  301E               	movlw	30
  7363     0519  120A  158A  2038  120A  118A  	fcall	i1_Set_day
  7364                           
  7365                           ;main.c: 255:                     }
  7366     051E  2CD8               	goto	i1l2941
  7367     051F                     i1l2967:
  7368     051F  3002               	movlw	2
  7369     0520  0666               	xorwf	_mes,w
  7370     0521  1D03               	btfss	3,2
  7371     0522  2D24               	goto	u306_21
  7372     0523  2D25               	goto	u306_20
  7373     0524                     u306_21:
  7374     0524  2D31               	goto	i1l2973
  7375     0525                     u306_20:
  7376     0525                     i1l2969:
  7377     0525  0867               	movf	_dia,w
  7378     0526  1903               	btfsc	3,2
  7379     0527  2D29               	goto	u307_21
  7380     0528  2D2A               	goto	u307_20
  7381     0529                     u307_21:
  7382     0529  2D31               	goto	i1l2973
  7383     052A                     u307_20:
  7384     052A                     i1l2971:
  7385                           
  7386                           ;main.c: 257:                         Set_day(28);
  7387     052A  301C               	movlw	28
  7388     052B  120A  158A  2038  120A  118A  	fcall	i1_Set_day
  7389                           
  7390                           ;main.c: 258:                     }
  7391     0530  2CD8               	goto	i1l2941
  7392     0531                     i1l2973:
  7393                           
  7394                           ;main.c: 260:                         Set_day(dia);
  7395     0531  0867               	movf	_dia,w
  7396     0532  120A  158A  2038  120A  118A  	fcall	i1_Set_day
  7397     0537  2CD8               	goto	i1l2941
  7398     0538                     i1l2977:
  7399     0538  3003               	movlw	3
  7400     0539  0650               	xorwf	_selector,w
  7401     053A  1D03               	btfss	3,2
  7402     053B  2D3D               	goto	u308_21
  7403     053C  2D3E               	goto	u308_20
  7404     053D                     u308_21:
  7405     053D  2D58               	goto	i1l2991
  7406     053E                     u308_20:
  7407     053E                     i1l2979:
  7408                           
  7409                           ;main.c: 266:                 if (ano == 99){
  7410     053E  3063               	movlw	99
  7411     053F  0665               	xorwf	_ano,w
  7412     0540  1D03               	btfss	3,2
  7413     0541  2D43               	goto	u309_21
  7414     0542  2D44               	goto	u309_20
  7415     0543                     u309_21:
  7416     0543  2D4D               	goto	i1l2985
  7417     0544                     u309_20:
  7418     0544                     i1l2981:
  7419                           
  7420                           ;main.c: 267:                     ano = 99;
  7421     0544  3063               	movlw	99
  7422     0545  00E5               	movwf	_ano
  7423     0546                     i1l2983:
  7424                           
  7425                           ;main.c: 268:                     Set_year(ano);
  7426     0546  0865               	movf	_ano,w
  7427     0547  120A  158A  20F4  120A  118A  	fcall	i1_Set_year
  7428                           
  7429                           ;main.c: 269:                 }
  7430     054C  2CD8               	goto	i1l2941
  7431     054D                     i1l2985:
  7432                           
  7433                           ;main.c: 271:                     ano++;
  7434     054D  3001               	movlw	1
  7435     054E  00F7               	movwf	??_isr
  7436     054F  0877               	movf	??_isr,w
  7437     0550  07E5               	addwf	_ano,f
  7438     0551                     i1l2987:
  7439                           
  7440                           ;main.c: 272:                     Set_year(ano);
  7441     0551  0865               	movf	_ano,w
  7442     0552  120A  158A  20F4  120A  118A  	fcall	i1_Set_year
  7443     0557  2CD8               	goto	i1l2941
  7444     0558                     i1l2991:
  7445     0558  3004               	movlw	4
  7446     0559  0650               	xorwf	_selector,w
  7447     055A  1D03               	btfss	3,2
  7448     055B  2D5D               	goto	u310_21
  7449     055C  2D5E               	goto	u310_20
  7450     055D                     u310_21:
  7451     055D  2D78               	goto	i1l3005
  7452     055E                     u310_20:
  7453     055E                     i1l2993:
  7454                           
  7455                           ;main.c: 277:                 if (hora == 23){
  7456     055E  3017               	movlw	23
  7457     055F  0668               	xorwf	_hora,w
  7458     0560  1D03               	btfss	3,2
  7459     0561  2D63               	goto	u311_21
  7460     0562  2D64               	goto	u311_20
  7461     0563                     u311_21:
  7462     0563  2D6D               	goto	i1l2999
  7463     0564                     u311_20:
  7464     0564                     i1l2995:
  7465                           
  7466                           ;main.c: 278:                     hora = 23;
  7467     0564  3017               	movlw	23
  7468     0565  00E8               	movwf	_hora
  7469     0566                     i1l2997:
  7470                           
  7471                           ;main.c: 279:                     Set_hour(hora);
  7472     0566  0868               	movf	_hora,w
  7473     0567  120A  158A  2067  120A  118A  	fcall	i1_Set_hour
  7474                           
  7475                           ;main.c: 280:                 }
  7476     056C  2CD8               	goto	i1l2941
  7477     056D                     i1l2999:
  7478                           
  7479                           ;main.c: 282:                     hora++;
  7480     056D  3001               	movlw	1
  7481     056E  00F7               	movwf	??_isr
  7482     056F  0877               	movf	??_isr,w
  7483     0570  07E8               	addwf	_hora,f
  7484     0571                     i1l3001:
  7485                           
  7486                           ;main.c: 283:                     Set_hour(hora);
  7487     0571  0868               	movf	_hora,w
  7488     0572  120A  158A  2067  120A  118A  	fcall	i1_Set_hour
  7489     0577  2CD8               	goto	i1l2941
  7490     0578                     i1l3005:
  7491     0578  3005               	movlw	5
  7492     0579  0650               	xorwf	_selector,w
  7493     057A  1D03               	btfss	3,2
  7494     057B  2D7D               	goto	u312_21
  7495     057C  2D7E               	goto	u312_20
  7496     057D                     u312_21:
  7497     057D  2D98               	goto	i1l3019
  7498     057E                     u312_20:
  7499     057E                     i1l3007:
  7500                           
  7501                           ;main.c: 288:                 if (minuto == 59){
  7502     057E  303B               	movlw	59
  7503     057F  0669               	xorwf	_minuto,w
  7504     0580  1D03               	btfss	3,2
  7505     0581  2D83               	goto	u313_21
  7506     0582  2D84               	goto	u313_20
  7507     0583                     u313_21:
  7508     0583  2D8D               	goto	i1l3013
  7509     0584                     u313_20:
  7510     0584                     i1l3009:
  7511                           
  7512                           ;main.c: 289:                     minuto = 59;
  7513     0584  303B               	movlw	59
  7514     0585  00E9               	movwf	_minuto
  7515     0586                     i1l3011:
  7516                           
  7517                           ;main.c: 290:                     Set_min(minuto);
  7518     0586  0869               	movf	_minuto,w
  7519     0587  120A  158A  2096  120A  118A  	fcall	i1_Set_min
  7520                           
  7521                           ;main.c: 291:                 }
  7522     058C  2CD8               	goto	i1l2941
  7523     058D                     i1l3013:
  7524                           
  7525                           ;main.c: 293:                     minuto++;
  7526     058D  3001               	movlw	1
  7527     058E  00F7               	movwf	??_isr
  7528     058F  0877               	movf	??_isr,w
  7529     0590  07E9               	addwf	_minuto,f
  7530     0591                     i1l3015:
  7531                           
  7532                           ;main.c: 294:                     Set_min(minuto);
  7533     0591  0869               	movf	_minuto,w
  7534     0592  120A  158A  2096  120A  118A  	fcall	i1_Set_min
  7535     0597  2CD8               	goto	i1l2941
  7536     0598                     i1l3019:
  7537     0598  3006               	movlw	6
  7538     0599  0650               	xorwf	_selector,w
  7539     059A  1D03               	btfss	3,2
  7540     059B  2D9D               	goto	u314_21
  7541     059C  2D9E               	goto	u314_20
  7542     059D                     u314_21:
  7543     059D  2DB8               	goto	i1l177
  7544     059E                     u314_20:
  7545     059E                     i1l3021:
  7546                           
  7547                           ;main.c: 299:                 if (segundo == 59){
  7548     059E  303B               	movlw	59
  7549     059F  066A               	xorwf	_segundo,w
  7550     05A0  1D03               	btfss	3,2
  7551     05A1  2DA3               	goto	u315_21
  7552     05A2  2DA4               	goto	u315_20
  7553     05A3                     u315_21:
  7554     05A3  2DAD               	goto	i1l3027
  7555     05A4                     u315_20:
  7556     05A4                     i1l3023:
  7557                           
  7558                           ;main.c: 300:                     segundo = 59;
  7559     05A4  303B               	movlw	59
  7560     05A5  00EA               	movwf	_segundo
  7561     05A6                     i1l3025:
  7562                           
  7563                           ;main.c: 301:                     Set_sec(segundo);
  7564     05A6  086A               	movf	_segundo,w
  7565     05A7  120A  158A  200A  120A  118A  	fcall	i1_Set_sec
  7566                           
  7567                           ;main.c: 302:                 }
  7568     05AC  2CD8               	goto	i1l2941
  7569     05AD                     i1l3027:
  7570                           
  7571                           ;main.c: 304:                     segundo++;
  7572     05AD  3001               	movlw	1
  7573     05AE  00F7               	movwf	??_isr
  7574     05AF  0877               	movf	??_isr,w
  7575     05B0  07EA               	addwf	_segundo,f
  7576     05B1                     i1l3029:
  7577                           
  7578                           ;main.c: 305:                     Set_sec(segundo);
  7579     05B1  086A               	movf	_segundo,w
  7580     05B2  120A  158A  200A  120A  118A  	fcall	i1_Set_sec
  7581     05B7  2CD8               	goto	i1l2941
  7582     05B8                     i1l177:
  7583     05B8                     i1l3033:
  7584                           
  7585                           ;main.c: 310:         if (PORTBbits.RB6 == 0){
  7586     05B8  1283               	bcf	3,5	;RP0=0, select bank0
  7587     05B9  1303               	bcf	3,6	;RP1=0, select bank0
  7588     05BA  1B06               	btfsc	6,6	;volatile
  7589     05BB  2DBD               	goto	u316_21
  7590     05BC  2DBE               	goto	u316_20
  7591     05BD                     u316_21:
  7592     05BD  2DC9               	goto	i1l3037
  7593     05BE                     u316_20:
  7594     05BE                     i1l3035:
  7595                           
  7596                           ;main.c: 311:             bandera = 3;
  7597     05BE  3003               	movlw	3
  7598     05BF  00FB               	movwf	_bandera
  7599                           
  7600                           ;main.c: 312:             _delay((unsigned long)((1)*(8000000/4000.0)));
  7601     05C0  3003               	movlw	3
  7602     05C1  00F8               	movwf	??_isr+1
  7603     05C2  3097               	movlw	151
  7604     05C3  00F7               	movwf	??_isr
  7605     05C4                     u341_27:
  7606     05C4  0BF7               	decfsz	??_isr,f
  7607     05C5  2DC4               	goto	u341_27
  7608     05C6  0BF8               	decfsz	??_isr+1,f
  7609     05C7  2DC4               	goto	u341_27
  7610     05C8  2DC9               	nop2
  7611     05C9                     i1l3037:
  7612                           
  7613                           ;main.c: 314:         if (PORTBbits.RB6 == 1 && bandera == 3){
  7614     05C9  1283               	bcf	3,5	;RP0=0, select bank0
  7615     05CA  1303               	bcf	3,6	;RP1=0, select bank0
  7616     05CB  1F06               	btfss	6,6	;volatile
  7617     05CC  2DCE               	goto	u317_21
  7618     05CD  2DCF               	goto	u317_20
  7619     05CE                     u317_21:
  7620     05CE  2E7F               	goto	i1l214
  7621     05CF                     u317_20:
  7622     05CF                     i1l3039:
  7623     05CF  3003               	movlw	3
  7624     05D0  067B               	xorwf	_bandera,w
  7625     05D1  1D03               	btfss	3,2
  7626     05D2  2DD4               	goto	u318_21
  7627     05D3  2DD5               	goto	u318_20
  7628     05D4                     u318_21:
  7629     05D4  2E7F               	goto	i1l214
  7630     05D5                     u318_20:
  7631     05D5                     i1l3041:
  7632                           
  7633                           ;main.c: 315:             if (selector == 1){
  7634     05D5  0350               	decf	_selector,w
  7635     05D6  1D03               	btfss	3,2
  7636     05D7  2DD9               	goto	u319_21
  7637     05D8  2DDA               	goto	u319_20
  7638     05D9                     u319_21:
  7639     05D9  2DF2               	goto	i1l3055
  7640     05DA                     u319_20:
  7641     05DA                     i1l3043:
  7642                           
  7643                           ;main.c: 316:                 if (dia == 1){
  7644     05DA  0367               	decf	_dia,w
  7645     05DB  1D03               	btfss	3,2
  7646     05DC  2DDE               	goto	u320_21
  7647     05DD  2DDF               	goto	u320_20
  7648     05DE                     u320_21:
  7649     05DE  2DE8               	goto	i1l3049
  7650     05DF                     u320_20:
  7651     05DF                     i1l3045:
  7652                           
  7653                           ;main.c: 317:                     dia = 1;
  7654     05DF  01E7               	clrf	_dia
  7655     05E0  0AE7               	incf	_dia,f
  7656     05E1                     i1l3047:
  7657                           
  7658                           ;main.c: 318:                     Set_day(dia);
  7659     05E1  0867               	movf	_dia,w
  7660     05E2  120A  158A  2038  120A  118A  	fcall	i1_Set_day
  7661                           
  7662                           ;main.c: 319:                 }
  7663     05E7  2DF0               	goto	i1l3053
  7664     05E8                     i1l3049:
  7665                           
  7666                           ;main.c: 321:                     dia--;
  7667     05E8  3001               	movlw	1
  7668     05E9  02E7               	subwf	_dia,f
  7669     05EA                     i1l3051:
  7670                           
  7671                           ;main.c: 322:                     Set_day(dia);
  7672     05EA  0867               	movf	_dia,w
  7673     05EB  120A  158A  2038  120A  118A  	fcall	i1_Set_day
  7674     05F0                     i1l3053:
  7675                           
  7676                           ;main.c: 324:                 bandera = 0;
  7677     05F0  01FB               	clrf	_bandera
  7678                           
  7679                           ;main.c: 325:             }
  7680     05F1  2E7F               	goto	i1l214
  7681     05F2                     i1l3055:
  7682     05F2  3002               	movlw	2
  7683     05F3  0650               	xorwf	_selector,w
  7684     05F4  1D03               	btfss	3,2
  7685     05F5  2DF7               	goto	u321_21
  7686     05F6  2DF8               	goto	u321_20
  7687     05F7                     u321_21:
  7688     05F7  2E0F               	goto	i1l3069
  7689     05F8                     u321_20:
  7690     05F8                     i1l3057:
  7691                           
  7692                           ;main.c: 327:                 if (mes == 1){
  7693     05F8  0366               	decf	_mes,w
  7694     05F9  1D03               	btfss	3,2
  7695     05FA  2DFC               	goto	u322_21
  7696     05FB  2DFD               	goto	u322_20
  7697     05FC                     u322_21:
  7698     05FC  2E06               	goto	i1l3063
  7699     05FD                     u322_20:
  7700     05FD                     i1l3059:
  7701                           
  7702                           ;main.c: 328:                     mes = 1;
  7703     05FD  01E6               	clrf	_mes
  7704     05FE  0AE6               	incf	_mes,f
  7705     05FF                     i1l3061:
  7706                           
  7707                           ;main.c: 329:                     Set_month(mes);
  7708     05FF  0866               	movf	_mes,w
  7709     0600  120A  158A  20C5  120A  118A  	fcall	i1_Set_month
  7710                           
  7711                           ;main.c: 330:                 }
  7712     0605  2DF0               	goto	i1l3053
  7713     0606                     i1l3063:
  7714                           
  7715                           ;main.c: 332:                     mes--;
  7716     0606  3001               	movlw	1
  7717     0607  02E6               	subwf	_mes,f
  7718     0608                     i1l3065:
  7719                           
  7720                           ;main.c: 333:                     Set_month(mes);
  7721     0608  0866               	movf	_mes,w
  7722     0609  120A  158A  20C5  120A  118A  	fcall	i1_Set_month
  7723     060E  2DF0               	goto	i1l3053
  7724     060F                     i1l3069:
  7725     060F  3003               	movlw	3
  7726     0610  0650               	xorwf	_selector,w
  7727     0611  1D03               	btfss	3,2
  7728     0612  2E14               	goto	u323_21
  7729     0613  2E15               	goto	u323_20
  7730     0614                     u323_21:
  7731     0614  2E2B               	goto	i1l3083
  7732     0615                     u323_20:
  7733     0615                     i1l3071:
  7734                           
  7735                           ;main.c: 338:                 if (ano == 0){
  7736     0615  0865               	movf	_ano,w
  7737     0616  1D03               	btfss	3,2
  7738     0617  2E19               	goto	u324_21
  7739     0618  2E1A               	goto	u324_20
  7740     0619                     u324_21:
  7741     0619  2E22               	goto	i1l3077
  7742     061A                     u324_20:
  7743     061A                     i1l3073:
  7744                           
  7745                           ;main.c: 339:                     ano = 0;
  7746     061A  01E5               	clrf	_ano
  7747     061B                     i1l3075:
  7748                           
  7749                           ;main.c: 340:                     Set_year(ano);
  7750     061B  0865               	movf	_ano,w
  7751     061C  120A  158A  20F4  120A  118A  	fcall	i1_Set_year
  7752                           
  7753                           ;main.c: 341:                 }
  7754     0621  2DF0               	goto	i1l3053
  7755     0622                     i1l3077:
  7756                           
  7757                           ;main.c: 343:                     ano--;
  7758     0622  3001               	movlw	1
  7759     0623  02E5               	subwf	_ano,f
  7760     0624                     i1l3079:
  7761                           
  7762                           ;main.c: 344:                     Set_year(ano);
  7763     0624  0865               	movf	_ano,w
  7764     0625  120A  158A  20F4  120A  118A  	fcall	i1_Set_year
  7765     062A  2DF0               	goto	i1l3053
  7766     062B                     i1l3083:
  7767     062B  3004               	movlw	4
  7768     062C  0650               	xorwf	_selector,w
  7769     062D  1D03               	btfss	3,2
  7770     062E  2E30               	goto	u325_21
  7771     062F  2E31               	goto	u325_20
  7772     0630                     u325_21:
  7773     0630  2E47               	goto	i1l3097
  7774     0631                     u325_20:
  7775     0631                     i1l3085:
  7776                           
  7777                           ;main.c: 349:                 if (hora == 0){
  7778     0631  0868               	movf	_hora,w
  7779     0632  1D03               	btfss	3,2
  7780     0633  2E35               	goto	u326_21
  7781     0634  2E36               	goto	u326_20
  7782     0635                     u326_21:
  7783     0635  2E3E               	goto	i1l3091
  7784     0636                     u326_20:
  7785     0636                     i1l3087:
  7786                           
  7787                           ;main.c: 350:                     hora = 0;
  7788     0636  01E8               	clrf	_hora
  7789     0637                     i1l3089:
  7790                           
  7791                           ;main.c: 351:                     Set_hour(hora);
  7792     0637  0868               	movf	_hora,w
  7793     0638  120A  158A  2067  120A  118A  	fcall	i1_Set_hour
  7794                           
  7795                           ;main.c: 352:                 }
  7796     063D  2DF0               	goto	i1l3053
  7797     063E                     i1l3091:
  7798                           
  7799                           ;main.c: 354:                     hora--;
  7800     063E  3001               	movlw	1
  7801     063F  02E8               	subwf	_hora,f
  7802     0640                     i1l3093:
  7803                           
  7804                           ;main.c: 355:                     Set_hour(hora);
  7805     0640  0868               	movf	_hora,w
  7806     0641  120A  158A  2067  120A  118A  	fcall	i1_Set_hour
  7807     0646  2DF0               	goto	i1l3053
  7808     0647                     i1l3097:
  7809     0647  3005               	movlw	5
  7810     0648  0650               	xorwf	_selector,w
  7811     0649  1D03               	btfss	3,2
  7812     064A  2E4C               	goto	u327_21
  7813     064B  2E4D               	goto	u327_20
  7814     064C                     u327_21:
  7815     064C  2E63               	goto	i1l3111
  7816     064D                     u327_20:
  7817     064D                     i1l3099:
  7818                           
  7819                           ;main.c: 360:                 if (minuto == 0){
  7820     064D  0869               	movf	_minuto,w
  7821     064E  1D03               	btfss	3,2
  7822     064F  2E51               	goto	u328_21
  7823     0650  2E52               	goto	u328_20
  7824     0651                     u328_21:
  7825     0651  2E5A               	goto	i1l3105
  7826     0652                     u328_20:
  7827     0652                     i1l3101:
  7828                           
  7829                           ;main.c: 361:                     minuto = 0;
  7830     0652  01E9               	clrf	_minuto
  7831     0653                     i1l3103:
  7832                           
  7833                           ;main.c: 362:                     Set_min(minuto);
  7834     0653  0869               	movf	_minuto,w
  7835     0654  120A  158A  2096  120A  118A  	fcall	i1_Set_min
  7836                           
  7837                           ;main.c: 363:                 }
  7838     0659  2DF0               	goto	i1l3053
  7839     065A                     i1l3105:
  7840                           
  7841                           ;main.c: 365:                     minuto--;
  7842     065A  3001               	movlw	1
  7843     065B  02E9               	subwf	_minuto,f
  7844     065C                     i1l3107:
  7845                           
  7846                           ;main.c: 366:                     Set_min(minuto);
  7847     065C  0869               	movf	_minuto,w
  7848     065D  120A  158A  2096  120A  118A  	fcall	i1_Set_min
  7849     0662  2DF0               	goto	i1l3053
  7850     0663                     i1l3111:
  7851     0663  3006               	movlw	6
  7852     0664  0650               	xorwf	_selector,w
  7853     0665  1D03               	btfss	3,2
  7854     0666  2E68               	goto	u329_21
  7855     0667  2E69               	goto	u329_20
  7856     0668                     u329_21:
  7857     0668  2E7F               	goto	i1l202
  7858     0669                     u329_20:
  7859     0669                     i1l3113:
  7860                           
  7861                           ;main.c: 371:                 if (segundo == 0){
  7862     0669  086A               	movf	_segundo,w
  7863     066A  1D03               	btfss	3,2
  7864     066B  2E6D               	goto	u330_21
  7865     066C  2E6E               	goto	u330_20
  7866     066D                     u330_21:
  7867     066D  2E76               	goto	i1l3119
  7868     066E                     u330_20:
  7869     066E                     i1l3115:
  7870                           
  7871                           ;main.c: 372:                     segundo = 0;
  7872     066E  01EA               	clrf	_segundo
  7873     066F                     i1l3117:
  7874                           
  7875                           ;main.c: 373:                     Set_sec(segundo);
  7876     066F  086A               	movf	_segundo,w
  7877     0670  120A  158A  200A  120A  118A  	fcall	i1_Set_sec
  7878                           
  7879                           ;main.c: 374:                 }
  7880     0675  2DF0               	goto	i1l3053
  7881     0676                     i1l3119:
  7882                           
  7883                           ;main.c: 376:                     segundo--;
  7884     0676  3001               	movlw	1
  7885     0677  02EA               	subwf	_segundo,f
  7886     0678                     i1l3121:
  7887                           
  7888                           ;main.c: 377:                     Set_sec(segundo);
  7889     0678  086A               	movf	_segundo,w
  7890     0679  120A  158A  200A  120A  118A  	fcall	i1_Set_sec
  7891     067E  2DF0               	goto	i1l3053
  7892     067F                     i1l202:
  7893     067F                     i1l214:
  7894     067F  087A               	movf	??_isr+3,w
  7895     0680  008A               	movwf	10
  7896     0681  0E79               	swapf	??_isr+2,w
  7897     0682  0083               	movwf	3
  7898     0683  0EFE               	swapf	btemp,f
  7899     0684  0E7E               	swapf	btemp,w
  7900     0685  0009               	retfie
  7901     0686                     __end_of_isr:
  7902                           
  7903                           	psect	intentry
  7904     0004                     __pintentry:	
  7905                           ;incstack = 0
  7906                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  7907                           
  7908     0004                     interrupt_function:
  7909     007E                     saved_w	set	btemp
  7910     0004  00FE               	movwf	btemp
  7911     0005  0E03               	swapf	3,w
  7912     0006  00F9               	movwf	??_isr+2
  7913     0007  080A               	movf	10,w
  7914     0008  00FA               	movwf	??_isr+3
  7915     0009  120A  118A  2BC5   	ljmp	_isr
  7916                           
  7917                           	psect	text39
  7918     08F4                     __ptext39:	
  7919 ;; *************** function i1_Set_year *****************
  7920 ;; Defined at:
  7921 ;;		line 515 in file "main.c"
  7922 ;; Parameters:    Size  Location     Type
  7923 ;;  year            1    wreg     unsigned char 
  7924 ;; Auto vars:     Size  Location     Type
  7925 ;;  year            1    6[COMMON] unsigned char 
  7926 ;; Return value:  Size  Location     Type
  7927 ;;                  1    wreg      void 
  7928 ;; Registers used:
  7929 ;;		wreg, status,2, status,0, pclath, cstack
  7930 ;; Tracked objects:
  7931 ;;		On entry : 0/0
  7932 ;;		On exit  : 0/0
  7933 ;;		Unchanged: 0/0
  7934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7935 ;;      Params:         0       0       0       0       0
  7936 ;;      Locals:         1       0       0       0       0
  7937 ;;      Temps:          2       0       0       0       0
  7938 ;;      Totals:         3       0       0       0       0
  7939 ;;Total ram usage:        3 bytes
  7940 ;; Hardware stack levels used: 1
  7941 ;; Hardware stack levels required when called: 2
  7942 ;; This function calls:
  7943 ;;		i1_Dec_to_Bcd
  7944 ;;		i1_I2C_Master_Start
  7945 ;;		i1_I2C_Master_Stop
  7946 ;;		i1_I2C_Master_Write
  7947 ;; This function is called by:
  7948 ;;		_isr
  7949 ;; This function uses a non-reentrant model
  7950 ;;
  7951                           
  7952     08F4                     i1_Set_year:	
  7953                           ;psect for function i1_Set_year
  7954                           
  7955                           
  7956                           ;incstack = 0
  7957                           ; Regs used in i1_Set_year: [wreg+status,2+status,0+pclath+cstack]
  7958                           ;i1Set_year@year stored from wreg
  7959     08F4  00F6               	movwf	i1Set_year@year
  7960     08F5                     i1l2707:
  7961                           
  7962                           ;main.c: 516:     I2C_Master_Start();
  7963     08F5  160A  118A  26D9  120A  158A  	fcall	i1_I2C_Master_Start
  7964                           
  7965                           ;main.c: 517:     I2C_Master_Write(0xD0);
  7966     08FA  30D0               	movlw	208
  7967     08FB  00F2               	movwf	i1I2C_Master_Write@d
  7968     08FC  3000               	movlw	0
  7969     08FD  00F3               	movwf	i1I2C_Master_Write@d+1
  7970     08FE  160A  118A  2706  120A  158A  	fcall	i1_I2C_Master_Write
  7971                           
  7972                           ;main.c: 518:     I2C_Master_Write(0x06);
  7973     0903  3006               	movlw	6
  7974     0904  00F2               	movwf	i1I2C_Master_Write@d
  7975     0905  3000               	movlw	0
  7976     0906  00F3               	movwf	i1I2C_Master_Write@d+1
  7977     0907  160A  118A  2706  120A  158A  	fcall	i1_I2C_Master_Write
  7978                           
  7979                           ;main.c: 519:     I2C_Master_Write(Dec_to_Bcd(year));
  7980     090C  0876               	movf	i1Set_year@year,w
  7981     090D  160A  118A  272A  120A  158A  	fcall	i1_Dec_to_Bcd
  7982     0912  00F4               	movwf	??i1_Set_year
  7983     0913  01F5               	clrf	??i1_Set_year+1
  7984     0914  0874               	movf	??i1_Set_year,w
  7985     0915  00F2               	movwf	i1I2C_Master_Write@d
  7986     0916  0875               	movf	??i1_Set_year+1,w
  7987     0917  00F3               	movwf	i1I2C_Master_Write@d+1
  7988     0918  160A  118A  2706  120A  158A  	fcall	i1_I2C_Master_Write
  7989                           
  7990                           ;main.c: 520:     I2C_Master_Stop();
  7991     091D  160A  118A  26E2  120A  158A  	fcall	i1_I2C_Master_Stop
  7992     0922                     i1l244:
  7993     0922  0008               	return
  7994     0923                     __end_ofi1_Set_year:
  7995                           
  7996                           	psect	text40
  7997     080A                     __ptext40:	
  7998 ;; *************** function i1_Set_sec *****************
  7999 ;; Defined at:
  8000 ;;		line 470 in file "main.c"
  8001 ;; Parameters:    Size  Location     Type
  8002 ;;  sec             1    wreg     unsigned char 
  8003 ;; Auto vars:     Size  Location     Type
  8004 ;;  sec             1    6[COMMON] unsigned char 
  8005 ;; Return value:  Size  Location     Type
  8006 ;;                  1    wreg      void 
  8007 ;; Registers used:
  8008 ;;		wreg, status,2, status,0, pclath, cstack
  8009 ;; Tracked objects:
  8010 ;;		On entry : 0/0
  8011 ;;		On exit  : 0/0
  8012 ;;		Unchanged: 0/0
  8013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8014 ;;      Params:         0       0       0       0       0
  8015 ;;      Locals:         1       0       0       0       0
  8016 ;;      Temps:          2       0       0       0       0
  8017 ;;      Totals:         3       0       0       0       0
  8018 ;;Total ram usage:        3 bytes
  8019 ;; Hardware stack levels used: 1
  8020 ;; Hardware stack levels required when called: 2
  8021 ;; This function calls:
  8022 ;;		i1_Dec_to_Bcd
  8023 ;;		i1_I2C_Master_Start
  8024 ;;		i1_I2C_Master_Stop
  8025 ;;		i1_I2C_Master_Write
  8026 ;; This function is called by:
  8027 ;;		_isr
  8028 ;; This function uses a non-reentrant model
  8029 ;;
  8030                           
  8031     080A                     i1_Set_sec:	
  8032                           ;psect for function i1_Set_sec
  8033                           
  8034                           
  8035                           ;incstack = 0
  8036                           ; Regs used in i1_Set_sec: [wreg+status,2+status,0+pclath+cstack]
  8037                           ;i1Set_sec@sec stored from wreg
  8038     080A  00F6               	movwf	i1Set_sec@sec
  8039     080B                     i1l2697:
  8040                           
  8041                           ;main.c: 471:     I2C_Master_Start();
  8042     080B  160A  118A  26D9  120A  158A  	fcall	i1_I2C_Master_Start
  8043                           
  8044                           ;main.c: 472:     I2C_Master_Write(0xD0);
  8045     0810  30D0               	movlw	208
  8046     0811  00F2               	movwf	i1I2C_Master_Write@d
  8047     0812  3000               	movlw	0
  8048     0813  00F3               	movwf	i1I2C_Master_Write@d+1
  8049     0814  160A  118A  2706  120A  158A  	fcall	i1_I2C_Master_Write
  8050                           
  8051                           ;main.c: 473:     I2C_Master_Write(0x00);
  8052     0819  3000               	movlw	0
  8053     081A  00F2               	movwf	i1I2C_Master_Write@d
  8054     081B  00F3               	movwf	i1I2C_Master_Write@d+1
  8055     081C  160A  118A  2706  120A  158A  	fcall	i1_I2C_Master_Write
  8056                           
  8057                           ;main.c: 474:     I2C_Master_Write(Dec_to_Bcd(sec));
  8058     0821  0876               	movf	i1Set_sec@sec,w
  8059     0822  160A  118A  272A  120A  158A  	fcall	i1_Dec_to_Bcd
  8060     0827  00F4               	movwf	??i1_Set_sec
  8061     0828  01F5               	clrf	??i1_Set_sec+1
  8062     0829  0874               	movf	??i1_Set_sec,w
  8063     082A  00F2               	movwf	i1I2C_Master_Write@d
  8064     082B  0875               	movf	??i1_Set_sec+1,w
  8065     082C  00F3               	movwf	i1I2C_Master_Write@d+1
  8066     082D  160A  118A  2706  120A  158A  	fcall	i1_I2C_Master_Write
  8067                           
  8068                           ;main.c: 475:     I2C_Master_Stop();
  8069     0832  160A  118A  26E2  120A  158A  	fcall	i1_I2C_Master_Stop
  8070     0837                     i1l229:
  8071     0837  0008               	return
  8072     0838                     __end_ofi1_Set_sec:
  8073                           
  8074                           	psect	text41
  8075     08C5                     __ptext41:	
  8076 ;; *************** function i1_Set_month *****************
  8077 ;; Defined at:
  8078 ;;		line 506 in file "main.c"
  8079 ;; Parameters:    Size  Location     Type
  8080 ;;  month           1    wreg     unsigned char 
  8081 ;; Auto vars:     Size  Location     Type
  8082 ;;  month           1    6[COMMON] unsigned char 
  8083 ;; Return value:  Size  Location     Type
  8084 ;;                  1    wreg      void 
  8085 ;; Registers used:
  8086 ;;		wreg, status,2, status,0, pclath, cstack
  8087 ;; Tracked objects:
  8088 ;;		On entry : 0/0
  8089 ;;		On exit  : 0/0
  8090 ;;		Unchanged: 0/0
  8091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8092 ;;      Params:         0       0       0       0       0
  8093 ;;      Locals:         1       0       0       0       0
  8094 ;;      Temps:          2       0       0       0       0
  8095 ;;      Totals:         3       0       0       0       0
  8096 ;;Total ram usage:        3 bytes
  8097 ;; Hardware stack levels used: 1
  8098 ;; Hardware stack levels required when called: 2
  8099 ;; This function calls:
  8100 ;;		i1_Dec_to_Bcd
  8101 ;;		i1_I2C_Master_Start
  8102 ;;		i1_I2C_Master_Stop
  8103 ;;		i1_I2C_Master_Write
  8104 ;; This function is called by:
  8105 ;;		_isr
  8106 ;; This function uses a non-reentrant model
  8107 ;;
  8108                           
  8109     08C5                     i1_Set_month:	
  8110                           ;psect for function i1_Set_month
  8111                           
  8112                           
  8113                           ;incstack = 0
  8114                           ; Regs used in i1_Set_month: [wreg+status,2+status,0+pclath+cstack]
  8115                           ;i1Set_month@month stored from wreg
  8116     08C5  00F6               	movwf	i1Set_month@month
  8117     08C6                     i1l2705:
  8118                           
  8119                           ;main.c: 507:     I2C_Master_Start();
  8120     08C6  160A  118A  26D9  120A  158A  	fcall	i1_I2C_Master_Start
  8121                           
  8122                           ;main.c: 508:     I2C_Master_Write(0xD0);
  8123     08CB  30D0               	movlw	208
  8124     08CC  00F2               	movwf	i1I2C_Master_Write@d
  8125     08CD  3000               	movlw	0
  8126     08CE  00F3               	movwf	i1I2C_Master_Write@d+1
  8127     08CF  160A  118A  2706  120A  158A  	fcall	i1_I2C_Master_Write
  8128                           
  8129                           ;main.c: 509:     I2C_Master_Write(0x05);
  8130     08D4  3005               	movlw	5
  8131     08D5  00F2               	movwf	i1I2C_Master_Write@d
  8132     08D6  3000               	movlw	0
  8133     08D7  00F3               	movwf	i1I2C_Master_Write@d+1
  8134     08D8  160A  118A  2706  120A  158A  	fcall	i1_I2C_Master_Write
  8135                           
  8136                           ;main.c: 510:     I2C_Master_Write(Dec_to_Bcd(month));
  8137     08DD  0876               	movf	i1Set_month@month,w
  8138     08DE  160A  118A  272A  120A  158A  	fcall	i1_Dec_to_Bcd
  8139     08E3  00F4               	movwf	??i1_Set_month
  8140     08E4  01F5               	clrf	??i1_Set_month+1
  8141     08E5  0874               	movf	??i1_Set_month,w
  8142     08E6  00F2               	movwf	i1I2C_Master_Write@d
  8143     08E7  0875               	movf	??i1_Set_month+1,w
  8144     08E8  00F3               	movwf	i1I2C_Master_Write@d+1
  8145     08E9  160A  118A  2706  120A  158A  	fcall	i1_I2C_Master_Write
  8146                           
  8147                           ;main.c: 511:     I2C_Master_Stop();
  8148     08EE  160A  118A  26E2  120A  158A  	fcall	i1_I2C_Master_Stop
  8149     08F3                     i1l241:
  8150     08F3  0008               	return
  8151     08F4                     __end_ofi1_Set_month:
  8152                           
  8153                           	psect	text42
  8154     0896                     __ptext42:	
  8155 ;; *************** function i1_Set_min *****************
  8156 ;; Defined at:
  8157 ;;		line 479 in file "main.c"
  8158 ;; Parameters:    Size  Location     Type
  8159 ;;  min             1    wreg     unsigned char 
  8160 ;; Auto vars:     Size  Location     Type
  8161 ;;  min             1    6[COMMON] unsigned char 
  8162 ;; Return value:  Size  Location     Type
  8163 ;;                  1    wreg      void 
  8164 ;; Registers used:
  8165 ;;		wreg, status,2, status,0, pclath, cstack
  8166 ;; Tracked objects:
  8167 ;;		On entry : 0/0
  8168 ;;		On exit  : 0/0
  8169 ;;		Unchanged: 0/0
  8170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8171 ;;      Params:         0       0       0       0       0
  8172 ;;      Locals:         1       0       0       0       0
  8173 ;;      Temps:          2       0       0       0       0
  8174 ;;      Totals:         3       0       0       0       0
  8175 ;;Total ram usage:        3 bytes
  8176 ;; Hardware stack levels used: 1
  8177 ;; Hardware stack levels required when called: 2
  8178 ;; This function calls:
  8179 ;;		i1_Dec_to_Bcd
  8180 ;;		i1_I2C_Master_Start
  8181 ;;		i1_I2C_Master_Stop
  8182 ;;		i1_I2C_Master_Write
  8183 ;; This function is called by:
  8184 ;;		_isr
  8185 ;; This function uses a non-reentrant model
  8186 ;;
  8187                           
  8188     0896                     i1_Set_min:	
  8189                           ;psect for function i1_Set_min
  8190                           
  8191                           
  8192                           ;incstack = 0
  8193                           ; Regs used in i1_Set_min: [wreg+status,2+status,0+pclath+cstack]
  8194                           ;i1Set_min@min stored from wreg
  8195     0896  00F6               	movwf	i1Set_min@min
  8196     0897                     i1l2699:
  8197                           
  8198                           ;main.c: 480:     I2C_Master_Start();
  8199     0897  160A  118A  26D9  120A  158A  	fcall	i1_I2C_Master_Start
  8200                           
  8201                           ;main.c: 481:     I2C_Master_Write(0xD0);
  8202     089C  30D0               	movlw	208
  8203     089D  00F2               	movwf	i1I2C_Master_Write@d
  8204     089E  3000               	movlw	0
  8205     089F  00F3               	movwf	i1I2C_Master_Write@d+1
  8206     08A0  160A  118A  2706  120A  158A  	fcall	i1_I2C_Master_Write
  8207                           
  8208                           ;main.c: 482:     I2C_Master_Write(0x01);
  8209     08A5  3001               	movlw	1
  8210     08A6  00F2               	movwf	i1I2C_Master_Write@d
  8211     08A7  3000               	movlw	0
  8212     08A8  00F3               	movwf	i1I2C_Master_Write@d+1
  8213     08A9  160A  118A  2706  120A  158A  	fcall	i1_I2C_Master_Write
  8214                           
  8215                           ;main.c: 483:     I2C_Master_Write(Dec_to_Bcd(min));
  8216     08AE  0876               	movf	i1Set_min@min,w
  8217     08AF  160A  118A  272A  120A  158A  	fcall	i1_Dec_to_Bcd
  8218     08B4  00F4               	movwf	??i1_Set_min
  8219     08B5  01F5               	clrf	??i1_Set_min+1
  8220     08B6  0874               	movf	??i1_Set_min,w
  8221     08B7  00F2               	movwf	i1I2C_Master_Write@d
  8222     08B8  0875               	movf	??i1_Set_min+1,w
  8223     08B9  00F3               	movwf	i1I2C_Master_Write@d+1
  8224     08BA  160A  118A  2706  120A  158A  	fcall	i1_I2C_Master_Write
  8225                           
  8226                           ;main.c: 484:     I2C_Master_Stop();
  8227     08BF  160A  118A  26E2  120A  158A  	fcall	i1_I2C_Master_Stop
  8228     08C4                     i1l232:
  8229     08C4  0008               	return
  8230     08C5                     __end_ofi1_Set_min:
  8231                           
  8232                           	psect	text43
  8233     0867                     __ptext43:	
  8234 ;; *************** function i1_Set_hour *****************
  8235 ;; Defined at:
  8236 ;;		line 488 in file "main.c"
  8237 ;; Parameters:    Size  Location     Type
  8238 ;;  hour            1    wreg     unsigned char 
  8239 ;; Auto vars:     Size  Location     Type
  8240 ;;  hour            1    6[COMMON] unsigned char 
  8241 ;; Return value:  Size  Location     Type
  8242 ;;                  1    wreg      void 
  8243 ;; Registers used:
  8244 ;;		wreg, status,2, status,0, pclath, cstack
  8245 ;; Tracked objects:
  8246 ;;		On entry : 0/0
  8247 ;;		On exit  : 0/0
  8248 ;;		Unchanged: 0/0
  8249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8250 ;;      Params:         0       0       0       0       0
  8251 ;;      Locals:         1       0       0       0       0
  8252 ;;      Temps:          2       0       0       0       0
  8253 ;;      Totals:         3       0       0       0       0
  8254 ;;Total ram usage:        3 bytes
  8255 ;; Hardware stack levels used: 1
  8256 ;; Hardware stack levels required when called: 2
  8257 ;; This function calls:
  8258 ;;		i1_Dec_to_Bcd
  8259 ;;		i1_I2C_Master_Start
  8260 ;;		i1_I2C_Master_Stop
  8261 ;;		i1_I2C_Master_Write
  8262 ;; This function is called by:
  8263 ;;		_isr
  8264 ;; This function uses a non-reentrant model
  8265 ;;
  8266                           
  8267     0867                     i1_Set_hour:	
  8268                           ;psect for function i1_Set_hour
  8269                           
  8270                           
  8271                           ;incstack = 0
  8272                           ; Regs used in i1_Set_hour: [wreg+status,2+status,0+pclath+cstack]
  8273                           ;i1Set_hour@hour stored from wreg
  8274     0867  00F6               	movwf	i1Set_hour@hour
  8275     0868                     i1l2701:
  8276                           
  8277                           ;main.c: 489:     I2C_Master_Start();
  8278     0868  160A  118A  26D9  120A  158A  	fcall	i1_I2C_Master_Start
  8279                           
  8280                           ;main.c: 490:     I2C_Master_Write(0xD0);
  8281     086D  30D0               	movlw	208
  8282     086E  00F2               	movwf	i1I2C_Master_Write@d
  8283     086F  3000               	movlw	0
  8284     0870  00F3               	movwf	i1I2C_Master_Write@d+1
  8285     0871  160A  118A  2706  120A  158A  	fcall	i1_I2C_Master_Write
  8286                           
  8287                           ;main.c: 491:     I2C_Master_Write(0x02);
  8288     0876  3002               	movlw	2
  8289     0877  00F2               	movwf	i1I2C_Master_Write@d
  8290     0878  3000               	movlw	0
  8291     0879  00F3               	movwf	i1I2C_Master_Write@d+1
  8292     087A  160A  118A  2706  120A  158A  	fcall	i1_I2C_Master_Write
  8293                           
  8294                           ;main.c: 492:     I2C_Master_Write(Dec_to_Bcd(hour));
  8295     087F  0876               	movf	i1Set_hour@hour,w
  8296     0880  160A  118A  272A  120A  158A  	fcall	i1_Dec_to_Bcd
  8297     0885  00F4               	movwf	??i1_Set_hour
  8298     0886  01F5               	clrf	??i1_Set_hour+1
  8299     0887  0874               	movf	??i1_Set_hour,w
  8300     0888  00F2               	movwf	i1I2C_Master_Write@d
  8301     0889  0875               	movf	??i1_Set_hour+1,w
  8302     088A  00F3               	movwf	i1I2C_Master_Write@d+1
  8303     088B  160A  118A  2706  120A  158A  	fcall	i1_I2C_Master_Write
  8304                           
  8305                           ;main.c: 493:     I2C_Master_Stop();
  8306     0890  160A  118A  26E2  120A  158A  	fcall	i1_I2C_Master_Stop
  8307     0895                     i1l235:
  8308     0895  0008               	return
  8309     0896                     __end_ofi1_Set_hour:
  8310                           
  8311                           	psect	text44
  8312     0838                     __ptext44:	
  8313 ;; *************** function i1_Set_day *****************
  8314 ;; Defined at:
  8315 ;;		line 497 in file "main.c"
  8316 ;; Parameters:    Size  Location     Type
  8317 ;;  day             1    wreg     unsigned char 
  8318 ;; Auto vars:     Size  Location     Type
  8319 ;;  day             1    6[COMMON] unsigned char 
  8320 ;; Return value:  Size  Location     Type
  8321 ;;                  1    wreg      void 
  8322 ;; Registers used:
  8323 ;;		wreg, status,2, status,0, pclath, cstack
  8324 ;; Tracked objects:
  8325 ;;		On entry : 0/0
  8326 ;;		On exit  : 0/0
  8327 ;;		Unchanged: 0/0
  8328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8329 ;;      Params:         0       0       0       0       0
  8330 ;;      Locals:         1       0       0       0       0
  8331 ;;      Temps:          2       0       0       0       0
  8332 ;;      Totals:         3       0       0       0       0
  8333 ;;Total ram usage:        3 bytes
  8334 ;; Hardware stack levels used: 1
  8335 ;; Hardware stack levels required when called: 2
  8336 ;; This function calls:
  8337 ;;		i1_Dec_to_Bcd
  8338 ;;		i1_I2C_Master_Start
  8339 ;;		i1_I2C_Master_Stop
  8340 ;;		i1_I2C_Master_Write
  8341 ;; This function is called by:
  8342 ;;		_isr
  8343 ;; This function uses a non-reentrant model
  8344 ;;
  8345                           
  8346     0838                     i1_Set_day:	
  8347                           ;psect for function i1_Set_day
  8348                           
  8349                           
  8350                           ;incstack = 0
  8351                           ; Regs used in i1_Set_day: [wreg+status,2+status,0+pclath+cstack]
  8352                           ;i1Set_day@day stored from wreg
  8353     0838  00F6               	movwf	i1Set_day@day
  8354     0839                     i1l2703:
  8355                           
  8356                           ;main.c: 498:     I2C_Master_Start();
  8357     0839  160A  118A  26D9  120A  158A  	fcall	i1_I2C_Master_Start
  8358                           
  8359                           ;main.c: 499:     I2C_Master_Write(0xD0);
  8360     083E  30D0               	movlw	208
  8361     083F  00F2               	movwf	i1I2C_Master_Write@d
  8362     0840  3000               	movlw	0
  8363     0841  00F3               	movwf	i1I2C_Master_Write@d+1
  8364     0842  160A  118A  2706  120A  158A  	fcall	i1_I2C_Master_Write
  8365                           
  8366                           ;main.c: 500:     I2C_Master_Write(0x04);
  8367     0847  3004               	movlw	4
  8368     0848  00F2               	movwf	i1I2C_Master_Write@d
  8369     0849  3000               	movlw	0
  8370     084A  00F3               	movwf	i1I2C_Master_Write@d+1
  8371     084B  160A  118A  2706  120A  158A  	fcall	i1_I2C_Master_Write
  8372                           
  8373                           ;main.c: 501:     I2C_Master_Write(Dec_to_Bcd(day));
  8374     0850  0876               	movf	i1Set_day@day,w
  8375     0851  160A  118A  272A  120A  158A  	fcall	i1_Dec_to_Bcd
  8376     0856  00F4               	movwf	??i1_Set_day
  8377     0857  01F5               	clrf	??i1_Set_day+1
  8378     0858  0874               	movf	??i1_Set_day,w
  8379     0859  00F2               	movwf	i1I2C_Master_Write@d
  8380     085A  0875               	movf	??i1_Set_day+1,w
  8381     085B  00F3               	movwf	i1I2C_Master_Write@d+1
  8382     085C  160A  118A  2706  120A  158A  	fcall	i1_I2C_Master_Write
  8383                           
  8384                           ;main.c: 502:     I2C_Master_Stop();
  8385     0861  160A  118A  26E2  120A  158A  	fcall	i1_I2C_Master_Stop
  8386     0866                     i1l238:
  8387     0866  0008               	return
  8388     0867                     __end_ofi1_Set_day:
  8389                           
  8390                           	psect	text45
  8391     1706                     __ptext45:	
  8392 ;; *************** function i1_I2C_Master_Write *****************
  8393 ;; Defined at:
  8394 ;;		line 65 in file "I2C.c"
  8395 ;; Parameters:    Size  Location     Type
  8396 ;;  d               2    2[COMMON] unsigned int 
  8397 ;; Auto vars:     Size  Location     Type
  8398 ;;		None
  8399 ;; Return value:  Size  Location     Type
  8400 ;;                  1    wreg      void 
  8401 ;; Registers used:
  8402 ;;		wreg, status,2, status,0, pclath, cstack
  8403 ;; Tracked objects:
  8404 ;;		On entry : 0/0
  8405 ;;		On exit  : 0/0
  8406 ;;		Unchanged: 0/0
  8407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8408 ;;      Params:         2       0       0       0       0
  8409 ;;      Locals:         0       0       0       0       0
  8410 ;;      Temps:          0       0       0       0       0
  8411 ;;      Totals:         2       0       0       0       0
  8412 ;;Total ram usage:        2 bytes
  8413 ;; Hardware stack levels used: 1
  8414 ;; Hardware stack levels required when called: 1
  8415 ;; This function calls:
  8416 ;;		i1_I2C_Master_Wait
  8417 ;; This function is called by:
  8418 ;;		i1_Set_sec
  8419 ;;		i1_Set_min
  8420 ;;		i1_Set_hour
  8421 ;;		i1_Set_day
  8422 ;;		i1_Set_month
  8423 ;;		i1_Set_year
  8424 ;; This function uses a non-reentrant model
  8425 ;;
  8426                           
  8427     1706                     i1_I2C_Master_Write:	
  8428                           ;psect for function i1_I2C_Master_Write
  8429                           
  8430     1706                     i1l2449:	
  8431                           ;incstack = 0
  8432                           ; Regs used in i1_I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  8433                           
  8434                           
  8435                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  8436     1706  160A  118A  2710  160A  118A  	fcall	i1_I2C_Master_Wait
  8437     170B                     i1l2451:
  8438                           
  8439                           ;I2C.c: 68:     SSPBUF = d;
  8440     170B  0872               	movf	i1I2C_Master_Write@d,w
  8441     170C  1283               	bcf	3,5	;RP0=0, select bank0
  8442     170D  1303               	bcf	3,6	;RP1=0, select bank0
  8443     170E  0093               	movwf	19	;volatile
  8444     170F                     i1l302:
  8445     170F  0008               	return
  8446     1710                     __end_ofi1_I2C_Master_Write:
  8447                           
  8448                           	psect	text46
  8449     16E2                     __ptext46:	
  8450 ;; *************** function i1_I2C_Master_Stop *****************
  8451 ;; Defined at:
  8452 ;;		line 55 in file "I2C.c"
  8453 ;; Parameters:    Size  Location     Type
  8454 ;;		None
  8455 ;; Auto vars:     Size  Location     Type
  8456 ;;		None
  8457 ;; Return value:  Size  Location     Type
  8458 ;;                  1    wreg      void 
  8459 ;; Registers used:
  8460 ;;		wreg, status,2, status,0, pclath, cstack
  8461 ;; Tracked objects:
  8462 ;;		On entry : 0/0
  8463 ;;		On exit  : 0/0
  8464 ;;		Unchanged: 0/0
  8465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8466 ;;      Params:         0       0       0       0       0
  8467 ;;      Locals:         0       0       0       0       0
  8468 ;;      Temps:          0       0       0       0       0
  8469 ;;      Totals:         0       0       0       0       0
  8470 ;;Total ram usage:        0 bytes
  8471 ;; Hardware stack levels used: 1
  8472 ;; Hardware stack levels required when called: 1
  8473 ;; This function calls:
  8474 ;;		i1_I2C_Master_Wait
  8475 ;; This function is called by:
  8476 ;;		i1_Set_sec
  8477 ;;		i1_Set_min
  8478 ;;		i1_Set_hour
  8479 ;;		i1_Set_day
  8480 ;;		i1_Set_month
  8481 ;;		i1_Set_year
  8482 ;; This function uses a non-reentrant model
  8483 ;;
  8484                           
  8485     16E2                     i1_I2C_Master_Stop:	
  8486                           ;psect for function i1_I2C_Master_Stop
  8487                           
  8488     16E2                     i1l2445:	
  8489                           ;incstack = 0
  8490                           ; Regs used in i1_I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  8491                           
  8492                           
  8493                           ;I2C.c: 57:     I2C_Master_Wait();
  8494     16E2  160A  118A  2710  160A  118A  	fcall	i1_I2C_Master_Wait
  8495     16E7                     i1l2447:
  8496                           
  8497                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  8498     16E7  1683               	bsf	3,5	;RP0=1, select bank1
  8499     16E8  1303               	bcf	3,6	;RP1=0, select bank1
  8500     16E9  1511               	bsf	17,2	;volatile
  8501     16EA                     i1l299:
  8502     16EA  0008               	return
  8503     16EB                     __end_ofi1_I2C_Master_Stop:
  8504                           
  8505                           	psect	text47
  8506     16D9                     __ptext47:	
  8507 ;; *************** function i1_I2C_Master_Start *****************
  8508 ;; Defined at:
  8509 ;;		line 39 in file "I2C.c"
  8510 ;; Parameters:    Size  Location     Type
  8511 ;;		None
  8512 ;; Auto vars:     Size  Location     Type
  8513 ;;		None
  8514 ;; Return value:  Size  Location     Type
  8515 ;;                  1    wreg      void 
  8516 ;; Registers used:
  8517 ;;		wreg, status,2, status,0, pclath, cstack
  8518 ;; Tracked objects:
  8519 ;;		On entry : 0/0
  8520 ;;		On exit  : 0/0
  8521 ;;		Unchanged: 0/0
  8522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8523 ;;      Params:         0       0       0       0       0
  8524 ;;      Locals:         0       0       0       0       0
  8525 ;;      Temps:          0       0       0       0       0
  8526 ;;      Totals:         0       0       0       0       0
  8527 ;;Total ram usage:        0 bytes
  8528 ;; Hardware stack levels used: 1
  8529 ;; Hardware stack levels required when called: 1
  8530 ;; This function calls:
  8531 ;;		i1_I2C_Master_Wait
  8532 ;; This function is called by:
  8533 ;;		i1_Set_sec
  8534 ;;		i1_Set_min
  8535 ;;		i1_Set_hour
  8536 ;;		i1_Set_day
  8537 ;;		i1_Set_month
  8538 ;;		i1_Set_year
  8539 ;; This function uses a non-reentrant model
  8540 ;;
  8541                           
  8542     16D9                     i1_I2C_Master_Start:	
  8543                           ;psect for function i1_I2C_Master_Start
  8544                           
  8545     16D9                     i1l2441:	
  8546                           ;incstack = 0
  8547                           ; Regs used in i1_I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  8548                           
  8549                           
  8550                           ;I2C.c: 41:     I2C_Master_Wait();
  8551     16D9  160A  118A  2710  160A  118A  	fcall	i1_I2C_Master_Wait
  8552     16DE                     i1l2443:
  8553                           
  8554                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  8555     16DE  1683               	bsf	3,5	;RP0=1, select bank1
  8556     16DF  1303               	bcf	3,6	;RP1=0, select bank1
  8557     16E0  1411               	bsf	17,0	;volatile
  8558     16E1                     i1l293:
  8559     16E1  0008               	return
  8560     16E2                     __end_ofi1_I2C_Master_Start:
  8561                           
  8562                           	psect	text48
  8563     1710                     __ptext48:	
  8564 ;; *************** function i1_I2C_Master_Wait *****************
  8565 ;; Defined at:
  8566 ;;		line 32 in file "I2C.c"
  8567 ;; Parameters:    Size  Location     Type
  8568 ;;		None
  8569 ;; Auto vars:     Size  Location     Type
  8570 ;;		None
  8571 ;; Return value:  Size  Location     Type
  8572 ;;                  1    wreg      void 
  8573 ;; Registers used:
  8574 ;;		wreg, status,2
  8575 ;; Tracked objects:
  8576 ;;		On entry : 0/0
  8577 ;;		On exit  : 0/0
  8578 ;;		Unchanged: 0/0
  8579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8580 ;;      Params:         0       0       0       0       0
  8581 ;;      Locals:         0       0       0       0       0
  8582 ;;      Temps:          0       0       0       0       0
  8583 ;;      Totals:         0       0       0       0       0
  8584 ;;Total ram usage:        0 bytes
  8585 ;; Hardware stack levels used: 1
  8586 ;; This function calls:
  8587 ;;		Nothing
  8588 ;; This function is called by:
  8589 ;;		i1_I2C_Master_Start
  8590 ;;		i1_I2C_Master_Stop
  8591 ;;		i1_I2C_Master_Write
  8592 ;; This function uses a non-reentrant model
  8593 ;;
  8594                           
  8595     1710                     i1_I2C_Master_Wait:	
  8596                           ;psect for function i1_I2C_Master_Wait
  8597                           
  8598     1710                     i1l2201:	
  8599                           ;incstack = 0
  8600                           ; Regs used in i1_I2C_Master_Wait: [wreg+status,2]
  8601                           
  8602     1710                     i1l287:	
  8603                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  8604                           
  8605     1710  1683               	bsf	3,5	;RP0=1, select bank1
  8606     1711  1303               	bcf	3,6	;RP1=0, select bank1
  8607     1712  1914               	btfsc	20,2	;volatile
  8608     1713  2F15               	goto	u186_21
  8609     1714  2F16               	goto	u186_20
  8610     1715                     u186_21:
  8611     1715  2F10               	goto	i1l287
  8612     1716                     u186_20:
  8613     1716                     i1l2203:
  8614     1716  0811               	movf	17,w	;volatile
  8615     1717  391F               	andlw	31
  8616     1718  1D03               	btfss	3,2
  8617     1719  2F1B               	goto	u187_21
  8618     171A  2F1C               	goto	u187_20
  8619     171B                     u187_21:
  8620     171B  2F10               	goto	i1l287
  8621     171C                     u187_20:
  8622     171C                     i1l290:
  8623     171C  0008               	return
  8624     171D                     __end_ofi1_I2C_Master_Wait:
  8625                           
  8626                           	psect	text49
  8627     172A                     __ptext49:	
  8628 ;; *************** function i1_Dec_to_Bcd *****************
  8629 ;; Defined at:
  8630 ;;		line 524 in file "main.c"
  8631 ;; Parameters:    Size  Location     Type
  8632 ;;  dec_number      1    wreg     unsigned char 
  8633 ;; Auto vars:     Size  Location     Type
  8634 ;;  dec_number      1    0[COMMON] unsigned char 
  8635 ;;  bcd_number      1    1[COMMON] unsigned char 
  8636 ;; Return value:  Size  Location     Type
  8637 ;;                  1    wreg      unsigned char 
  8638 ;; Registers used:
  8639 ;;		wreg, status,2, status,0
  8640 ;; Tracked objects:
  8641 ;;		On entry : 0/0
  8642 ;;		On exit  : 0/0
  8643 ;;		Unchanged: 0/0
  8644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8645 ;;      Params:         0       0       0       0       0
  8646 ;;      Locals:         2       0       0       0       0
  8647 ;;      Temps:          0       0       0       0       0
  8648 ;;      Totals:         2       0       0       0       0
  8649 ;;Total ram usage:        2 bytes
  8650 ;; Hardware stack levels used: 1
  8651 ;; This function calls:
  8652 ;;		Nothing
  8653 ;; This function is called by:
  8654 ;;		i1_Set_sec
  8655 ;;		i1_Set_min
  8656 ;;		i1_Set_hour
  8657 ;;		i1_Set_day
  8658 ;;		i1_Set_month
  8659 ;;		i1_Set_year
  8660 ;; This function uses a non-reentrant model
  8661 ;;
  8662                           
  8663     172A                     i1_Dec_to_Bcd:	
  8664                           ;psect for function i1_Dec_to_Bcd
  8665                           
  8666                           
  8667                           ;incstack = 0
  8668                           ; Regs used in i1_Dec_to_Bcd: [wreg+status,2+status,0]
  8669                           ;i1Dec_to_Bcd@dec_number stored from wreg
  8670     172A  00F0               	movwf	i1Dec_to_Bcd@dec_number
  8671     172B                     i1l2429:
  8672                           
  8673                           ;main.c: 525:     uint8_t bcd_number;;main.c: 526:     bcd_number = 0;
  8674     172B  01F1               	clrf	i1Dec_to_Bcd@bcd_number
  8675     172C                     i1l2431:
  8676                           
  8677                           ;main.c: 528:         if (dec_number >= 10){
  8678     172C  300A               	movlw	10
  8679     172D  0270               	subwf	i1Dec_to_Bcd@dec_number,w
  8680     172E  1C03               	skipc
  8681     172F  2F31               	goto	u228_21
  8682     1730  2F32               	goto	u228_20
  8683     1731                     u228_21:
  8684     1731  2F39               	goto	i1l2435
  8685     1732                     u228_20:
  8686     1732                     i1l2433:
  8687                           
  8688                           ;main.c: 529:             dec_number = dec_number - 10;
  8689     1732  0870               	movf	i1Dec_to_Bcd@dec_number,w
  8690     1733  3EF6               	addlw	246
  8691     1734  00F0               	movwf	i1Dec_to_Bcd@dec_number
  8692                           
  8693                           ;main.c: 530:             bcd_number = bcd_number + 0b00010000;
  8694     1735  0871               	movf	i1Dec_to_Bcd@bcd_number,w
  8695     1736  3E10               	addlw	16
  8696     1737  00F1               	movwf	i1Dec_to_Bcd@bcd_number
  8697                           
  8698                           ;main.c: 531:         }
  8699     1738  2F2C               	goto	i1l2431
  8700     1739                     i1l2435:
  8701                           
  8702                           ;main.c: 533:             bcd_number = bcd_number + dec_number;
  8703     1739  0870               	movf	i1Dec_to_Bcd@dec_number,w
  8704     173A  0771               	addwf	i1Dec_to_Bcd@bcd_number,w
  8705     173B  00F1               	movwf	i1Dec_to_Bcd@bcd_number
  8706     173C                     i1l2437:	
  8707                           ;main.c: 534:             break;
  8708                           
  8709                           
  8710                           ;main.c: 537:     return bcd_number;
  8711     173C  0871               	movf	i1Dec_to_Bcd@bcd_number,w
  8712     173D                     i1l252:
  8713     173D  0008               	return
  8714     173E                     __end_ofi1_Dec_to_Bcd:
  8715     007E                     btemp	set	126	;btemp
  8716     007E                     wtemp0	set	126
  8717                           
  8718                           	psect	idloc
  8719                           
  8720                           ;Config register IDLOC0 @ 0x2000
  8721                           ;	unspecified, using default values
  8722     2000                     	org	8192
  8723     2000  3FFF               	dw	16383
  8724                           
  8725                           ;Config register IDLOC1 @ 0x2001
  8726                           ;	unspecified, using default values
  8727     2001                     	org	8193
  8728     2001  3FFF               	dw	16383
  8729                           
  8730                           ;Config register IDLOC2 @ 0x2002
  8731                           ;	unspecified, using default values
  8732     2002                     	org	8194
  8733     2002  3FFF               	dw	16383
  8734                           
  8735                           ;Config register IDLOC3 @ 0x2003
  8736                           ;	unspecified, using default values
  8737     2003                     	org	8195
  8738     2003  3FFF               	dw	16383
  8739                           
  8740                           	psect	config
  8741                           
  8742                           ;Config register CONFIG1 @ 0x2007
  8743                           ;	Oscillator Selection bits
  8744                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  8745                           ;	Watchdog Timer Enable bit
  8746                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  8747                           ;	Power-up Timer Enable bit
  8748                           ;	PWRTE = OFF, PWRT disabled
  8749                           ;	RE3/MCLR pin function select bit
  8750                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  8751                           ;	Code Protection bit
  8752                           ;	CP = OFF, Program memory code protection is disabled
  8753                           ;	Data Code Protection bit
  8754                           ;	CPD = OFF, Data memory code protection is disabled
  8755                           ;	Brown Out Reset Selection bits
  8756                           ;	BOREN = OFF, BOR disabled
  8757                           ;	Internal External Switchover bit
  8758                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  8759                           ;	Fail-Safe Clock Monitor Enabled bit
  8760                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  8761                           ;	Low Voltage Programming Enable bit
  8762                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  8763                           ;	In-Circuit Debugger Mode bit
  8764                           ;	DEBUG = 0x1, unprogramme  8765     2007                     	org	8199
  8766     2007  20D4               	dw	8404
  8767                           
  8768                           ;Config register CONFIG2 @ 0x2008
  8769                           ;	Brown-out Reset Selection bit
  8770                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  8771                           ;	Flash Program Memory Self Write Enable bits
  8772                           ;	WRT = OFF, Write protection off
  8773     2008                     	org	8200
  8774     2008  3FFF               	dw	16383

Data Sizes:
    Strings     100
    Constant    10
    Data        0
    BSS         37
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      12
    BANK0            80     39      75
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_16(CODE[16]), STR_14(CODE[16]), STR_12(CODE[16]), STR_10(CODE[18]), 
		 -> STR_8(CODE[18]), STR_6(CODE[17]), STR_4(CODE[17]), STR_3(CODE[15]), 
		 -> STR_2(CODE[9]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> buffer(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> STR_17(CODE[3]), STR_15(CODE[3]), STR_13(CODE[3]), STR_11(CODE[3]), 
		 -> STR_9(CODE[3]), STR_7(CODE[3]), STR_5(CODE[3]), buffer(BANK0[20]), 
		 -> STR_1(CODE[4]), 

    Read_Date@y	PTR unsigned char  size(1) Largest target is 1
		 -> ano(BANK0[1]), 

    Read_Date@month	PTR unsigned char  size(1) Largest target is 1
		 -> mes(BANK0[1]), 

    Read_Date@d	PTR unsigned char  size(1) Largest target is 1
		 -> dia(BANK0[1]), 

    Read_Time@h	PTR unsigned char  size(1) Largest target is 1
		 -> hora(BANK0[1]), 

    Read_Time@m	PTR unsigned char  size(1) Largest target is 1
		 -> minuto(BANK0[1]), 

    Read_Time@s	PTR unsigned char  size(1) Largest target is 1
		 -> segundo(BANK0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->i1_Set_day
    _isr->i1_Set_hour
    _isr->i1_Set_min
    _isr->i1_Set_month
    _isr->i1_Set_sec
    _isr->i1_Set_year
    i1_Set_year->i1_I2C_Master_Write
    i1_Set_sec->i1_I2C_Master_Write
    i1_Set_month->i1_I2C_Master_Write
    i1_Set_min->i1_I2C_Master_Write
    i1_Set_hour->i1_I2C_Master_Write
    i1_Set_day->i1_I2C_Master_Write
    i1_I2C_Master_Write->i1_Dec_to_Bcd

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _map->___awdiv
    ___awdiv->___wmul
    ___awmod->___awdiv
    _Set_year->_I2C_Master_Write
    _Set_sec->_I2C_Master_Write
    _Set_month->_I2C_Master_Write
    _Set_min->_I2C_Master_Write
    _Set_hour->_I2C_Master_Write
    _Set_day->_I2C_Master_Write
    _Read_Time->_Read
    _Read_Date->_Read
    _Read->_I2C_Master_Read
    _I2C_Master_Write->_Dec_to_Bcd
    _Bcd_to_Dec->___bmul
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   29968
                                             33 BANK0      6     6      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                          _Read_Date
                          _Read_Time
                            _Set_day
                           _Set_hour
                            _Set_min
                          _Set_month
                            _Set_sec
                           _Set_year
                            ___awdiv
                            ___awmod
                             ___wmul
                                _map
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             27    20      7    3481
                                             14 BANK0     19    12      7
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     588
                    _I2C_Master_Init
                           _ioc_init
 ---------------------------------------------------------------------------------
 (2) _ioc_init                                             1     1      0     176
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                             14 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _map                                                 10     2      8    2066
                                             15 BANK0     10     2      8
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     852
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     756
                                              6 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     600
                                             15 BANK0      7     3      4
                            ___awdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Set_year                                             3     3      0    1852
                                              4 BANK0      3     3      0
                         _Dec_to_Bcd
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _Set_sec                                              3     3      0    1852
                                              4 BANK0      3     3      0
                         _Dec_to_Bcd
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _Set_month                                            3     3      0    1852
                                              4 BANK0      3     3      0
                         _Dec_to_Bcd
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _Set_min                                              3     3      0    1852
                                              4 BANK0      3     3      0
                         _Dec_to_Bcd
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _Set_hour                                             3     3      0    1852
                                              4 BANK0      3     3      0
                         _Dec_to_Bcd
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _Set_day                                              3     3      0    1852
                                              4 BANK0      3     3      0
                         _Dec_to_Bcd
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _Dec_to_Bcd                                           2     2      0     136
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Read_Time                                            3     1      2    2423
                                             10 BANK0      3     1      2
                         _Bcd_to_Dec
                               _Read
 ---------------------------------------------------------------------------------
 (1) _Read_Date                                            3     1      2    2423
                                             10 BANK0      3     1      2
                         _Bcd_to_Dec
                               _Read
 ---------------------------------------------------------------------------------
 (2) _Read                                                 4     4      0    1937
                                              6 BANK0      4     4      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    1694
                                              2 BANK0      2     0      2
                         _Dec_to_Bcd (ARG)
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      6     4      2     197
                                              0 BANK0      6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Bcd_to_Dec                                           4     4      0     235
                                              4 BANK0      4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     168
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2    1580
                                              3 BANK0      7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0     198
                                              1 BANK0      2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       5     4      1    1624
                                              4 BANK0      3     2      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     374
                                              4 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     198
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     198
                                              1 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     176
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  4     4      0    3888
                                              7 COMMON     4     4      0
                          i1_Set_day
                         i1_Set_hour
                          i1_Set_min
                        i1_Set_month
                          i1_Set_sec
                         i1_Set_year
 ---------------------------------------------------------------------------------
 (6) i1_Set_year                                           3     3      0     648
                                              4 COMMON     3     3      0
                       i1_Dec_to_Bcd
                 i1_I2C_Master_Start
                  i1_I2C_Master_Stop
                 i1_I2C_Master_Write
 ---------------------------------------------------------------------------------
 (6) i1_Set_sec                                            3     3      0     648
                                              4 COMMON     3     3      0
                       i1_Dec_to_Bcd
                 i1_I2C_Master_Start
                  i1_I2C_Master_Stop
                 i1_I2C_Master_Write
 ---------------------------------------------------------------------------------
 (6) i1_Set_month                                          3     3      0     648
                                              4 COMMON     3     3      0
                       i1_Dec_to_Bcd
                 i1_I2C_Master_Start
                  i1_I2C_Master_Stop
                 i1_I2C_Master_Write
 ---------------------------------------------------------------------------------
 (6) i1_Set_min                                            3     3      0     648
                                              4 COMMON     3     3      0
                       i1_Dec_to_Bcd
                 i1_I2C_Master_Start
                  i1_I2C_Master_Stop
                 i1_I2C_Master_Write
 ---------------------------------------------------------------------------------
 (6) i1_Set_hour                                           3     3      0     648
                                              4 COMMON     3     3      0
                       i1_Dec_to_Bcd
                 i1_I2C_Master_Start
                  i1_I2C_Master_Stop
                 i1_I2C_Master_Write
 ---------------------------------------------------------------------------------
 (6) i1_Set_day                                            3     3      0     648
                                              4 COMMON     3     3      0
                       i1_Dec_to_Bcd
                 i1_I2C_Master_Start
                  i1_I2C_Master_Stop
                 i1_I2C_Master_Write
 ---------------------------------------------------------------------------------
 (7) i1_I2C_Master_Write                                   2     0      2     490
                                              2 COMMON     2     0      2
                       i1_Dec_to_Bcd (ARG)
                  i1_I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (7) i1_I2C_Master_Stop                                    0     0      0       0
                  i1_I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (7) i1_I2C_Master_Start                                   0     0      0       0
                  i1_I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (8) i1_I2C_Master_Wait                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) i1_Dec_to_Bcd                                         2     2      0     136
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _Dec_to_Bcd (ARG)
     _I2C_Master_Wait (ARG)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _Read_Date
     _Bcd_to_Dec
       ___bmul
     _Read
       _I2C_Master_Read
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
       _I2C_Master_Stop
       _I2C_Master_Write
   _Read_Time
     _Bcd_to_Dec
     _Read
   _Set_day
     _Dec_to_Bcd
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
   _Set_hour
     _Dec_to_Bcd
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
   _Set_min
     _Dec_to_Bcd
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
   _Set_month
     _Dec_to_Bcd
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
   _Set_sec
     _Dec_to_Bcd
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
   _Set_year
     _Dec_to_Bcd
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
   ___awdiv
     ___wmul (ARG)
   ___awmod
     ___awdiv (ARG)
     ___wmul (ARG)
   ___wmul
   _map
     ___awdiv
     ___wmul
   _setup
     _I2C_Master_Init
       ___lldiv
     _ioc_init
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit

 _isr (ROOT)
   i1_Set_day
     i1_Dec_to_Bcd
     i1_I2C_Master_Start
       i1_I2C_Master_Wait
     i1_I2C_Master_Stop
       i1_I2C_Master_Wait
     i1_I2C_Master_Write
       i1_Dec_to_Bcd (ARG)
       i1_I2C_Master_Wait (ARG)
   i1_Set_hour
     i1_Dec_to_Bcd
     i1_I2C_Master_Start
     i1_I2C_Master_Stop
     i1_I2C_Master_Write
   i1_Set_min
     i1_Dec_to_Bcd
     i1_I2C_Master_Start
     i1_I2C_Master_Stop
     i1_I2C_Master_Write
   i1_Set_month
     i1_Dec_to_Bcd
     i1_I2C_Master_Start
     i1_I2C_Master_Stop
     i1_I2C_Master_Write
   i1_Set_sec
     i1_Dec_to_Bcd
     i1_I2C_Master_Start
     i1_I2C_Master_Stop
     i1_I2C_Master_Write
   i1_Set_year
     i1_Dec_to_Bcd
     i1_I2C_Master_Start
     i1_I2C_Master_Stop
     i1_I2C_Master_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      57       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     27      4B       5       93.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      57      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Aug 08 17:34:14 2023

                               pc 0002                    ___bmul@product 0022                       map@inputmax 0031  
                     map@inputmin 002F                        _Bcd_to_Dec 179B                      ___awdiv@sign 002C  
                              fsr 0004               ___wmul@multiplicand 0022                               l103 09F5  
                             l220 0D14                               l116 03C1                               l302 0809  
                             l223 09BE                               l320 0B8F                               l232 0AD8  
                             l321 0B95                               l305 094A                               l241 0B11  
                             l217 0C39                               l330 0BB2                               l322 0B96  
                             l306 094D                               l226 0989                               l331 0BB8  
                             l323 0B9C                               l307 0954                               l235 0A9F  
                             l332 0BB9                               l324 0B9D                               l252 1767  
                             l244 0B4A                               l333 0BBF                               l325 0BA3  
                             l341 1729                               l229 0A2D                               l326 0BA4  
                             l350 0D6D                               l238 0A66                               l335 0BC0  
                             l327 0BAA                               l319 0B8E                               l255 17B6  
                             l503 0F34                               l328 0BAB                               l520 0FFF  
                             l329 0BB1                               l353 07FE                               l338 179A  
                             l290 06FA                               l347 17D8                               l524 17E7  
                             l284 0B84                               l293 16FC                               l550 177E  
                             l526 17FF                               l359 0C7F                               l287 06EE  
                             l383 0E27                               l296 16F3                               l560 06ED  
                             l384 0E28                               l482 0E43                               l299 1705  
                             l806 0BFC                               l494 0ED0                               l496 0EAC  
                             l690 0DC8                               l677 07E6                               l796 0CC5  
                             l977 1751                               _GIE 005F                               _dia 0067  
                             _ano 0065                               _map 09BF                               _mes 0066  
                             _isr 03C5                               fsr0 0004                               indf 0000  
                    ___awmod@sign 0035                        _Dec_to_Bcd 1752                              l2111 06F4  
                            l2121 0923                              l2113 16F4                              l2131 0946  
                            l2123 0928                              l2115 16F9                              l2211 0DDC  
                            l2301 07EA                              l2109 06EE                              l2133 094E  
                            l2125 0930                              l2141 16EB                              l2117 0800  
                            l2221 0DF9                              l2213 0DE3                              l2205 0DCC  
                            l2151 0B9A                              l2303 07EB                              l2127 0939  
                            l2143 16F0                              l2119 0805                              l2231 0E13  
                            l2223 0DFD                              l2215 0DE7                              l2207 0DD0  
                            l2311 1741                              l2161 0BBD                              l2153 0BA1  
                            l2145 0B88                              l2305 07F1                              l2129 093E  
                            l2137 16FD                              l2241 0B4F                              l2233 0E19  
                            l2225 0E04                              l2217 0DEE                              l2209 0DD8  
                            l2401 0CBB                              l2313 1742                              l2155 0BA8  
                            l2147 0B8C                              l2307 07F4                              l2171 1776  
                            l2163 176B                              l2139 1702                              l2251 0CC9  
                            l2331 17F5                              l2323 17D9                              l2243 0B52  
                            l2235 0E1D                              l2227 0E08                              l2219 0DF2  
                            l2403 0CC1                              l2411 0BCC                              l2315 1748  
                            l2157 0BAF                              l2149 0B93                              l2501 17BA  
                            l2309 07FB                              l2173 177D                              l2165 176C  
                            l2261 0CEC                              l2253 0CC9                              l2341 0785  
                            l2333 17FB                              l2325 17DD                              l2181 069B  
                            l2245 0B81                              l2237 0E23                              l2229 0E0F  
                            l2421 0BEB                              l2413 0BD3                              l2317 174E  
                            l2159 0BB6                              l2511 17D2                              l2503 17BF  
                            l2167 1770                              l2263 0CF7                              l2255 0CCE  
                            l2351 0799                              l2343 078A                              l2327 17E1  
                            l2191 06D5                              l2183 06A8                              l2247 0B82  
                            l2239 0B4B                              l2423 0BF2                              l2415 0BD7  
                            l2407 0BC1                              l2319 1750                              l2505 17C2  
                            l2513 0C3A                              l2169 1774                              l2273 179E  
                            l2265 0D05                              l2257 0CD9                              l2281 1756  
                            l2521 09F9                              l2361 07AF                              l2353 079B  
                            l2345 078C                              l2337 077E                              l2329 17EE  
                            l2193 06D6                              l2185 06AC                              l2177 0686  
                            l2249 0B83                              l2417 0BDB                              l2409 0BC9  
                            l2425 0BF8                              l2601 0F4F                              l2291 1782  
                            l2507 17C9                              l2515 0C3F                              l2275 17B5  
                            l2267 0D0A                              l2259 0CE7                              l2283 175C  
                            l2523 0AA3                              l2531 0B15                              l2371 07D2  
                            l2363 07B3                              l2355 07A1                              l2347 0790  
                            l2339 0781                              l2195 06DF                              l2187 06B5  
                            l2179 0698                              l2419 0BE5                              l2611 0F68  
                            l2603 0F53                              l3171 0EC2                              l2293 1783  
                            l2509 17CF                              l2517 0C5B                              l2269 0D11  
                            l2285 1763                              l2525 0A6A                              l2365 07C4  
                            l2357 07A4                              l2373 07D8                              l2349 0795  
                            l2453 09C2                              l2189 06C7                              l2197 06E5  
                            l2461 0C04                              l2381 0C80                              l2621 0F89  
                            l2613 0F6D                              l2605 0F59                              l2541 0E3F  
                            l2533 0E2C                              l2295 1789                              l2519 0C63  
                            l2287 1766                              l2279 1755                              l2527 0A31  
                            l2375 07DD                              l2367 07CA                              l2359 07AB  
                            l2471 0C11                              l2463 0C05                              l2391 0C98  
                            l2383 0C84                              l2623 0F8D                              l2615 0F71  
                            l2631 0FA8                              l2607 0F5E                              l2551 0E6B  
                            l2543 0E44                              l2535 0E2F                              l2711 0036  
                            l2297 178C                              l2529 0ADC                              l2377 07E2  
                            l2369 07CB                              l2481 0C25                              l2473 0C12  
                            l2465 0C06                              l2457 0BFD                              l2393 0C9C  
                            l2385 0C8A                              l2633 0FAB                              l2625 0F99  
                            l2609 0F62                              l2617 0F7E                              l2553 0E6F  
                            l3169 0E56                              l2537 0E35                              l2641 0FEB  
                            l2801 0304                              l2721 0059                              l2713 0041  
                            l2299 1797                              l2491 0D25                              l2483 0C29  
                            l2475 0C13                              l2467 0C07                              l2459 0C01  
                            l2395 0CAD                              l2387 0C8D                              l2635 0FD9  
                            l2627 0F9F                              l2619 0F84                              l2571 0EE4  
                            l2643 0FFB                              l2555 0E84                              l2563 0EAE  
                            l2547 0E48                              l2539 0E3A                              l2811 0352  
                            l2803 0319                              l2731 009E                              l2723 005F  
                            l2715 0047                              l2493 0D35                              l2661 0D71  
                            l2485 0C2A                              l2477 0C19                              l2469 0C10  
                            l2397 0CB3                              l2389 0C94                              l2637 0FDE  
                            l2629 0FA4                              l2573 0EE8                              l2565 0ED4  
                            l2557 0E97                              l2549 0E5B                              l2821 03A0  
                            l2813 0367                              l2805 0325                              l2741 0137  
                            l2733 00BA                              l2725 0065                              l2717 004D  
                            l2709 001D                              l2495 0D3B                              l2487 0D15  
                            l2655 098D                              l2671 0D85                              l2663 0D75  
                            l2479 0C1F                              l2399 0CB4                              l2639 0FE2  
                            l2591 0F22                              l2567 0EDC                              l2575 0EEE  
                            l2559 0E9B                              l2823 03B5                              l2807 032B  
                            l2815 0373                              l2751 018D                              l2743 014D  
                            l2735 00DC                              l2727 006C                              l2719 0053  
                            l2497 0D66                              l2489 0D1B                              l2657 0958  
                            l2681 0D9D                              l2673 0D8B                              l2665 0D7A  
                            l2593 0F28                              l2585 0EFC                              l2577 0EF6  
                            l2569 0EE0                              l2817 0379                              l2809 0333  
                            l2761 01D8                              l2753 0198                              l2745 0158  
                            l2737 010D                              l2729 008F                              l2499 171D  
                            l2691 0DBF                              l2683 0DA7                              l2675 0D8E  
                            l2667 0D7C                              l2659 0D6E                              l2595 0F2E  
                            l2579 0EFA                              l2819 0381                              l2771 021A  
                            l2763 01E2                              l2755 01A4                              l2747 0164  
                            l2739 012F                              l2693 0DC4                              l2685 0DAD  
                            l2677 0D95                              l2669 0D80                              l2597 0F3F  
                            l2589 0F18                              l2781 0268                              l2773 022F  
                            l2757 01AE                              l2749 016E                              l2765 01EE  
                            ?_map 002F                              l2687 0DB4                              l2679 0D99  
                            l2599 0F4B                              l2791 02B6                              l2783 027D  
                            l2767 01F3                              l2775 023B                              l2759 01CD  
                            l2689 0DBA                              l2793 02CB                              l2777 0241  
                            l2785 0289                              l2769 01FB                              l2787 028F  
                            l2795 02D7                              l2779 0249                              l2797 02DD  
                            l2789 0297                              l2799 02E5                              ?_isr 0070  
                            STR_1 0765                              STR_2 075C                              STR_3 074D  
                            STR_4 072C                              STR_5 0775                              STR_6 072C  
                            STR_7 076C                              STR_8 071A                              STR_9 0772  
                            u2000 174E                              u2001 174D                              u2010 17E1  
                            u2011 17E0                              u2110 07C4                              u2111 07C3  
                            u2040 17FB                              u2105 07B4                              u2041 17FA  
                            u2025 17E8                              u2130 07D8                              u2050 0785  
                            u2210 0CC1                              u2131 07D7                              u2115 07C0  
                            u2051 0784                              u2035 17EF                              u2211 0CC0  
                            u2300 17CF                              u2140 07DD                              u2060 0790  
                            u2220 0BC9                              u2301 17CE                              u2141 07DC  
                            u2125 07CC                              u2061 078F                              u2205 0CB5  
                            u2221 0BC8                              u2310 0C49                              u2070 07A1  
                            u2150 0C8A                              u2071 07A0                              u2151 0C89  
                            u2320 0C6D                              u2240 0BDB                              u2400 0F22  
                            u2241 0BDA                              u2401 0F21                              u2330 0C7F  
                            u2090 07B3                              u2170 0C9C                              u2250 0BE5  
                            u2410 0F28                              u2331 0C7E                              u2091 07B2  
                            u2171 0C9B                              u2251 0BE4                              u2235 0BCD  
                            u2411 0F27                              u1700 0B93                              u2500 0F9F  
                            u2420 0F2E                              u2340 0E35                              u1701 0B92  
                            u2085 07A5                              u2165 0C8E                              u2501 0F9E  
                            u2421 0F2D                              u2341 0E34                              u1710 0B9A  
                            u2190 0CAD                              u2270 0BF8                              u2510 0FEB  
                            u2430 0F3F                              u2350 0E6B                              u1711 0B99  
                            u2191 0CAC                              u2271 0BF7                              u2255 0BE1  
                            u2511 0FEA                              u2431 0F3E                              u2351 0E6A  
                            u1720 0BA1                              u2600 0DBA                              u2520 0FFB  
                            u2440 0F53                              u2360 0EAB                              u1721 0BA0  
                            u2601 0DB9                              u2185 0C9D                              u2265 0BEC  
                            u2521 0FFA                              u2441 0F52                              u2361 0EAA  
                            u1730 0BA8                              u2290 17BF                              u2610 0DBF  
                            u2530 0D75                              u1810 06AC                              u2450 0F59  
                            u2370 0ED4                              u1731 0BA7                              u2291 17BE  
                            u2611 0DBE                              u2531 0D74                              u1811 06AB  
                            u2195 0CA9                              u2451 0F58                              u2435 0F3B  
                            u2371 0ED3                              u1740 0BAF                              u1660 06F4  
                            u2540 0D80                              u1900 0DEE                              u2460 0F68  
                            u2380 0EE4                              u2620 006C                              u1741 0BAE  
                            u1661 06F3                              u2541 0D7F                              u1805 069D  
                            u1901 0DED                              u2461 0F67                              u2381 0EE3  
                            u3317 0097                              u2621 006B                              u1750 0BB6  
                            u1670 06FA                              u2550 0D8B                              u1830 06C7  
                            u1910 0DF9                              u2470 0F7D                              u2390 0F17  
                            u2630 01F3                              u1751 0BB5                              u1671 06F9  
                            u3327 0D0E                              u2551 0D8A                              u1831 06C6  
                            u1911 0DF8                              u2471 0F7C                              u2391 0F16  
                            u2631 01F2                              u1760 0BBD                              u1680 0946  
                            u1920 0E04                              u2480 0F84                              u2640 0241  
                            u1761 0BBC                              u3337 07F8                              u1681 0945  
                            u1825 06AE                              u1921 0E03                              u2481 0F83  
                            u2641 0240                              u1690 0B8C                              u1770 1770  
                            u2570 0D9D                              u1850 06E5                              u1930 0E0F  
                            u2490 0F99                              u2650 028F                              u1691 0B8B  
                            u3347 0D21                              u1771 176F                              u2571 0D9C  
                            u1851 06E4                              u1835 06C3                              u1931 0E0E  
                            u2491 0F98                              u2395 0F13                              u2651 028E  
                            u1780 177D                              u2580 0DA7                              u1940 0E19  
                            u2660 02DD                              u3357 0D31                              u1781 177C  
                            u2581 0DA6                              u2565 0D8F                              u1845 06D7  
                            u1941 0E18                              u2661 02DC                              u1790 0698  
                            u1950 0E23                              u2670 032B                              u3367 0D3F  
                            u1791 0697                              u1951 0E22                              u2671 032A  
                            u1960 0B62                              u1880 0DD8                              u2680 0379  
                            u3377 0D6A                              u2585 0DA3                              u1881 0DD7  
                            u2681 0378                              u1890 0DE3                              u3387 1792  
                            u2595 0DAE                              u1891 0DE2                              _PEIE 005E  
                            u1980 175C                              u1981 175B                              u1965 0B5D  
                            u1990 1748                              u1975 17A6                              u1991 1747  
                            _Read 0CC6                 ?_Lcd_Write_String 0023  __end_of_I2C_Master_RepeatedStart 16F4  
                            _main 001D                              _hora 0068                              _vol1 004D  
                      Read_Date@d 002C                        Read_Date@y 002B                              btemp 007E  
                            start 000C                ??_Lcd_Write_String 0025                   __end_of_Lcd_Cmd 179B  
                      Read_Time@h 002B                        Read_Time@m 002A                        Read_Time@s 002C  
               ___bmul@multiplier 0023                             ??_map 0037                       Read@address 0028  
                           ??_isr 0077                   __end_of_Set_day 0A67                   __end_of_Set_min 0AD9  
                 __end_of_Set_sec 0A2E                  ?_I2C_Master_Init 002E                  ?_I2C_Master_Read 0020  
                ?_I2C_Master_Wait 0070                  ?_I2C_Master_Stop 0070                             ?_Read 0070  
                           ?_main 0070                   __end_of___awdiv 07E7                             STR_10 071A  
                           STR_11 0769                             STR_12 073D                             STR_13 076F  
                           STR_14 073D                             STR_15 077B                             STR_16 073D  
                           STR_17 0778                   __end_of___awmod 0DC9                             _ANSEL 0188  
                 __end_of___lldiv 06EE                   ___awdiv@divisor 0026                   __end_of___lwdiv 0CC6  
                           i1l202 067F                             i1l302 170F                             i1l214 067F  
                           i1l232 08C4                             i1l241 08F3                             i1l235 0895  
                           i1l139 0424                             i1l252 173D                             i1l244 0922  
                           i1l229 0837                             i1l238 0866                             i1l177 05B8  
                 __end_of___lwmod 0BFD                             i1l290 171C                             i1l293 16E1  
                           i1l287 1710                             i1l299 16EA                   ___awdiv@counter 002B  
                           _PORTA 0005                             _PORTB 0006                             _PORTC 0007  
                           _PORTD 0008                             _PORTE 0009                             _TRISD 0088  
                           _SSPIE 0463                             _SSPIF 0063                   __end_of_dpowers 071A  
                 __end_of_isdigit 1752                             _setup 0BFD                             pclath 000A  
                           status 0003                             wtemp0 007E                   __end_of_sprintf 1000  
                     ioc_init@pin 0020                       ?i1_Set_hour 0070                       ?i1_Set_year 0070  
                __end_of_Lcd_Init 0D6E                  __end_of_Lcd_Port 0BC1                   __initialization 000F  
                    __end_of_Read 0D15                      __end_of_main 03C5                       ?_Bcd_to_Dec 0070  
                          ??_Read 0026                            ??_main 0041            i1Dec_to_Bcd@bcd_number 0071  
                __end_of_Set_hour 0AA0                  __end_of_Set_year 0B4B                        Set_day@day 0026  
               ?_I2C_Master_Start 0070                 ?_I2C_Master_Write 0022                       ?_Dec_to_Bcd 0070  
              ??_I2C_Master_Start 0020                ??_I2C_Master_Write 0024                        Set_min@min 0026  
                ___awdiv@dividend 0028                        Set_sec@sec 0026                            ?_setup 0070  
                          _ANSELH 0189            i1Dec_to_Bcd@dec_number 0070                            i1l2201 1710  
                          i1l3001 0571                            i1l2203 1716                            i1l3011 0586  
                          i1l3101 0652                            i1l3021 059E                            i1l3013 058D  
                          i1l3005 0578                            i1l3103 0653                            i1l3111 0663  
                          i1l3023 05A4                            i1l3015 0591                            i1l3007 057E  
                          i1l3121 0678                            i1l3113 0669                            i1l3105 065A  
                          i1l3041 05D5                            i1l3025 05A6                            i1l3009 0584  
                          i1l3033 05B8                            i1l3115 066E                            i1l3107 065C  
                          i1l3051 05EA                            i1l3043 05DA                            i1l3035 05BE  
                          i1l3027 05AD                            i1l3019 0598                            i1l3117 066F  
                          i1l3061 05FF                            i1l3053 05F0                            i1l3045 05DF  
                          i1l3037 05C9                            i1l3029 05B1                            i1l2431 172C  
                          i1l3119 0676                            i1l3071 0615                            i1l3063 0606  
                          i1l3047 05E1                            i1l3055 05F2                            i1l3039 05CF  
                          i1l2433 1732                            i1l2441 16D9                            i1l3073 061A  
                          i1l3065 0608                            i1l3057 05F8                            i1l3049 05E8  
                          i1l2435 1739                            i1l2443 16DE                            i1l2451 170B  
                          i1l3091 063E                            i1l3075 061B                            i1l3083 062B  
                          i1l3059 05FD                            i1l2437 173C                            i1l2429 172B  
                          i1l2445 16E2                            i1l2701 0868                            i1l3093 0640  
                          i1l3085 0631                            i1l3077 0622                            i1l3069 060F  
                          i1l2447 16E7                            i1l2703 0839                            i1l3087 0636  
                          i1l3079 0624                            i1l2449 1706                            i1l2705 08C6  
                          i1l3089 0637                            i1l3097 0647                            i1l2707 08F5  
                          i1l3099 064D                            i1l2901 046D                            i1l2903 0473  
                          i1l2911 0487                            i1l2831 03D9                            i1l2921 04A5  
                          i1l2913 048D                            i1l2905 0475                            i1l2841 03ED  
                          i1l2833 03DB                            i1l2825 03C5                            i1l2931 04BF  
                          i1l2923 04A7                            i1l2915 0493                            i1l2907 047C  
                          i1l2851 03FD                            i1l2843 03EF                            i1l2835 03E1  
                          i1l2827 03C9                            i1l2933 04C5                            i1l2925 04AE  
                          i1l2917 0499                            i1l2909 0480                            i1l2941 04D8  
                          i1l2861 0409                            i1l2845 03F4                            i1l2837 03E6  
                          i1l2829 03D0                            i1l2951 04EF                            i1l2935 04C7  
                          i1l2927 04B2                            i1l2919 049F                            i1l2943 04DA  
                          i1l2863 040F                            i1l2855 0400                            i1l2839 03EB  
                          u300_20 04E6                            i1l2697 080B                            i1l2961 050D  
                          i1l2953 04F3                            u300_21 04E5                            i1l2945 04E0  
                          i1l2937 04CE                            i1l2929 04B9                            i1l2881 0433  
                          i1l2873 041B                            i1l2857 0406                            i1l2849 03F7  
                          i1l2699 0897                            i1l2971 052A                            i1l2963 0513  
                          i1l2955 04F9                            i1l2947 04E6                            i1l2939 04D2  
                          i1l2891 044F                            i1l2883 0439                            i1l2875 0421  
                          i1l2867 0412                            i1l2981 0544                            i1l2973 0531  
                          i1l2965 0518                            i1l2957 0501                            i1l2949 04E8  
                          i1l2893 0455                            i1l2885 043F                            i1l2869 0418  
                          i1l2877 0424                            i1l2983 0546                            i1l2991 0558  
                          i1l2967 051F                            i1l2959 0507                            i1l2895 045B  
                          i1l2887 0444                            i1l2879 0428                            u301_20 0501  
                          i1l2993 055E                            i1l2985 054D                            i1l2969 0525  
                          u301_21 0500                            i1l2977 0538                            i1l2897 0461  
                          i1l2889 0449                            i1l2995 0564                            i1l2987 0551  
                          i1l2979 053E                            i1l2899 0467                            i1l2997 0566  
                          i1l2999 056D                            u310_20 055E                            u302_20 0507  
                          u310_21 055D                            u302_21 0506                            u311_20 0564  
                          u303_20 050D                            u311_21 0563                            u303_21 050C  
                          u320_20 05DF                            u312_20 057E                            u304_20 0513  
                          u320_21 05DE                            u312_21 057D                            u304_21 0512  
                          u321_20 05F8                            u313_20 0584                            u305_20 0518  
                          u321_21 05F7                            u313_21 0583                            u305_21 0517  
                          u330_20 066E                            u322_20 05FD                            u314_20 059E  
                          u306_20 0525                            u330_21 066D                            u322_21 05FC  
                          u314_21 059D                            u306_21 0524                            u323_20 0615  
                          u315_20 05A4                            u307_20 052A                            u323_21 0614  
                          u315_21 05A3                            u307_21 0529                            u228_20 1732  
                          u324_20 061A                            u316_20 05BE                            u308_20 053E  
                          u228_21 1731                            u324_21 0619                            u316_21 05BD  
                          u308_21 053D                            u340_27 042E                            u325_20 0631  
                          u317_20 05CF                            u309_20 0544                            u325_21 0630  
                          u317_21 05CE                            u309_21 0543                            u341_27 05C4  
                          u326_20 0636                            u318_20 05D5                            u270_20 03D0  
                          u326_21 0635                            u318_21 05D4                            u270_21 03CF  
                          u327_20 064D                            u319_20 05DA                            u271_20 03E1  
                          u327_21 064C                            u319_21 05D9                            u271_21 03E0  
                          u328_20 0652                            u280_20 0428                            u272_20 03E6  
                          u328_21 0651                            u280_21 0427                            u272_21 03E5  
                          u329_20 0669                            u281_20 0439                            u273_20 03EB  
                          u329_21 0668                            u281_21 0438                            u273_21 03EA  
                          u186_20 1716                            u290_20 046D                            u282_20 043F  
                          u274_20 03F4                            u186_21 1715                            u290_21 046C  
                          u282_21 043E                            u274_21 03F3                            u187_20 171C  
                          u291_20 0473                            u283_20 0444                            u275_20 03FD  
                          u187_21 171B                            u291_21 0472                            u283_21 0443  
                          u275_21 03FC                            u339_27 03D4                            u292_20 048D  
                          u284_20 0449                            u276_20 0406                            u292_21 048C  
                          u284_21 0448                            u276_21 0405                            u293_20 0493  
                          u285_20 044F                            u277_20 040F                            u269_20 03C9  
                          u293_21 0492                            u285_21 044E                            u277_21 040E  
                          u269_21 03C8                            u294_20 0499                            u286_20 0455  
                          u278_20 0418                            u294_21 0498                            u286_21 0454  
                          u278_21 0417                            u295_20 049F                            u287_20 045B  
                          u279_20 0421                            u295_21 049E                            u287_21 045A  
                          u279_21 0420                            u296_20 04A5                            u288_20 0461  
                          u296_21 04A4                            u288_21 0460                            u297_20 04BF  
                          u289_20 0467                            u297_21 04BE                            u289_21 0466  
                          u298_20 04C5                            u298_21 04C4                            u299_20 04E0  
                          u299_21 04DF                         ??_Lcd_Cmd 0021                            _SSPADD 0093  
                          _TRISC3 043B                            _TRISC4 043C                            _SSPCON 0014  
                          _SSPBUF 0013                         ??_Set_day 0024                         ??_Set_min 0024  
                       ??_Set_sec 0024          _I2C_Master_RepeatedStart 16EB                            ___bmul 1768  
                          ___wmul 17D9                         ??___awdiv 002A                         ??___awmod 0033  
                __end_of_ioc_init 0E29                         ??___lldiv 0028                         ??___lwdiv 0024  
                       ??___lwmod 002C                            _buffer 0051                  ___awdiv@quotient 002D  
                          _minuto 0069                 __end_ofi1_Set_day 0867                   ___awmod@divisor 002F  
               __end_ofi1_Set_min 08C5                 __end_ofi1_Set_sec 0838                   ___awmod@counter 0034  
                i1Set_month@month 0076              Dec_to_Bcd@bcd_number 0021                         ??_isdigit 0020  
                          saved_w 007E                         ??_sprintf 0035                   Lcd_Set_Cursor@a 0025  
                 Lcd_Set_Cursor@b 0024              Dec_to_Bcd@dec_number 0020                      ?i1_Set_month 0070  
         __end_of__initialization 0019                 __end_of_Lcd_Clear 172A               ___bmul@multiplicand 0020  
                  __pcstackCOMMON 0070                     __end_of_setup 0C3A                 __end_of_Read_Date 098A  
               __end_of_Read_Time 09BF                    _Lcd_Set_Cursor 17B7                    _OPTION_REGbits 0081  
                       ?_Lcd_Init 0070                         ?_Lcd_Port 0070                      sprintf@width 003D  
                         ??_setup 0036                        __pbssBANK0 0047                 __end_of_Set_month 0B12  
             i1I2C_Master_Write@d 0072                         ?_Set_hour 0070                        __pmaintext 001D  
                       ?_Set_year 0070                     ?i1_Dec_to_Bcd 0070                           ?___bmul 0020  
                         ?___wmul 0020                        _centesima1 0047                        __pintentry 0004  
          __end_of_Lcd_Set_Cursor 17D9                        ??_Lcd_Init 0024                        ??_Lcd_Port 0020  
                         _SSPCON2 0091                           _SSPSTAT 0094                        __stringtab 0700  
                       ?_ioc_init 0070                    _Lcd_Write_Char 07E7                           _Lcd_Cmd 177F  
                    ??i1_Set_hour 0074                      ??i1_Set_year 0074                    ??i1_Dec_to_Bcd 0070  
                         _Set_day 0A2E                        ??_Set_hour 0024                           _Set_min 0AA0  
                         _Set_sec 09F6                        ??_Set_year 0024                           ___awdiv 077E  
                         ___awmod 0D6E                           ___lldiv 0686                           ___lwdiv 0C80  
                         ___lwmod 0BC1                      ??_Bcd_to_Dec 0024                           _bandera 007B  
                         _decima1 0049                   ?_Lcd_Set_Cursor 0024                           __ptext1 0E29  
                         __ptext2 173E                           __ptext3 0BC1                           __ptext4 0C80  
                         __ptext5 0BFD                           __ptext6 0DC9                           __ptext7 0B4B  
                         __ptext8 0686                           __ptext9 09BF                 i1_I2C_Master_Wait 1710  
               i1_I2C_Master_Stop 16E2                           _dpowers 0710                           _isdigit 173E  
              ?i1_I2C_Master_Wait 0070                  ___awmod@dividend 0031                ?i1_I2C_Master_Stop 0070  
              __end_ofi1_Set_hour 0896                           _segundo 006A                __end_ofi1_Set_year 0923  
                    ??_Dec_to_Bcd 0020                           _unidad1 004B                           _sprintf 0E29  
                         clrloop0 16D2            __end_of_Lcd_Write_Char 07FF              end_of_initialization 0019  
             ??i1_I2C_Master_Wait 0070               ??i1_I2C_Master_Stop 0070        ??_I2C_Master_RepeatedStart 0020  
                      ??_ioc_init 0020                __end_of_Bcd_to_Dec 17B7                     Bcd_to_Dec@bcd 0027  
                   Bcd_to_Dec@dec 0026                   ___lldiv@divisor 0020                   ___lldiv@counter 002D  
                I2C_Master_Init@c 002E                  I2C_Master_Read@a 0020                         Lcd_Port@a 0020  
              __end_of_Dec_to_Bcd 1768         __end_ofi1_I2C_Master_Wait 171D         __end_ofi1_I2C_Master_Stop 16EB  
                       _PORTBbits 0006                         _PORTDbits 0008                         i1_Set_day 0838  
                       i1_Set_min 0896                         i1_Set_sec 080A                         _TRISBbits 0086  
                       _TRISCbits 0087                   ?_Lcd_Write_Char 0070                 Lcd_Write_String@a 0023  
               Lcd_Write_String@i 0028                         _Lcd_Clear 171D                    __end_of___bmul 177F  
                  __end_of___wmul 1800                  _Lcd_Write_String 0C3A        __end_ofi1_I2C_Master_Start 16E2  
      __end_ofi1_I2C_Master_Write 1710                        ?i1_Set_day 0070                        ?i1_Set_min 0070  
                      ?i1_Set_sec 0070               start_initialization 000F                         _Read_Date 0955  
            __end_ofi1_Dec_to_Bcd 173E                       __end_of_map 09F6                       __end_of_isr 0686  
                       _Read_Time 098A                 ??_I2C_Master_Init 0032                 ??_I2C_Master_Read 0022  
               ??_I2C_Master_Wait 0020                 ??_I2C_Master_Stop 0020                         _Set_month 0AD9  
                      ?_Lcd_Clear 0070                          ??___bmul 0021                          ??___wmul 0024  
                 Lcd_Write_Char@a 0022                       __pbssCOMMON 007B                         ___latbits 0002  
                   __pcstackBANK0 0020                        ?_Read_Date 002A                        ?_Read_Time 002A  
                    _isdigit$1080 0020                          ?_Lcd_Cmd 0070                       sprintf@flag 003C  
                     sprintf@prec 0038                  _I2C_Master_Start 16F4                  _I2C_Master_Write 0800  
                ___lwdiv@dividend 0022                          ?_Set_day 0070                          ?_Set_min 0070  
                        ?_Set_sec 0070                        ?_Set_month 0070                  ??_Lcd_Set_Cursor 0025  
                        ?___awdiv 0026                          ?___awmod 002F                          ?___lldiv 0020  
                        ?___lwdiv 0020                          ?___lwmod 0028                         __pstrings 0700  
                        ?_isdigit 0070                       ??i1_Set_day 0074                       ??i1_Set_min 0074  
                     ??i1_Set_sec 0074                  ___lwdiv@quotient 0025                          ?_sprintf 002E  
                    Set_hour@hour 0026                 interrupt_function 0004                    ___wmul@product 0024  
                        _IOCBbits 0096                         clear_ram0 16D1                          Lcd_Cmd@a 0023  
                     ??_Lcd_Clear 0024                      Set_year@year 0026                       __stringbase 070F  
               ___wmul@multiplier 0020                         map@outmax 0035                         map@outmin 0033  
                        Read@dato 0029                          _WPUBbits 0095                  ??_Lcd_Write_Char 0021  
                     ??_Read_Date 002C                          _Lcd_Init 0D15                       ??_Read_Time 002C  
                        _Lcd_Port 0B85               I2C_Master_Read@temp 0024                     ??i1_Set_month 0074  
        __end_of_Lcd_Write_String 0C80                    i1Set_hour@hour 0076                       ??_Set_month 0024  
                        _Set_hour 0A67                          _Set_year 0B12                      i1_Dec_to_Bcd 172A  
       ?_I2C_Master_RepeatedStart 0070                    i1Set_year@year 0076                __end_of__stringtab 0710  
                      sprintf@val 003A                   _I2C_Master_Init 0B4B                   _I2C_Master_Read 0923  
                 _I2C_Master_Wait 06EE                   _I2C_Master_Stop 16FD                   ___lwdiv@divisor 0020  
                 ___lwdiv@counter 0027                          __ptext10 17D9                          __ptext11 077E  
                        __ptext20 098A                          __ptext12 0D6E                          __ptext21 0955  
                        __ptext13 0B12                          __ptext30 1768                          __ptext22 0CC6  
                        __ptext14 09F6                          __ptext31 0C3A                          __ptext23 0800  
                        __ptext15 0AD9                          __ptext40 080A                          __ptext32 07E7  
                        __ptext24 16FD                          __ptext16 0AA0                          __ptext41 08C5  
                        __ptext33 17B7                          __ptext25 16F4                          __ptext17 0A67  
                        __ptext42 0896                          __ptext34 0D15                          __ptext26 16EB  
                        __ptext18 0A2E                          __ptext43 0867                          __ptext35 171D  
                        __ptext27 0923                          __ptext19 1752                          __ptext44 0838  
                        __ptext36 177F                          __ptext28 06EE                          __ptext45 1706  
                        __ptext37 0B85                          __ptext29 179B                          __ptext46 16E2  
                        __ptext38 03C5                          __ptext47 16D9                          __ptext39 08F4  
                        __ptext48 1710                          __ptext49 172A                i1_I2C_Master_Start 16D9  
              i1_I2C_Master_Write 1706                          _ioc_init 0DC9               ?i1_I2C_Master_Start 0070  
             ?i1_I2C_Master_Write 0072                          _selector 0050               __end_ofi1_Set_month 08F4  
                        map@value 0038                    Read_Date@month 002A                          _voltaje1 004F  
            ??i1_I2C_Master_Start 0070              ??i1_I2C_Master_Write 0074          __end_of_I2C_Master_Start 16FD  
        __end_of_I2C_Master_Write 080A                        _INTCONbits 000B                          isdigit@c 0021  
                        intlevel1 0000                         sprintf@ap 0039                         sprintf@sp 0040  
                ___lwmod@dividend 002A                  ___lldiv@dividend 0024                    Set_month@month 0026  
                       stringcode 070A                        _OSCCONbits 008F                      i1Set_day@day 0076  
                    i1Set_min@min 0076                      i1Set_sec@sec 0076           __end_of_I2C_Master_Init 0B85  
         __end_of_I2C_Master_Read 0955           __end_of_I2C_Master_Wait 06FB           __end_of_I2C_Master_Stop 1706  
              Lcd_Set_Cursor@temp 0026                          sprintf@c 003F                          sprintf@f 002E  
                ___lldiv@quotient 0029                 I2C_Master_Write@d 0022                   ___lwmod@divisor 0028  
                 ___lwmod@counter 002D                          stringdir 070A                          stringtab 0700  
                     _SSPCON2bits 0091                       i1_Set_month 08C5                        i1_Set_hour 0867  
                      i1_Set_year 08F4  
